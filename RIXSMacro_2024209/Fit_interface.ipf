#pragma rtGlobals=1		// Use modern global access method.Function Update_par_list(flag)	variable flag			DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		WAVE /T FitFnName_list=DFR_fit:FitFnName_list	WAVE /B FitFnName_list_sel=DFR_fit:FitFnName_list_sel		SetDatafolder DFR_panel		Wave /T FitPar_list=DFR_panel:FitPar_list	Wave /B FitPar_list_sel=DFR_panel:FitPar_list_sel	Wave /T FitPar_list_title=DFR_panel:FitPar_list_title				NVAR Pathnum=DFR_panel:gv_pathnum		Variable Fnnum//=dimsize(FitFnName_list,0)-1			Make /o/n=(0) FitPar_Fnnum,FitPar_Parnum	Make /o/t/n=(0) FitPar_FnName		Variable parsumnum		Variable index=1	String Fnstr		do		Fnstr=FitFnName_list[pathnum][index][0]				if (strlen(Fnstr)==0)			if (index==1)			redimension /N=(0) FitPar_Fnnum,FitPar_list_title,FitPar_FnName,FitPar_Parnum			endif			break		endif		Fnnum+=1		redimension /N=(Fnnum) FitPar_Fnnum,FitPar_Parnum,FitPar_FnName		redimension /N=(Fnnum*3) FitPar_list_title		FitPar_Fnnum[Fnnum-1]=str2num(FitFnName_list[pathnum][index][2])		FitPar_FnName[Fnnum-1]=FitFnName_list[pathnum][index][1]		FitPar_list_title[Fnnum*3-3]=FitFnName_list[pathnum][index][1]		FitPar_list_title[Fnnum*3-2]=FitFnName_list[pathnum][index][0]		FitPar_list_title[Fnnum*3-1]=""	index+=1	while (index<dimsize(FitFnName_list,1))			Initial_Par_Wave()		//flag=1 load from savepara 	//flag=0 no load, or only load no Hold value	if (flag)		update_savePara_to_coef()		update_Coef_to_Listbox()	else		step_update_savePara_to_coef()		update_Coef_to_listbox()	endif		SetDatafolder DFEndFunction Initial_Par_Wave()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")	SetDatafolder DF_panel		Wave /T PeakFns=DFR_panel:PeakFns	Wave /T bkgFns=DFR_panel:bkgFns	WAVE /B FitFnName_list_sel=DFR_fit:FitFnName_list_sel		Wave /T FitPar_list=DFR_panel:FitPar_list	Wave /B FitPar_list_sel=DFR_panel:FitPar_list_sel		Wave FitPar_Fnnum=DFR_panel:FitPar_Fnnum	Wave FitPar_Parnum=DFR_panel:FitPar_Parnum		NVAR pathnum=DFR_panel:gv_pathnum		NVAR gv_Fermiflag=DFR_panel:gv_Fermiflag	NVAR gv_Convolveflag=DFR_panel:gv_Convolveflag	NVAR gv_Offsetflag=DFR_panel:gv_Offsetflag    NVAR gv_symbkgflag=DFR_panel:gv_symbkgflag    NVAR gv_absbkgflag=DFR_panel:gv_absbkgflag        gv_Fermiflag=0    gv_Convolveflag=0	gv_Offsetflag=0	gv_symbkgflag=0	gv_absbkgflag=0		if (numpnts(FitPar_Fnnum)==0)		redimension /n=(0,0) FitPar_list		redimension /n=(0,0,-1) FitPar_list_sel		redimension /n=(0,0) FitPar_list_parnum		SetDatafolder DF		return 0	endif		Variable index,parindex,parsumindex	Variable parnum,Fnnum	Variable parsum	Variable parmax=0		do		if (index>=numpnts(FitPar_Fnnum))		break		endif		Fnnum=FitPar_Fnnum[index]		if (Fnnum>=400)			Fnnum-=400			Wave /T FNlist=DFR_panel:bkgFns		elseif (Fnnum>=200)			Fnnum-=200			Wave /T FNlist=DFR_panel:peakFns		elseif (Fnnum>=0)			switch(Fnnum)			case 1:				gv_Fermiflag=1				break			case 2:				gv_Convolveflag=parsumindex				break			case 3:				gv_Offsetflag=1				break			case 4:				gv_symbkgflag=1				break			case 5:				gv_absbkgflag=1				break			endswitch			if (Fnnum>4)				parnum=0				FitPar_Parnum[index]=parnum				index+=1				continue			else				Fnnum-=1				Wave /T FNlist=DFR_panel:coefFns			endif		else			SetDatafolder DF			return 0		endif				parnum=str2num(FNlist[Fnnum][1])				if (parnum>parmax)			parmax=parnum		endif			FitPar_Parnum[index]=parnum			index+=1	while (index<numpnts(FitPar_Fnnum))		redimension /n=(parmax,numpnts(FitPar_Fnnum)*3) FitPar_list	redimension /n=(parmax,numpnts(FitPar_Fnnum)*3,-1) FitPar_list_sel	FitPar_list=""	FitPar_list_sel=0		Make /o/n=(dimsize(FitPar_list,0),dimsize(FitPar_list,1)/3) FitPar_list_parnum	FitPar_list_parnum=Nan		Variable SC=Screensize(5)	Listbox Fit_lb1,widths={70*SC,70*SC,20*SC}		index=0		do		if (index>=numpnts(FitPar_Fnnum))		break		endif		Fnnum=FitPar_Fnnum[index]		if (Fnnum>=400)			Fnnum-=400			Wave /T FNlist=DFR_panel:bkgFns		elseif (Fnnum>=200)			Fnnum-=200			Wave /T FNlist=DFR_panel:peakFns		elseif (Fnnum>=0)			switch(Fnnum)			case 1:				gv_Fermiflag=1				break			case 2:				gv_Convolveflag=parsumindex				break			case 3:				gv_Offsetflag=1				break			case 4:				gv_symbkgflag=1				break			case 5:				gv_absbkgflag=1				break			endswitch			if (Fnnum>4)				parnum=0				FitPar_list[][index*3]=""				FitPar_list[][index*3+1]=""				FitPar_list[][index*3+2]=""				FitPar_list_sel[][index*3][0]=0				FitPar_list_sel[][index*3+1][0]=0				FitPar_list_sel[][index*3+2][0]=0				Listbox Fit_lb1,widths+={70,70,20}				FitPar_list_sel[0][index*3][1]=FitFnName_list_sel[pathnum][index+1][1]				FitPar_list_parnum[][index]=Nan				//FitPar_Parnum[index]=parnum				index+=1				continue			else				Fnnum-=1				Wave /T FNlist=DFR_panel:coefFns			endif		else			SetDatafolder DF			return 0		endif			parnum=str2num(FNlist[Fnnum][1])						parindex=0			do				FitPar_list[parindex][index*3]="K"+num2str(parsumindex)+":"+FNlist[Fnnum][2+parindex]				FitPar_list[parindex][index*3+1]=""				FitPar_list[parindex][index*3+2]=""				FitPar_list_sel[parindex][index*3][0]=0				FitPar_list_sel[parindex][index*3+1][0]=2				FitPar_list_sel[parindex][index*3+2][0]=32				FitPar_list_parnum[parindex][index]=parsumindex				parsumindex+=1			parindex+=1			while (parindex<parnum)			if (parnum<dimsize(FitPar_list,0))				FitPar_list_parnum[parnum,inf][index]=Nan			endif			Listbox Fit_lb1,widths+={70*SC,70*SC,20*SC}			FitPar_list_sel[0,parnum-1][index*3][1]=FitFnName_list_sel[pathnum][index+1][1]			parsum+=parnum			//FitPar_Parnum[index]=parnum	index+=1	while (index<numpnts(FitPar_Fnnum))		return parsumEndFunction FitPar_Listbox_proc(ctrlName,row,col,event) : ListboxControl	String ctrlName     // name of this control	Variable row        // row if click in interior, -1 if click in title	Variable col        // column number	Variable event      // event code		DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		NVAR gv_parsel_col=DFR_panel:gv_parsel_col	NVAR gv_parsel_row=DFR_panel:gv_parsel_row	Wave FitPar_Fnnum=DFR_panel:FitPar_Fnnum	Wave /T FitPar_list=DFR_panel:FitPar_list	Wave FitPar_list_parnum=DFR_panel:FitPar_list_parnum	Wave w_sigma=DFR_panel:w_sigma	Wave W_paramConfidenceInterval=DFR_panel:W_paramConfidenceInterval			if ((event==1)||(event==4))		gv_parsel_col=col		gv_parsel_row=row				 SVAR gs_parName=DFR_panel:gs_parName		 NVAR gv_parError=DFR_panel:gv_parError		 NVAR gv_parValue=DFR_panel:gv_parValue		 NVAR gv_parConf=DFR_panel:gv_parconf		 		 gs_parName=FitPar_list[row][(col-mod(col,3))]		 gv_parValue=str2num(FitPar_list[row][(col-mod(col,3))+1])		 gv_parError=w_sigma[FitPar_list_parnum[row][(col-mod(col,3))]]		 gv_parConf=W_paramConfidenceInterval[FitPar_list_parnum[row][(col-mod(col,3))]]			//print FitPar_Fnnum[fnnum]	endif		if (event==7)		update_listbox_to_coef()		update_coef_to_SavePara()		update_display_curve(1)	endif		if (event==13)		update_curvefit_hdstr()		update_coef_to_SavePara()	endif			return 0EndFunction step_update_savePara_to_coef()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		NVAR gv_protectflag=DFR_panel:gv_protectflag		if (gv_protectflag==0)		return 0	endif		SetDatafolder DFR_panel		Wave /T FitPar_FnName=DFR_panel:FitPar_FnName	Wave FitPar_parnum=DFR_panel:FitPar_parnum				if (numpnts(FitPar_parnum)==0)		SetDatafolder DF		return 0	endif		SVAR CurveFit_hdstr=DFR_panel:CurveFit_hdstr	Wave CurveFit_coef=DFR_panel:CurveFit_coef		Variable parsum=sum(FitPar_Parnum)	redimension /n=(parsum) CurveFit_coef		Make /o/n=(sum(FitPar_parnum)) w_sigma,W_ParamConfidenceInterval	w_sigma=0	W_ParamConfidenceInterval=0				NVAR pathnum=DFR_panel:gv_pathnum		Variable index=0	variable parnum,parindex=0,parsumindex=0	String peakname,Savewavename	Variable parvalue	do		peakname=FitPar_FnName[index]				Savewavename="SavePar_"+Peakname		Wave /Z FitSave_Para=DFR_fit:$Savewavename				parnum=FitPar_parnum[index]		if (parnum>0)			parindex=0			do 				if (parindex>=parnum)					break				endif								if (stringmatch(CurveFit_hdstr[parsumindex],"1"))															parvalue=FitSave_Para[pathnum][parindex][0]					if (numtype(parvalue)==2)						FitSave_Para[pathnum][parindex][0]=0						parvalue=0					endif					CurveFit_coef[parsumindex]=parvalue				endif											parsumindex+=1			parindex+=1			while (parindex<parnum)		endif	index+=1	while (index<numpnts(FitPar_parnum))		SetDatafolder DFEndFunction update_savePara_to_coef()		DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		SetDatafolder DFR_panel			Wave /T FitPar_FnName=DFR_panel:FitPar_FnName	Wave FitPar_parnum=DFR_panel:FitPar_parnum				if (numpnts(FitPar_parnum)==0)		SetDatafolder DF		return 0	endif				SVAR CurveFit_hdstr=DFR_panel:CurveFit_hdstr		CurveFit_hdstr=""			Wave CurveFit_coef=DFR_panel:CurveFit_coef	Variable parsum=sum(FitPar_Parnum)	redimension /n=(parsum) CurveFit_coef		Make /o/n=(sum(FitPar_parnum)) w_sigma,W_ParamConfidenceInterval	w_sigma=0	W_ParamConfidenceInterval=0				NVAR pathnum=DFR_panel:gv_pathnum		Variable index=0	variable parnum,parindex=0,parsumindex=0	String peakname,Savewavename	Variable parvalue	do		peakname=FitPar_FnName[index]				Savewavename="SavePar_"+Peakname		Wave /Z FitSave_Para=DFR_fit:$Savewavename				parnum=FitPar_parnum[index]		if (parnum>0)			parindex=0			do 				if (parindex>=parnum)					break				endif								parvalue=FitSave_Para[pathnum][parindex][0]				if (numtype(parvalue)==2)					FitSave_Para[pathnum][parindex][0]=0					parvalue=0				endif				CurveFit_coef[parsumindex]=parvalue								parvalue=FitSave_Para[pathnum][parindex][1] //hold				if (numtype(parvalue)==2)					FitSave_Para[pathnum][parindex][1]=0					parvalue=0				endif								if (parvalue==0)					CurveFit_hdstr+="0"				else					CurveFit_hdstr+="1"				endif												parvalue=FitSave_Para[pathnum][parindex][2] //Error				if (numtype(parvalue)==2)					FitSave_Para[pathnum][parindex][2]=0					parvalue=0				endif					w_sigma[parsumindex]=parvalue								parvalue=FitSave_Para[pathnum][parindex][3] //conf				if (numtype(parvalue)==2)					FitSave_Para[pathnum][parindex][3]=0					parvalue=0				endif					W_ParamConfidenceInterval[parsumindex]=parvalue											parsumindex+=1			parindex+=1			while (parindex<parnum)		endif	index+=1	while (index<numpnts(FitPar_parnum))		update_SavePara_to_constrain()	update_SavePara_to_Curves()		SetDatafolder DF	EndFunction update_SavePara_to_constrain()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		SVAR CurveFit_constrain=DFR_panel:CurveFit_constrain		NVAR pathnum=DFR_panel:gv_pathnum		Wave /T FitFnSave_Constrain=DFR_fit:FitFnSave_Constrain	CurveFit_constrain=FitFnSave_Constrain[pathnum]		Wave /T Fit_Constrain_list=DFR_panel:Fit_Constrain_list		SlistToWave(CurveFit_constrain,0,";",Nan,Nan)			Wave /T w_StringList	duplicate /o /t w_StringList,Fit_Constrain_list			Killwaves /Z w_StringListEnd	Function update_SavePara_to_Curves()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		SetDatafolder DFR_panel		Wave w_trace=DFR_common:w_trace	NVAR pathnum=DFR_panel:gv_pathnum	Wave FitSave_DataWave=DFR_fit:FitSave_DataWave		NVAR gv_showconfflag=DFR_panel:gv_showconfflag	NVAR gv_showpredflag=DFR_panel:gv_showpredflag		duplicate /o w_trace, w_res	w_res=FitSave_DataWave[pathnum][p][0]			String notestr=note(FitSave_DataWave)	if (strsearch(notestr,"Conf_Range"+num2str(pathnum),0)==-1)		gv_showconfflag=0		gv_showpredflag=0		SetDatafolder DF		return 0	else		String savestr=stringbykey("Conf_Range"+num2str(pathnum),notestr,"=","\r")		Variable confnum,confx0,confx1		sscanf savestr,"%g,%g,%g",confnum,confx0,confx1		make /o/n=(confnum) UC_w_trace,LC_w_trace,UP_w_trace,LP_w_trace		Setscale /I x,confx0,confx1,UC_w_trace,LC_w_trace,UP_w_trace,LP_w_trace	endif			UC_w_trace=FitSave_DataWave[pathnum][p][1]	LC_w_trace=FitSave_DataWave[pathnum][p][2]	UP_w_trace=FitSave_DataWave[pathnum][p][3]	LP_w_trace=FitSave_DataWave[pathnum][p][4]		NVAR gv_weightflag=DFR_panel:gv_weightflag		if (strsearch(notestr,"Weight_Range"+num2str(pathnum),0)==-1)		gv_weightflag=0		SetDatafolder DF		return 0	else		savestr=stringbykey("Weight_Range"+num2str(pathnum),notestr,"=","\r")		sscanf savestr,"%g,%g,%g",confnum,confx0,confx1		Make /o/n=(confnum) w_weight		Setscale /P x, confx0,confx1,w_weight		w_weight=FitSave_DataWave[pathnum][p][5]	endif		SetDatafolder DFEndFunction update_listbox_color(flag)	variable flag	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")	Wave /B FitFnName_list_sel=DFR_fit:FitFnName_list_sel		NVAR gv_pathnum=DFR_panel:gv_pathnum		if (flag==1)		FitFnName_list_sel[gv_pathnum][0][2]=17	else		FitFnName_list_sel[gv_pathnum][0][2]=0	endifEndFunction update_Coef_to_Listbox()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		Wave CurveFit_coef=DFR_panel:CurveFit_coef	SVAR CurveFit_hdstr=DFR_panel:CurveFit_hdstr	Wave/T FitPar_list=DFR_panel:FitPar_list	Wave/B FitPar_list_sel=DFR_panel:FitPar_list_sel	Wave FitPar_list_parnum=DFR_panel:FitPar_list_parnum				if (waveexists(FitPar_list_parnum)==0)		return 0	endif		Variable index,parindex	Variable coefindex	String parstr	do		parindex=0		do			coefindex=FitPar_list_parnum[parindex][index]						if (numtype(coefindex)==0)				if (coefindex>=numpnts(CurveFit_coef))					break				endif				if (stringmatch(CurveFit_hdstr[coefindex],"1"))					FitPar_list_sel[parindex][index*3+2][0]=48										sprintf parstr,"%g",CurveFit_coef[coefindex]					FitPar_list[parindex][index*3+1]=parstr									else					FitPar_list_sel[parindex][index*3+2][0]=32					sprintf parstr,"%g",CurveFit_coef[coefindex]					FitPar_list[parindex][index*3+1]=parstr				endif			endif		parindex+=1		while (parindex<dimsize(FitPar_list_parnum,0))	index+=1	while (index<dimsize(FitPar_list_parnum,1))EndFunction update_listbox_to_coef()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		Wave CurveFit_coef=DFR_panel:CurveFit_coef	Wave/T FitPar_list=DFR_panel:FitPar_list	Wave FitPar_Parnum=DFR_panel:FitPar_Parnum	Wave FitPar_list_parnum=DFR_panel:FitPar_list_parnum	Variable index,parindex	Variable coefindex		Variable parsum=sum(FitPar_Parnum)		redimension /n=(parsum) CurveFit_coef		if (parsum>0)		do		parindex=0		do			coefindex=FitPar_list_parnum[parindex][index]			if (numtype(coefindex)==0)			CurveFit_coef[coefindex]=str2num(FitPar_list[parindex][index*3+1])			endif		parindex+=1		while (parindex<dimsize(FitPar_list_parnum,0))	index+=1	while (index<dimsize(FitPar_list_parnum,1))		update_curvefit_hdstr()		endifEndFunction update_curvefit_hdstr()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		Wave/B FitPar_list_sel=DFR_panel:FitPar_list_sel	SVAR CurveFit_hdstr=DFR_panel:CurveFit_hdstr		CurveFit_hdstr=""		Variable index,parindex	Variable hdstr	do		parindex=0		do			hdstr=FitPar_list_sel[parindex][index][0]			if (hdstr==32)				CurveFit_hdstr+="0"			elseif (hdstr==48)				CurveFit_hdstr+="1"			endif		parindex+=1		while (parindex<dimsize(FitPar_list_sel,0))	index+=1	while (index<dimsize(FitPar_list_sel,1))	EndFunction update_listbox_to_SavePara()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")			Wave /T FitPar_list=DFR_panel:FitPar_list	Wave /B FitPar_list_sel=DFR_panel:FitPar_list_sel	Wave /T FitPar_FnName=DFR_panel:FitPar_FnName		Wave FitPar_parnum=DFR_panel:FitPar_parnum		NVAR pathnum=DFR_panel:gv_pathnum		Variable index=0	variable parnum,parindex=0,parsumindex=0	String parstr,peakname,Savewavename	do		peakname=FitPar_FnName[index]				Savewavename="SavePar_"+Peakname		Wave /T/Z FitSave_Para=DFR_fit:$Savewavename				parnum=FitPar_parnum[index]		if (parnum>0)			parindex=0			do 				parstr=FitPar_list[parindex][3*index+1]				FitSave_Para[pathnum][parindex][0]=parstr								if (FitPar_list_sel[parindex][3*index+2][0]==32)					FitSave_Para[pathnum][parindex][1]="0"				elseif (FitPar_list_sel[parindex][3*index+2][0]==48)					FitSave_Para[pathnum][parindex][1]="1"				endif														parsumindex+=1			parindex+=1			while (parindex<parnum)		endif	index+=1	while (index<numpnts(FitPar_parnum))			SetDatafolder DFEndFunction update_fitpar_from_savePara()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		SVAR gs_fit_leftrange=DFR_panel:gs_fit_leftrange	SVAR gs_fit_rightrange=DFR_panel:gs_fit_rightrange	NVAR gv_fit_autorangeflag=DFR_panel:gv_fit_autorangeflag	NVAR gv_fit_leftrange=DFR_panel:gv_fit_leftrange	NVAR gv_fit_rightrange=DFR_panel:gv_fit_rightrange		NVAr gv_weightflag=DFR_panel:gv_weightflag		Wave w_Trace=DFR_common:w_Trace		NVAR pathnum=DFR_panel:gv_pathnum		Wave /T FitFnSave_Parstr=DFR_fit:FitFnSave_Parstr		String notestr=FitFnSave_Parstr[pathnum]		if (Strlen(notestr)>0)		gs_fit_leftrange=stringbykey("Fitleftrangestr",notestr,"=",";")		gs_fit_rightrange=stringbykey("Fitrightrangestr",notestr,"=",";")		gv_fit_autorangeflag=Numberbykey("Fitautorange",notestr,"=",";")		gv_fit_leftrange=Numberbykey("Fitleftrange",notestr,"=",";")		gv_fit_rightrange=Numberbykey("Fitrightrange",notestr,"=",";")		Variable temp=Numberbykey("Weightflag",notestr,"=",";")		if (numtype(temp)==2)			gv_weightflag=0		else			gv_weightflag=temp		endif				if (gv_fit_autorangeflag==1)			Fitpanel#proc_sv_Autochangefitrange("FitMore_sv2",0,gs_fit_leftrange,"")			Fitpanel#proc_sv_Autochangefitrange("FitMore_sv3",0,gs_fit_rightrange,"")		else			Variable pA=x2pnt(w_trace,gv_fit_leftrange)			Variable pB=x2pnt(w_trace,gv_fit_rightrange)				Cursor /P/H=2 A w_trace pA			Cursor /P/H=2 B w_trace pB		Endif	endif		EndFunction updata_fitpar_to_savePara()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		SVAR CurveFit_constrain=DFR_panel:CurveFit_constrain		NVAR pathnum=DFR_panel:gv_pathnum		Wave /T FitFnSave_Parstr=DFR_fit:FitFnSave_Parstr		String notestr=""	notestr+="Fitautorange=;"	notestr+="Fitleftrangestr=;"	notestr+="Fitrightrangestr=;"	notestr+="Fitleftrange=;"	notestr+="Fitrightrange=;"	notestr+="Weightflag=;"		SVAR gs_fit_leftrange=DFR_panel:gs_fit_leftrange	SVAR gs_fit_rightrange=DFR_panel:gs_fit_rightrange	NVAR gv_fit_autorangeflag=DFR_panel:gv_Fit_autorangeflag	NVAR gv_fit_leftrange=DFR_panel:gv_fit_leftrange	NVAR gv_fit_rightrange=DFR_panel:gv_fit_rightrange	NVAR gV_weightflag=DFR_panel:gv_weightflag		notestr=replacestringbykey("Fitleftrangestr",notestr,gs_fit_leftrange,"=",";")	notestr=replacestringbykey("Fitrightrangestr",notestr,gs_fit_rightrange,"=",";")	notestr=replacenumberbykey("Fitautorange",notestr,gv_fit_autorangeflag,"=",";")	notestr=replacenumberbykey("Fitleftrange",notestr,gv_fit_leftrange,"=",";")	notestr=replacenumberbykey("Fitrightrange",notestr,gv_fit_rightrange,"=",";")	notestr=replacenumberbykey("Weightflag",notestr,gv_weightflag,"=",";")		FitFnSave_Parstr[pathnum]=notestrEndFunction update_constrain_to_SavePara()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		SVAR CurveFit_constrain=DFR_panel:CurveFit_constrain		NVAR pathnum=DFR_panel:gv_pathnum		Wave /T FitFnSave_Constrain=DFR_fit:FitFnSave_Constrain		FitFnSave_Constrain[pathnum]=CurveFit_constrain	EndFunction update_curve_to_savePara()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")			NVAR pathnum=DFR_panel:gv_pathnum	//save res	Wave w_res=DFR_panel:w_res		Wave FitSave_DataWave=DFR_fit:FitSave_DataWave	FitSave_DataWave[pathnum][][0]=Nan	FitSave_DataWave[pathnum][0,numpnts(w_res)-1][0]=w_res[q]		//save conf wave	Wave UC_w_trace=DFR_panel:UC_w_trace		Wave LC_w_trace=DFR_panel:LC_w_trace		Wave FitSave_DataWave=DFR_fit:FitSave_DataWave	FitSave_DataWave[pathnum][][1]=Nan	FitSave_DataWave[pathnum][0,numpnts(UC_w_trace)-1][1]=UC_w_trace[q]	FitSave_DataWave[pathnum][][2]=Nan	FitSave_DataWave[pathnum][0,numpnts(LC_w_trace)-1][2]=LC_w_trace[q]		//save pred wave	Wave UP_w_trace=DFR_panel:UP_w_trace		Wave LP_w_trace=DFR_panel:LP_w_trace		Wave FitSave_DataWave=DFR_fit:FitSave_DataWave	FitSave_DataWave[pathnum][][3]=Nan	FitSave_DataWave[pathnum][0,numpnts(UP_w_trace)-1][3]=UP_w_trace[q]	FitSave_DataWave[pathnum][][4]=Nan	FitSave_DataWave[pathnum][0,numpnts(LP_w_trace)-1][4]=LP_w_trace[q]		//save weight wave		NVAR gv_weightflag=DFR_panel:gv_weightflag	if (gv_weightflag)		Wave /Z w_weight=DFR_panel:w_weight		FitSave_DataWave[pathnum][][5]=w_weight[q]	else		FitSave_DataWave[pathnum][][5]=Nan	endif		String notestr=note(FitSave_DataWave)		string savestr	NVAR gv_fit_leftrange=DFR_panel:gv_fit_leftrange	NVAR gv_fit_rightrange=DFR_panel:gv_fit_rightrange		sprintf savestr,"%g,%g,%g",numpnts(UP_w_trace),gv_fit_leftrange,gv_fit_rightrange		if (strsearch(notestr,"Conf_Range"+num2str(pathnum),0)==-1)		notestr+="Conf_Range"+num2str(pathnum)+"="+savestr+"\r"	else		notestr=replacestringbykey("Conf_Range"+num2str(pathnum),notestr,savestr,"=","\r")	endif			if (gv_weightflag)		sprintf savestr,"%g,%g,%g",numpnts(w_weight),leftx(w_weight),deltax(w_weight)		if (strsearch(notestr,"Weight_Range"+num2str(pathnum),0)==-1)			notestr+="Weight_Range"+num2str(pathnum)+"="+savestr+"\r"		else			notestr=replacestringbykey("Weight_Range"+num2str(pathnum),notestr,savestr,"=","\r")		endif	endif		note /K FitSave_DataWave,notestrEndFunction update_coef_to_SavePara()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")	DFREF DFR_curve=$(DF_panel+":Fit_curves")		Wave CurveFit_coef=DFR_panel:CurveFit_coef	SVAR CurveFit_hdstr=DFR_panel:CurveFit_hdstr		Wave /T FitPar_list=DFR_panel:FitPar_list	Wave /B FitPar_list_sel=DFR_panel:FitPar_list_sel	Wave /T FitPar_FnName=DFR_panel:FitPar_FnName	Wave w_sigma=DFR_panel:w_sigma	Wave W_paramConfidenceInterval=DFR_panel:W_paramConfidenceInterval			NVAR pathnum=DFR_panel:gv_pathnum			Wave FitPar_parnum=DFR_panel:FitPar_parnum			Variable index=0	variable parnum,parindex=0,parsumindex=0	String peakname,Savewavename	Variable parvalue	do		if (parsumindex>=numpnts(CurveFit_coef))			break		endif		peakname=FitPar_FnName[index]				Savewavename="SavePar_"+Peakname		Wave /Z FitSave_Para=DFR_fit:$Savewavename						parnum=FitPar_parnum[index]		if (parnum>0)			parindex=0			do 				parvalue=CurveFit_coef[parsumindex]								FitSave_Para[pathnum][parindex][0]=parvalue  //save value								FitSave_Para[pathnum][parindex][1]=str2num(CurveFit_hdstr[parsumindex]) //save hdstr														parvalue=w_sigma[parsumindex]								FitSave_Para[pathnum][parindex][2]=parvalue //save error												parvalue=W_paramConfidenceInterval[parsumindex]								FitSave_Para[pathnum][parindex][3]=parvalue //save conf													parsumindex+=1			parindex+=1			while (parindex<parnum)		endif	index+=1	while (index<numpnts(FitPar_parnum))		index=-2	do		if (index>=numpnts(FitPar_FnName))			break		endif				if (index==-2)			Savewavename="SaveImage_fitData"			Wave /Z SaveImage=DFR_fit:$Savewavename			Wave /Z fit_curves=DFR_curve:w_fitData		elseif (index==-1)			Savewavename="SaveImage_rawData"			Wave /Z SaveImage=DFR_fit:$Savewavename			Wave /Z fit_curves=DFR_curve:w_rawData		else			Savewavename="SaveImage_"+FitPar_FnName[index]			Wave /Z SaveImage=DFR_fit:$Savewavename			Wave /Z fit_curves=DFR_curve:$FitPar_FnName[index]		endif				if (waveexists(fit_curves)==0)			index+=1			continue		endif				if (waveexists(SaveImage)==0)			Make /o/n=(dimsize(FitSave_Para,0),numpnts(fit_curves)) DFR_fit:$Savewavename			Wave /Z SaveImage=DFR_fit:$Savewavename		else			if (dimsize(FitSave_Para,0)!=dimsize(SaveImage,0))				redimension  /n=(dimsize(FitSave_Para,0), -1)  Saveimage			endif		endif				if (dimsize(SaveImage,1)<numpnts(fit_curves))			redimension /n=(-1,numpnts(fit_curves)) SaveImage		endif				SaveImage[pathnum][]=fit_curves[q]				String notestr=note(SaveImage)				String keystr="Line"+num2str(pathnum)				if (strsearch(notestr,keystr+"x0=",0)==-1)			notestr+=keystr+"x0=\r"			notestr+=keystr+"dx=\r"			notestr+=keystr+"xn=\r"		endif						notestr=ReplaceNumberByKey(keystr+"x0", notestr, leftx(fit_curves),"=","\r")			notestr=ReplaceNumberByKey(keystr+"dx", notestr, deltax(fit_curves),"=","\r")			notestr=ReplaceNumberByKey(keystr+"xn", notestr, numpnts(fit_curves),"=","\r")					note /K Saveimage		note SaveImage notestr				index+=1	while (index<numpnts(FitPar_FnName))						update_constrain_to_SavePara() //save constrain		update_curve_to_savePara()		updata_fitpar_to_savePara()		SetDatafolder DF	End//////////////////////////////////update disp curve///////////////////////////////////Function update_display_curve(dispflag)	Variable dispflag	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		Wave /B FitPar_list_sel=DFR_panel:FitPar_list_sel	SVAR gs_FitPeakbkglist=DFR_panel:gs_FitPeakbkglist	NVAR gv_pathnum=DFR_panel:gv_pathnum	NVAR  gv_symbkgflag=DFR_panel:gv_symbkgflag    	NVAR gv_absbkgflag=DFR_panel:gv_absbkgflag    	Wave/Z FitPar_Fnnum=DFR_panel:FitPar_Fnnum	Wave FitPar_parnum=DFR_panel:FitPar_parnum		//if (Waveexists(FitPar_Fnnum)==0)	//	SetDatafolder DF 	//	return 0	//elseif (numpnts(FitPar_Fnnum)==0)	//	SetDatafolder DF 	//	return 0	//endif			Wave /T FitPar_FnName=DFR_panel:FitPar_FnName	Wave Color_New10_curve=DFR_panel:Color_new10_curve		Wave w_trace=DFR_common:w_trace	DFREF DFR_curve=$(DF_panel+":Fit_curves")	SetDatafolder DFR_curve		duplicate /o w_trace DFR_curve:w_rawData	Wave w_rawdata=DFR_curve:w_rawData			//duplicate /o w_fit DFR_curve:w_fitData	Wave CurveFit_coef=DFR_panel:CurveFit_coef		if (dispflag==1)		init_disp_fitcurve(DFR_curve,w_rawdata,"w_fitData")		Wave w_fitdata=DFR_curve:w_fitData		Cal_single_peak(w_trace,FitPar_Fnnum,FitPar_parnum,w_fitData,CurveFit_coef,-1,gv_symbkgflag,gv_absbkgflag)		checkdisplayed w_fitData		if (v_flag==0)			Appendtograph w_fitData			Modifygraph rgb(w_fitData)=(0,0,0)		endif			else		removefromgraph /z w_fitdata	endif							Variable index	Variable fnnum	String Peakname				index=0		do			if (index>=itemsinlist(gs_FitPeakbkglist))				break			endif			peakname=stringfromlist(index,gs_FitPeakbkglist,";")			removefromgraph /Z $peakname			index+=1		while (index<itemsinlist(gs_FitPeakbkglist))					if (dispflag==1)		index=0		do 		if (index>=numpnts(FitPar_Fnnum))		break		endif				fnnum=FitPar_Fnnum[index]		if (fnnum>=200)			peakname=FitPar_FnName[index]				init_disp_fitcurve(DFR_curve,w_rawdata,peakname)						Wave peak=$peakname							Cal_single_peak(w_trace,FitPar_Fnnum,FitPar_parnum,peak,CurveFit_coef,index,gv_symbkgflag,gv_absbkgflag)				Variable peakindex=whichlistitem(peakname,gs_FitPeakbkglist,";")								checkdisplayed peak				if (v_flag==0)					Appendtograph Peak					Variable colorindex=FitPar_list_sel[0][index*3][1]					String cmd					sprintf cmd,"Modifygraph rgb("+peakname+")=(%g,%g,%g)",Color_New10_curve[colorindex][0],Color_New10_curve[colorindex][1],Color_New10_curve[colorindex][2]					Execute /Q/Z cmd				endif			endif	index+=1	while (index<numpnts(FitPar_Fnnum))		endif		update_conf_curve(dispflag)		update_Res_curve(dispflag)		doupdate;	SetDatafolder DFEndFunction Cal_single_peak(w_trace,FitPar_Fnnum,FitPar_parnum,peak,coef,Peakindex,gv_symbkgflag,gv_absbkgflag)	Wave w_Trace	wave FitPar_Fnnum	Wave FitPar_parnum	Wave Peak,coef	Variable peakindex	variable  gv_symbkgflag//=DFR_panel:gv_symbkgflag    Variable gv_absbkgflag//=DFR_panel:gv_absbkgflag    			if (peakindex==-1)		duplicate /o peak,peak_x_temp		Peak_x_temp=x		ARPES_composed_FitFn(coef,peak,peak_x_temp)	else		MultiThread Peak=composed_FitFn(coef,x,w_trace,FitPar_Fnnum,FitPar_parnum,peakindex,gv_symbkgflag,gv_absbkgflag)				//MultiThread Peak=composed_FitFn_test(coef,x,peakindex,DF_panel)			endif			//Killwaves /z Peak_x_temp	EndFunction update_conf_curve(flag)	Variable flag	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		NVAR gv_showconfflag=DFR_panel:gv_showconfflag	//NVAR gv_showResflag=DFR_panel:gv_showResflag	NVAR gv_showpredflag=DFR_panel:gv_showpredflag		if (Flag==0)		gv_showconfflag=0		gv_showpredflag=0	endif		removefromgraph /Z UC_w_trace	removefromgraph /Z LC_w_trace		if (gv_showconfflag)		Wave/Z UC_w_trace=DFR_panel:UC_w_trace		Wave/Z LC_w_trace=DFR_panel:LC_w_trace		if (Waveexists(UC_w_trace))				appendtograph UC_w_trace				appendtograph LC_w_trace				ReorderTraces w_trace,{UC_w_trace,LC_w_trace}				ModifyGraph mode(UC_w_trace)=7,toMode(UC_w_trace)=1				ModifyGraph hbFill(UC_w_trace)=6,useNegPat(UC_w_trace)=1				ModifyGraph hBarNegFill(UC_w_trace)=6				ModifyGraph rgb(UC_w_trace)=(32768,32768,65280)				ModifyGraph rgb(LC_w_trace)=(32768,32768,65280)		endif	endif		removefromgraph /Z UP_w_trace	removefromgraph /Z LP_w_trace		if (gv_showpredflag)		Wave/Z UP_w_trace=DFR_panel:UP_w_trace		Wave/Z LP_w_trace=DFR_panel:LP_w_trace		if (Waveexists(UP_w_trace))			appendtograph UP_w_trace			appendtograph LP_w_trace			ReorderTraces w_trace,{UP_w_trace,LP_w_trace}			ModifyGraph mode(UP_w_trace)=7,toMode(UP_w_trace)=1			ModifyGraph hbFill(UP_w_trace)=6,useNegPat(UP_w_trace)=1;DelayUpdate			ModifyGraph hBarNegFill(UP_w_trace)=6			ModifyGraph rgb(UP_w_trace)=(32768,32768,65280)			ModifyGraph rgb(LP_w_trace)=(32768,32768,65280)		endif	endif	SetDatafolder DFEndFunction returnDefaultweight(w_trace,leftrange,rightrange,flag)	Wave w_trace 	Variable leftrange,rightrange,flag	duplicate /o  w_trace w_trace_smth	Wave w_Trace_smth	smooth 3,w_trace_smth	smooth 3,w_trace_smth	smooth 3,w_trace_smth	smooth 3,w_trace_smth		w_Trace_smth-=w_Trace	wavestats /Q/Z /R=(leftrange,rightrange) w_trace_smth		Killwaves /Z w_Trace_smth	return V_sdev*flagEndFunction proc_ck_weightck(ctrlname,value)	String ctrlname	Variable value	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")	Wave w_trace=DFR_common:w_trace	NVAR gv_fit_leftrange=DFR_panel:gv_fit_leftrange	NVAR gv_fit_rightrange=DFR_panel:gv_fit_rightrange		if (value)		Wave /Z weight_wave=DFR_panel:w_weight		if (waveexists(weight_wave)==0)						Duplicate /o w_trace DFR_panel:w_weight			Wave /Z weight_wave=DFR_panel:w_weight		endif		weight_wave=1	endif		SetDatafolder DFEndFunction proc_bt_showconf(ctrlname)	String ctrlname		DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		NVAR gv_showconfflag=DFR_panel:gv_showconfflag	//NVAR gv_showResflag=DFR_panel:gv_showResflag	NVAR gv_showpredflag=DFR_panel:gv_showpredflag		if (stringmatch(ctrlname,"FitMore_bt3"))		gv_showconfflag=abs(gv_showconfflag-1)	endif		if (stringmatch(ctrlname,"FitMore_bt4"))		gv_showpredflag=abs(gv_showpredflag-1)	endif		update_conf_curve(1)EndFunction proc_bt_showRes(ctrlname)	String ctrlname		DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")			NVAR gv_showResflag=DFR_panel:gv_showResflag				gv_showResflag=abs(gv_showResflag-1)		update_Res_curve(1)EndFunction update_Res_curve(flag)	variable flag	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		NVAR gv_showResflag=DFR_panel:gv_showResflag		if (flag==0)		gv_showResflag=0	endif				if (gv_showResflag)		Wave/Z w_Res=DFR_panel:w_Res		if (Waveexists(w_Res))			checkdisplayed w_Res			if (v_flag==0)				ModifyGraph axisEnab(left)={0,0.8}				appendtograph /B=bottom /L=left_res w_Res				ModifyGraph axisEnab(left_res)={0.82,1}				ModifyGraph freePos(left_res)=0				ModifyGraph mode(w_res)=1				ModifyGraph negRGB(w_res)=(0,0,65280)				ModifyGraph useNegRGB(w_res)=1,usePlusRGB(w_res)=1				ModifyGraph lblPosMode(left_res)=1			endif		else			gv_showResflag=0				ModifyGraph axisEnab(left)={0,1}		endif	else		removefromgraph /Z w_res		ModifyGraph axisEnab(left)={0,1}		endif		SetDatafolder DFEnd///////////////////////////////////////////guess par function //////////////////////////////////////Function Proc_bt_GuessfromMarq(ctrlname)	String ctrlname	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		SetDatafolder DFR_panel		Wave w_trace=DFR_common:w_trace		NVAR gv_parsel_col=DFR_panel:gv_parsel_col	NVAR gv_parsel_row=DFR_panel:gv_parsel_row		Wave FitPar_Fnnum=DFR_panel:FitPar_Fnnum	Wave FitPar_Parnum=DFR_panel:FitPar_Parnum	Wave coef=DFR_panel:CurveFit_coef	Wave FitPar_list_parnum=DFR_panel:FitPar_list_parnum		Variable fnnum=FitPar_Fnnum[(gv_parsel_col-mod(gv_parsel_col,3))/3]	Variable parindex=FitPar_list_parnum[0][(gv_parsel_col-mod(gv_parsel_col,3))/3]-1	Variable parnum=FitPar_Parnum[(gv_parsel_col-mod(gv_parsel_col,3))/3]		Variable x0,x1,p0,p1		GetMarquee left, bottom	x0=V_left	x1=V_right		Make /o/n=(parnum) coef_temp		if (fnnum>=400)		fnnum-=400		switch(fnnum)			case 0:						coef[parindex+1]=wavemin(w_trace,x0,x1)				break				case 1:				CurveFit  /N=1/Q line, kwCWave=coef_temp w_trace(x0,x1)				coef[parindex+1]=0				coef[parindex+2]=coef_temp[0]				coef[parindex+3]=coef_temp[1]				break							case 2:						CurveFit  /N=1/Q poly 3, kwCWave=coef_temp w_trace(x0,x1)				coef[parindex+1]=0				coef[parindex+2]=coef_temp[0]				coef[parindex+3]=coef_temp[1]				coef[parindex+4]=coef_temp[2]//*x + coef[parindex+3]*x*x				break			case 3:						CurveFit  /N=1/Q poly 4, kwCWave=coef_temp w_trace(x0,x1)				coef[parindex+1]=0				coef[parindex+2]=coef_temp[0]				coef[parindex+3]=coef_temp[1]				coef[parindex+4]=coef_temp[2]				coef[parindex+5]=coef_temp[2]				break						case 4:							Make /o/n=(3) coef_temp				CurveFit /K={x1} /N=1/Q exp_XOffset, kwCWave=coef_temp w_trace(x0,x1)				coef[parindex+1]=x1				coef[parindex+2]=coef_temp[0]				coef[parindex+3]=coef_temp[1]				coef[parindex+4]=coef_temp[2]				break			case 5:				//Make /o/n=(3) coef_temp				//CurveFit  /N=1/O/Q poly 3, kwCWave=coef_temp w_trace(x0,x1)				coef[parindex+1]=x0				coef[parindex+2]=w_trace(x0)//coef_temp[0]				coef[parindex+3]=(wavemax(w_trace,x0,x1)-w_trace(x0))/((x1-x0)/2)^2//coef_temp[1]//coef_temp[2]				coef[parindex+4]=x1				coef[parindex+5]=300				//bkg += (coef[parindex+1]+coef[parindex+2]*(x-coef[parindex+3])^2) / (exp( (x-coef[parindex+4])/abs(coef[parindex+5]*KB))+1)				break			case 6:								coef[parindex+1]=x1				coef[parindex+2]=w_trace(x0)/area(w_trace, x0,x1)				//bkg += coef[parindex+1] * area(w_trace, x,0)					break		endswitch	elseif (fnnum>=200)		fnnum-=200		duplicate /o w_trace,w_trace_guess			w_trace_guess-=(w_trace(x1)-w_trace(x0))*(x-x0)/(x1-x0)//w_trace(x0)		Make /o/n=(4) coef_temp		coef_temp[0]=0					switch(fnnum)			case 0:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				break			case 1:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				break			case 2:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				coef[parindex+4]=1				break			case 3:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				coef[parindex+4]=0				coef[parindex+5]=0				coef[parindex+6]=15				break				case 4:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				coef[parindex+4]=0				coef[parindex+5]=0				coef[parindex+6]=15				break				case 5:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				coef[parindex+4]=0				coef[parindex+5]=0				coef[parindex+6]=0				break			case 6:						CurveFit /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				break			case 7:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				coef[parindex+4]=0				break			case 8:						CurveFit  /H="1000"/N=1/Q gauss, kwCWave=coef_temp w_trace_guess(x0,x1)				coef[parindex+1]=coef_temp[2]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[3]				break			endswitch			else			switch(fnnum)			case 0:					coef[parindex+1]=0				coef[parindex+2]=15				break			case 1:				coef[parindex+5]=0.01				break			case 2:				CurveFit  /N=1/O/Q poly 3, kwCWave=coef_temp w_trace(x0,x1)				coef[parindex+1]=coef_temp[0]				coef[parindex+2]=coef_temp[1]				coef[parindex+3]=coef_temp[2]				break							endswitch	endif		 	update_Coef_to_Listbox()	update_coef_to_SavePara()	update_display_curve(1)			SetDatafolder DFEnd	//////////////////////drawing guess/////////////////////////////////Function Proc_bt_GuessfromDrawing(ctrlname)	String ctrlname	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")		String wname=winname(0,65)		NVAR peakmode=DFR_panel:gv_draw_peakmode	peakmode=0			GetAxis/q/w=$wname left	SetAxis left v_min,v_max	SetWindow $wname,hook=Drawing_PeakInsert,hookevents=3,hookcursor=1EndFunction Drawing_PeakInsert(s)  	String s  	  	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	SetActiveSubwindow $winname(0,65)	DFREF DFR_fit=$(DF_panel+":Fit_data")  	 	SetDatafolder DFR_panel		Wave w_trace=DFR_common:w_trace		NVAR gv_parsel_col=DFR_panel:gv_parsel_col	NVAR gv_parsel_row=DFR_panel:gv_parsel_row		Wave FitPar_Fnnum=DFR_panel:FitPar_Fnnum	Wave FitPar_Parnum=DFR_panel:FitPar_Parnum	Wave coef=DFR_panel:CurveFit_coef	Wave FitPar_list_parnum=DFR_panel:FitPar_list_parnum		Variable fnnum=FitPar_Fnnum[(gv_parsel_col-mod(gv_parsel_col,3))/3]	Variable parindex=FitPar_list_parnum[0][(gv_parsel_col-mod(gv_parsel_col,3))/3]-1	Variable parnum=FitPar_Parnum[(gv_parsel_col-mod(gv_parsel_col,3))/3]	String winName=Stringbykey("WINDOW",s)  	Variable xpix,ypix,xaxval,yaxval 	Variable isMouseDown= StrSearch(s,"EVENT:mousedown;",0) > 0  	Variable isMouseMoved=  StrSearch(s,"EVENT:mousemoved;",0) > 0   	Variable isMouseUp=  StrSearch(s,"EVENT:mouseup;",0) > 0   	Variable returnVal= 0  	  	NVAR peakmode=DFR_panel:gv_draw_peakmode  	NVAR Xremember=DFR_panel:gv_draw_Xremember  	NVAR yremember=DFR_panel:gv_draw_yremember   	if (isMouseDown)  		PeakMode+=1  	endif  	if (isMouseup)  		PeakMode+=1 	endif  	  	if (peakMode>(return_draw_steps(fnnum)*2))  		peakmode=0  		SetWindow $winName,hook=$"",hookevents=0,hookcursor=0  		SetAxis/A /W=$winname left  	endif 	if (mod(PeakMode,2)!=0) 		 returnVal=1  	else  		returnVal=0 	 endif 	 if ((isMouseMoved)&&(Peakmode!=0))       	xpix= NumberByKey("MOUSEX",s)		ypix= NumberByKey("MOUSEY",s)		xaxval= AxisValFromPixel("","bottom",xpix)		yaxval= AxisValFromPixel("","left",ypix)		SetWindow $winName,hookcursor=8		if (peakmode<=2)			Xremember=xaxval			Yremember=yaxval		endif       	UpdatePeak(xaxval,yaxval,w_trace,coef,fnnum,parindex,peakMode/2,Xremember,Yremember) 	 else   	 	SetWindow $winName,hookcursor=1	  endif 	  Setdatafolder DF         return ReturnValEndFunction return_draw_steps(fnnum)	Variable fnnum		Variable steps		if (fnnum>=400) ///bkg		fnnum-=400		switch(fnnum)			case 0:					steps=1				break				case 1:				steps=2				break							case 2:						steps=3				break			case 3:						steps=4				break						case 4:							steps=2				break			case 5:				steps=4				break			case 6:				steps=2				break			case 7:				steps=2				break			case 8:				steps=2				break		endswitch	elseif (fnnum>=200)		fnnum-=200				switch(fnnum)			case 0:						steps=2				break			case 1:						steps=2				break			case 2:						steps=3				break			case 3:						steps=2				break				case 4:						steps=2				break				case 5:						steps=2				break			case 6:						steps=2				break			case 7:						steps=2				break			case 8:						steps=2				break			endswitch			else			switch(fnnum)			case 1:					steps=2				break			case 2:				steps=0				break			case 3:				steps=3				break							endswitch	endif	return stepsEndFunction UpdatePeak(xaxval,yaxval,w_trace,coef,fnnum,parindex,mode,xremember,yremember)  	Variable xaxval,yaxval  	Wave w_trace  	Wave coef  	Variable fnnum,parindex  	Variable mode,xremember,yremember  	if (fnnum>=400) ///bkg		fnnum-=400		switch(fnnum)			case 0:					if (mode==1)						coef[parindex+1]=yaxval//=wavemin(w_trace,x0,x1)				endif				break				case 1:				if (mode==1)					coef[parindex+1]=xaxval//coef_temp[0]					coef[parindex+2]=yaxval					coef[parindex+3]=0				elseif (mode==2)										coef[parindex+3]=(yaxval-coef[parindex+2])/(xaxval-coef[parindex+1])				endif				break							case 2:						if (mode==1)					coef[parindex+1]=xaxval//coef_temp[0]					coef[parindex+2]=yaxval					coef[parindex+3]=0					coef[parindex+4]=0				elseif (mode==2)					coef[parindex+3]=(yaxval-coef[parindex+2])/(xaxval-coef[parindex+1])				elseif (mode==3)					coef[parindex+4]=(yaxval-coef[parindex+2]-(xaxval-coef[parindex+1])*coef[parindex+3])/((xaxval-coef[parindex+1])*(xaxval-coef[parindex+1]))				endif				//coef_temp[2]//*x + coef[parindex+3]*x*x				break			case 3:						if (mode==1)					coef[parindex+1]=xaxval//coef_temp[0]					coef[parindex+2]=yaxval					coef[parindex+3]=0					coef[parindex+4]=0					coef[parindex+5]=0				elseif (mode==2)					coef[parindex+3]=(yaxval-coef[parindex+2])/(xaxval-coef[parindex+1])				elseif (mode==3)					coef[parindex+4]=(yaxval-coef[parindex+2]-(xaxval-coef[parindex+1])*coef[parindex+3])/((xaxval-coef[parindex+1])*(xaxval-coef[parindex+1]))				elseif (mode==4)					coef[parindex+5]=(yaxval-coef[parindex+2]-(xaxval-coef[parindex+1])*coef[parindex+3]-coef[parindex+4]*(xaxval-coef[parindex+1])*(xaxval-coef[parindex+1]))/((xaxval-coef[parindex+1])*(xaxval-coef[parindex+1])*(xaxval-coef[parindex+1]))				endif				break						case 4:					if (mode==1)					coef[parindex+1]=xaxval//coef_temp[0]					coef[parindex+2]=yaxval					coef[parindex+3]=0					coef[parindex+4]=10000				elseif (mode==2)					coef[parindex+2]=(yremember*exp(1)-yaxval)/(exp(1)-1)					coef[parindex+3]=(yaxval-yremember)/(exp(1)-1)						coef[parindex+4]=-(xaxval-coef[parindex+1])					//coef[parindex+2]-=coef[parindex+3]				//elseif (mode==3)					//	coef[parindex+4]=ln((yaxval-coef[parindex+2])/coef[parindex+3])/(coef[parindex+1]-xaxval)					//coef[parindex+4]=ln((yaxval-coef[parindex+1])/coef[parindex+2])*coef[parindex+3]+xaxval				endif				break			case 5:				if (mode==1)					coef[parindex+1]=xaxval//coef_temp[0]					coef[parindex+2]=yaxval					coef[parindex+3]=0					coef[parindex+4]=10000					coef[parindex+5]=300				elseif (mode==2)					coef[parindex+3]=(yaxval-coef[parindex+2])/(xaxval-coef[parindex+1])^2				elseif (mode==3)					coef[parindex+4]=xaxval				elseif (mode==4)					Variable kB=8.617385e-5 						coef[parindex+5]=abs(xaxval-coef[parindex+4])/4/KB				endif				break			case 6:				if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval					coef[parindex+3]=0				else					coef[parindex+3]=(yaxval-coef[parindex+2])/area(w_trace, xaxval,coef[parindex+1])				endif				//bkg += coef[parindex+1] * area(w_trace, x,0)					break			case 7:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval					coef[parindex+3]=0.05				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break			case 8:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval					coef[parindex+3]=0.05				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break		endswitch	elseif (fnnum>=200)		fnnum-=200					switch(fnnum)			case 0:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval					coef[parindex+3]=0.05				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break			case 1:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval					coef[parindex+3]=0.05				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break			case 2:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval/50					coef[parindex+3]=0.05					coef[parindex+4]=0				elseif(mode==2)					coef[parindex+3]=abs(xaxval-coef[parindex+1])						elseif (mode==3)							coef[parindex+4]=abs(xaxval-coef[parindex+1])-coef[parindex+3]				endif				break			case 3:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval/50					coef[parindex+3]=0.05					coef[parindex+4]=0					coef[parindex+5]=0					coef[parindex+6]=15				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break			case 4:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval/50					coef[parindex+3]=0.05					coef[parindex+4]=0					coef[parindex+5]=0					coef[parindex+6]=15				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break				case 5:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=yaxval/50					coef[parindex+3]=0.01					coef[parindex+4]=0					coef[parindex+5]=0					coef[parindex+6]=0				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif								break			case 6:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+3]=0.01					variable /C E=cmplx(xaxval,0)					variable /C Gap=cmplx(xaxval,0)					variable /C GGamma=cmplx(0,0.1)					Variable peak = abs(real((E-GGamma)/(sqrt((E-GGamma)*(E-GGamma)-Gap*Gap))))					coef[parindex+2]=yaxval/peak				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])/10				endif				break			case 7:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+3]=0.01					coef[parindex+4]=0										if (xaxval==0)	  						Variable Aw=1/pi/coef[parindex+3]  					else  						print "function to be developed"//						Variable SelfEIm=-coef[parindex+3]-coef[parindex+1]^2*coef[parindex+4]/(xaxval^2+coef[parindex+4]^2)//						Variable SelfERe=coef[parindex+1]^2*x/(xaxval^2+coef[parindex+4]^2)//						 Aw=1/pi*SelfEIm/((x-SelfERe)*(x-SelfERe)+SelfEIm*SelfEIm)					endif										coef[parindex+2]=-yaxval/aw				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break			case 8:						if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+3]=0.01					Aw=0.5/pi*(coef[parindex+3]/((xaxval-abs(coef[parindex+1]))^2+coef[parindex+3]^2)+coef[parindex+3]/((xaxval+abs(coef[parindex+1]))^2+coef[parindex+3]^2))        				coef[parindex+2]=yaxval/aw 				else					coef[parindex+3]=abs(xaxval-coef[parindex+1])				endif				break			endswitch			else			switch(fnnum)			case 1:					if (mode==1)					coef[parindex+1]=xaxval					coef[parindex+2]=15				else					kB=8.617385e-5 						coef[parindex+2]=abs(xaxval-coef[parindex+1])/4/KB				endif				break			case 2:				coef[parindex+5]=0.01				break			case 3:				if (mode==1)					coef[parindex+1]=yaxval//coef_temp[0]					coef[parindex+2]=0					coef[parindex+3]=0				elseif (mode==2)					coef[parindex+2]=(yaxval-coef[parindex+1])/xaxval				elseif (mode==3)					coef[parindex+3]=(yaxval-coef[parindex+1]-xaxval*coef[parindex+2])/(xaxval*xaxval)				endif				break							endswitch	endif 	 	 	update_Coef_to_Listbox()	update_coef_to_SavePara()	update_display_curve(1) End