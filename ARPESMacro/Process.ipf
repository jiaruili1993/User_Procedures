#pragma rtGlobals=1		// Use modern global access method.#pragma version = 0.01Function Apply_proc_macro(ctrlname)	String ctrlname	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		if (stringmatch(ctrlname,"Macro_bt13"))	Wave /T w_Macrolist= DF_normal:w_Macrolist1	SVAR procstr=DF_normal:gs_procstr1	else	Wave /T w_Macrolist= DF_normal:w_Macrolist2	SVAR procstr=DF_normal:gs_procstr2	endif		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal			Variable index,datalayernum,procdone	String wave_path,wave_name	Variable tempsel		do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif			wave_path=toppath				Wave data=$wave_path			GetProList(DF_common,data,NAN)			Panelimageupdate(3)				if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				procdone=macro_autoprocess(wave_path,procstr,datalayernum,0,0)			else				datalayernum=toplayernum				if (processallflag==0)					Setdialogwindow(winname(0,65),data,"crop")					openautoprocesswindow(winname(0,65))				endif				switch (autoprocessflag)				case 0:					break				case 2:	 					procdone=macro_autoprocess(wave_path,procstr,datalayernum,0,0)					break				case 1:					String procstrafter=Getlayernotestr(note(data),toplayernum+1,2)					procdone=macro_autoprocess(wave_path,procstr,datalayernum,0,0)					datalayernum+=procdone					procdone+=macro_autoprocess(wave_path,procstrafter,datalayernum,(toplayernum+1),0)					break				case 10:					procdone=macro_autoprocess(wave_path,procstr,datalayernum,0,1)					break				endswitch			endif			w_sourceNamesSel[index]=tempsel		endif			index+=1	while (index<numpnts(w_sourceNamesSel))			toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath	if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif	panelimageupdate(3)	SetDataFolder DF			EndFunction Add_proc_macro(ctrlname)	String ctrlname	   	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		Wave /T w_proclist=DF_common:w_proclist	NVAR toplayernum=DF_common:gv_toplayernum	SVAR procstr_disp=DF_normal:gs_procstr_disp	Variable procsel		if (stringmatch(ctrlname,"Macro_bt1*"))		Wave /T w_Macrolist= DF_normal:w_Macrolist1		SVAR procstr=DF_normal:gs_procstr1		controlinfo Macro_Lb1		procsel=v_value	else		Wave /T w_Macrolist= DF_normal:w_Macrolist2		SVAR procstr=DF_normal:gs_procstr2		controlinfo Macro_Lb2		procsel=v_value	endif		if (stringmatch(ctrlname,"Macro_bt*0"))		redimension /N=(numpnts(w_Macrolist)+1),w_Macrolist		w_Macrolist[numpnts(w_Macrolist)-1]=w_proclist[toplayernum]		//deletepoints numpnts(w_Macrolist)-1,1,w_Macrolist 		String layername="Layer_"+num2str(numpnts(w_Macrolist)-1)+"\r"		procstr+=layername+procstr_disp+layername	endif		if (stringmatch(ctrlname,"Macro_bt*1"))		deletepoints procsel,1,w_Macrolist		procstr=deleteprocstr(procstr,procsel)		procstr=reorderprocstr(procstr,numpnts(w_Macrolist))	endif		if (stringmatch(ctrlname,"Macro_bt*2"))		redimension /N=0 w_macrolist		w_macrolist=""		procstr=""	endif		DFREF DF_loadfile=$DF_global			if (stringmatch(ctrlname,"Macro_bt1*"))		//Wave /T auto_w_Macrolist1=DF_loadfile:w_Macrolist1		SVar auto_gs_procstr1=DF_loadfile:gs_procstr1		auto_gs_procstr1=procstr		duplicate /o w_macrolist DF_loadfile:w_Macrolist1	else		//Wave /T auto_w_Macrolist2=DF_loadfile:w_Macrolist2		SVar auto_gs_procstr2=DF_loadfile:gs_procstr2		auto_gs_procstr2=procstr		duplicate /o w_macrolist DF_loadfile:w_Macrolist2	endif		EndFunction/S deleteprocstr(procstr,procsel)	String procstr	Variable procsel	Variable tempx0,tempx1	String layername="Layer_"+num2str(procsel)+"\r"	tempx0=strsearch(procstr,layername,0)	tempx1=strsearch(procstr,layername,inf,1)+strlen(layername)	return procstr[0,tempx0-1]+procstr[tempx1,inf]EndFunction/S reorderprocstr(procstr,procnum)	String procstr	Variable procnum	Variable index=0	Variable tempx0,tempx1	String tempstr,layername	tempx0=strsearch(procstr,"Layer_",0)	tempx1=strsearch(procstr,"\r",tempx0)	do		if ((tempx0<0)||(tempx1<0))			break		endif		tempstr=procstr[tempx0,tempx1-1]		layername="Layer_"+num2str(index)		procstr=replacestring(tempstr,procstr,layername,2)		tempx0=strsearch(procstr,"Layer_",tempx1)		tempx1=strsearch(procstr,"\r",tempx0)		tempx0=strsearch(procstr,"Layer_",tempx1)		tempx1=strsearch(procstr,"\r",tempx0)		index+=1	while (1)	return procstrEnd//////////////////////////rescale energy ////////////////////////////////////////////////////////////////////// Function rescale_energy(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag			Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal		NVAR EF=DF_normal:gv_csr_e	NVAR E0=DF_common:gv_e0	NVAR E_input=DF_normal:gv_input_energy	Variable Efrom,Eto		Variable initial=0	if (stringmatch(ctrlname,"Scale_b0"))		initial=1		Efrom=EF		Eto=0	else		initial=0		Efrom=e0		Eto=E_input	endif				Variable index,datalayernum,procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))		toppath=w_DF[topdfrow]+w_sourceNames[index]		topname=w_sourceNames[index]		tempsel=w_sourceNamesSel[index]		w_sourceNamesSel[index]=0			if (strlen(toppath)==0)			break		endif		wave_path=toppath			Wave data=$wave_path		GetProList(DF_common,data,nan)		Panelimageupdate(3)			if (toplayernum==(dimsize(data,2)-1))			datalayernum=dimsize(data,2)-1 //toplayer			procdone=macro_energy_rescale(wave_path,datalayernum,Efrom,Eto,initial,0)		else			datalayernum=toplayernum			if (processallflag==0)				Setdialogwindow(winname(0,65),data,"Eres")				openautoprocesswindow(winname(0,65))			endif			switch (autoprocessflag)			case 0:				break			case 2:				procdone=macro_energy_rescale(wave_path,datalayernum,Efrom,Eto,initial,0)				break			case 1:				String procstr=Getlayernotestr(note(data),toplayernum+1,2)				String layerstr=Getlayernotestr(note(data),toplayernum+1,1)				Variable procnum=numberbykey("processnumber",layerstr,"=","\r")				procdone=macro_energy_rescale(wave_path,datalayernum,Efrom,Eto,initial,0)				datalayernum+=procdone								if (initial==1)					Variable procnum_now=4				else					procnum_now=41				endif					if ((procnum==procnum_now)&&(forceinsertflag==0))						procstr=Getlayernotestr(procstr,toplayernum+2,2)						procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)					else						procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)					endif				break			case 10:				procdone=macro_energy_rescale(wave_path,datalayernum,Efrom,Eto,initial,1)				break			endswitch		endif		w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath		if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)						SetDatafolder DFEnd  Function macro_energy_rescale(itempath,toplayernum,Efrom,Eto,initialflag,flag)	String itempath	Variable toplayernum	Variable Efrom,Eto	Variable initialflag,flag 		Wave data=$itempath		GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		Variable E0,E1,e_shift	E0=M_y0(tempimage)	E1=M_y1(tempimage)		e_shift=Eto-Efrom		Setscale /I y, (E0+e_shift),(E1+e_shift),tempimage		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		if (initialflag==1)			String notestr=procstring(4)			notestr=ReplaceStringByKey("Wavetype",notestr,"SetEF","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,4,"=","\r")				String datanotestr=Getlayernotestr(note(data),toplayernum,0)		Variable FermiE=numberbykey("FermiEnergy",datanotestr,"=","\r")		if (numtype(FermiE)==2)			notestr=replacenumberbykey("FermiEnergy",notestr,Efrom,"=","\r")		else			notestr=replacenumberbykey("FermiEnergy",notestr,(FermiE-e_shift),"=","\r")		endif	else		notestr=procstring(41)			notestr=ReplaceStringByKey("Wavetype",notestr,"E_Shift","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,41,"=","\r")						datanotestr=Getlayernotestr(note(data),toplayernum,0)		FermiE=numberbykey("FermiEnergy",datanotestr,"=","\r")		if (numtype(FermiE)==2)			notestr=replacenumberbykey("FermiEnergy",notestr,Nan,"=","\r")					else			notestr=replacenumberbykey("FermiEnergy",notestr,(FermiE-e_shift),"=","\r")		endif	endif		notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("EnergyInitial",notestr,Efrom,"=","\r")	notestr=ReplacenumberByKey("EnergyFinal",notestr,Eto,"=","\r")	notestr=ReplacenumberByKey("initialflag",notestr,initialflag,"=","\r")		Add_proc_note(data,targetlayernum,notestr)	killwaves /Z tempimage	return  procdoneEnd	 //////////////////////////rescale axes ////////////////////////////////////////////////////////////////////// Function rescale_axes(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal		NVAR csr_Set=DF_normal:gv_csr_set	NVAR ratio=DF_normal:gv_scale_ratio	NVAR m0=DF_common:gv_m0	NVAR m1=DF_common:gv_m1	NVAR x0=DF_normal:gv_axes_x0	NVAR x1=DF_normal:gv_axes_x1	//NVAR xdelta=DF_normal:gv_m1	controlinfo scale_ck0	Variable scalechange_flag=v_value		Variable M0from,M0to,M1from,M1to			Variable scaleflag=0	strswitch (ctrlname)	case "Scale_b5": //green		scaleflag=0		M0from=m0		M0to=csr_Set		M1from=Nan		M1to=Nan	break	case "Scale_b3": //center		scaleflag=1		M0from=m0		M0to=csr_Set		M1from=m1		M1to=csr_Set		break   	case "Scale_b6": //red   		scaleflag=0		M0from=m1		M0to=csr_Set		M1from=Nan		M1to=Nan		break	case "Scale_b12":  //setration   		scaleflag=2		M0from=ratio		M0to=NaN		M1from=Nan		M1to=Nan		break	case "Scale_b11": //Set left and right    		scaleflag=3		M0from=Nan		M0to=x0		M1from=Nan		M1to=x1		break	case "Scale_b16": //profile not used may be removed?    		scaleflag=4		M0from=Nan		M0to=Nan		M1from=Nan		M1to=Nan		break	endswitch		Variable index,datalayernum,procdone	String wave_path,wave_name	Variable tempsel	do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif						wave_path=toppath				Wave data=$wave_path			GetProList(DF_common,data,nan)			Panelimageupdate(3)				if (scaleflag==4)				Wave xprofile=DF_normal:xprofile			endif			if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				if (scaleflag==4)					procdone=macro_axes_rescale_profile(wave_path,datalayernum,xprofile,scaleflag,0)				else					procdone=macro_axes_rescale(wave_path,datalayernum,M0from,M0to,M1from,M1to,scaleflag,scalechange_flag,0)				endif					else				datalayernum=toplayernum				if (processallflag==0)					Setdialogwindow(winname(0,65),data,"Kres")					openautoprocesswindow(winname(0,65))				endif				switch (autoprocessflag)				case 0:					break				case 2:					procdone=macro_axes_rescale(wave_path,datalayernum,M0from,M0to,M1from,M1to,scaleflag,scalechange_flag,0)					break				case 1:					String procstr=Getlayernotestr(note(data),toplayernum+1,2)					String layerstr=Getlayernotestr(note(data),toplayernum+1,1)					Variable procnum=numberbykey("processnumber",layerstr,"=","\r")					procdone=macro_axes_rescale(wave_path,datalayernum,M0from,M0to,M1from,M1to,scaleflag,scalechange_flag,0)					datalayernum+=procdone															if (scaleflag==0)						if (scalechange_flag==0)							Variable procnum_now=5						else							procnum_now=51						endif					elseif (scaleflag==1)						if (scalechange_flag==0)							procnum_now=52						else							procnum_now=53						endif					elseif (scaleflag==2)							procnum_now=54					elseif (scaleflag==3)							procnum_now=55					endif										if ((procnum==procnum_now)&&(forceinsertflag==0))						procstr=Getlayernotestr(procstr,toplayernum+2,2)						procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)					else						procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)					endif					break				case 10:					procdone=macro_axes_rescale(wave_path,datalayernum,M0from,M0to,M1from,M1to,scaleflag,scalechange_flag,1)					break				endswitch			endif			w_sourceNamesSel[index]=tempsel		endif	index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath		if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif	panelimageupdate(3)						SetDatafolder DFEndFunction macro_axes_rescale_profile(itempath,toplayernum,xprofile,scaleflag, flag)	String itempath	Variable toplayernum	Wave xprofile	Variable scaleflag,flag	Wave data=$itempath		GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	Wave templayerimage,tempimage	tempimage=interp2D(templayerimage,x*xprofile(x),y)	killwaves/Z templayerimage		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif	Add_proc_layer(data,tempimage,targetlayernum)		String notestr=procstring(56)		notestr=ReplaceStringByKey("Wavetype",notestr,"axes_profile","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,56,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("M0Initial",notestr,Nan,"=","\r")	notestr=ReplacenumberByKey("M0Final",notestr,Nan,"=","\r")	notestr=ReplacenumberByKey("M1Initial",notestr,Nan,"=","\r")	notestr=ReplacenumberByKey("M1Final",notestr,Nan,"=","\r")	notestr=ReplacenumberByKey("scaleflag",notestr,scaleflag,"=","\r")	notestr=ReplacenumberByKey("scalechangeflag",notestr,Nan,"=","\r")	String xprofileDF=GetWavesDatafolder(xprofile,2)	notestr=ReplacestringByKey("xprofile",notestr,xprofileDF,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		killwaves /Z tempimage,tempimage1		return procdoneendFunction macro_axes_rescale(itempath,toplayernum,M0from,M0to,M1from,M1to,scaleflag,scalechange_flag,flag)	String itempath	Variable toplayernum	Variable M0from,M0to,M1from,M1to	Variable scaleflag,scalechange_flag,flag 		Wave data=$itempath		GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage	Wave tempimage	Variable M0,M1,M0f,M1f	M0=M_x0(tempimage)	M1=M_x1(tempimage)	Variable m_shift,m_scale	switch (scaleflag)	case 0://one shift		if (scalechange_flag)			m_scale=M0to/M0from			M0f=M0*m_scale			M1f=M1*m_scale		else			m_shift=M0to-M0from			M0f=M0+m_shift			M1f=M1+m_shift		endif		break	case 1: //center		if (scalechange_flag)			m_scale=(M0to+M1to)/(M0from+M1from)			M0f=M0*m_scale			M1f=M1*m_scale		else			m_shift=M0to-(M0from+M1from)/2			M0f=M0+m_shift			M1f=M1+m_shift		endif		break	case 2: //ratio		m_scale=M0from		M0f=M0*m_scale		M1f=M1*m_scale		break	case 3: //adjust		M0f=M0to		M1f=M1to		break	endswitch	Setscale /I x, M0f,M1f,tempimage		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		if (scaleflag==0)		if (scalechange_flag==0)			String notestr=procstring(5)			notestr=ReplaceStringByKey("Wavetype",notestr,"csr_shift","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,5,"=","\r")		else			notestr=procstring(51)			notestr=ReplaceStringByKey("Wavetype",notestr,"csr_scale","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,51,"=","\r")		endif	elseif (scaleflag==1)		if (scalechange_flag==0)			notestr=procstring(52)			notestr=ReplaceStringByKey("Wavetype",notestr,"center_shift","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,52,"=","\r")		else			notestr=procstring(53)			notestr=ReplaceStringByKey("Wavetype",notestr,"center_scale","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,53,"=","\r")		endif	elseif (scaleflag==2)			notestr=procstring(54)			notestr=ReplaceStringByKey("Wavetype",notestr,"axes_ratio","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,54,"=","\r")	elseif (scaleflag==3)			notestr=procstring(55)			notestr=ReplaceStringByKey("Wavetype",notestr,"axes_set","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,55,"=","\r")	endif			notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("M0Initial",notestr,M0from,"=","\r")	notestr=ReplacenumberByKey("M0Final",notestr,M0to,"=","\r")	notestr=ReplacenumberByKey("M1Initial",notestr,M1from,"=","\r")	notestr=ReplacenumberByKey("M1Final",notestr,M1to,"=","\r")	notestr=ReplacenumberByKey("scaleflag",notestr,scaleflag,"=","\r")	notestr=ReplacenumberByKey("scalechangeflag",notestr,scalechange_flag,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		killwaves /Z tempimage,tempimage1		return procdoneEnd	Function Scale_AutoFindEf(ctrlname)	String ctrlname	DFREF DF=GetDataFolderDFR()		String panelname=winname(0,65)	String DF_panel="root:internalUse:"+panelName	String DF_common="root:internalUse:"+panelName+":panel_common"	DFREF DFR_common=$DF_common	DFREF DFR_panel=$DF_panel	SetActivesubwindow $winname(0,65)	SetDatafolder  DFR_panel		WAVE w_image = DFR_common:w_image	Wave n_mdc=DFR_common:n_mdc	Wave n_edc=DFR_common:n_edc		Variable pred=qcsr(A)	duplicate /o n_edc, edc_temp		M_smooth_times(edc_temp,-1,2,3)	Differentiate edc_temp	edc_temp=-edc_temp	FindPeak /Q /M=(Wavemax(edc_temp,pnt2x(edc_temp,pred),inf)*0.9) /R=[numpnts(edc_temp),pred] edc_temp	if (V_flag!=0)	doalert 0, "Can't Find Ef!"	return 0	else	Variable setpoint=V_PeakLoc	Cursor/P/I/H=1 B w_image pcsr(B),x2pnt(edc_temp, setpoint )	endif	SetDatafolder DF	EndFunction ScaleFindpeaks(ctrlname)	String ctrlname	String panelname=winname(0,65)	String DF_panel="root:internalUse:"+panelName	String DF_common="root:internalUse:"+panelName+":panel_common"	DFREF DFR_common=$DF_common	DFREF DFR_panel=$DF_panel	SetActivesubwindow $winname(0,65)	WAVE w_image = DFR_common:w_image	Wave n_mdc=DFR_common:n_mdc	Wave n_edc=DFR_common:n_edc		Variable setpoint		//ControlInfo DCs_c0	Variable dimflag=1//v_value		StrSwitch (ctrlname)	case "Scale_b13"://peaks	if (dimflag)	Variable Findpeaks=DC_findpeaks(n_mdc,dimsize(w_image,0),0)		if (Findpeaks>=0)	Wave W_AutoPeakInfo	make /o/n=(Findpeaks) DFR_common:AutoPeakposition	Wave AutoPeakposition=DFR_common:AutoPeakposition	AutoPeakposition=W_AutoPeakInfo[p][0]	Killwaves /Z w_autopeakinfo	//Setvariable DCs_sv6,limits={0,Findpeaks-1,1}	//autopeak=0	sort /A AutoPeakposition,AutoPeakposition	duplicate /o Autopeakposition,TempPeakPosition	TempPeakPosition=abs(Autopeakposition[p]-pcsr(A))	Wavestats /Q TempPeakposition	setpoint=autopeakposition[V_minRowLoc]	Cursor/P/I/H=1 A w_image round(setpoint),qcsr(A)	TempPeakPosition=abs(Autopeakposition[p]-pcsr(B))	Wavestats /Q TempPeakposition	setpoint=autopeakposition[V_minRowLoc]	Cursor/P/I/H=1 B w_image round(setpoint),qcsr(B)	Killwaves /Z TempPeakposition	else	Killwaves /Z w_autopeakinfo	endif		else	Findpeaks=DC_findpeaks(n_edc,0,dimsize(w_image,1))	if (Findpeaks>=0)	Wave W_AutoPeakInfo	make /o/n=(Findpeaks) DFR_common:AutoPeakposition	Wave AutoPeakposition=DFR_common:AutoPeakposition	AutoPeakposition=W_AutoPeakInfo[p][0]	Killwaves /Z w_autopeakinfo	sort /A AutoPeakposition,AutoPeakposition	duplicate /o Autopeakposition,TempPeakPosition	TempPeakPosition=abs(Autopeakposition[p]-qcsr(A))	Wavestats /Q TempPeakposition	setpoint=autopeakposition[V_minRowLoc]	Cursor/P/I/H=1 A w_image pcsr(A),round(setpoint)	TempPeakPosition=abs(Autopeakposition[p]-qcsr(B))	Wavestats /Q TempPeakposition	setpoint=autopeakposition[V_minRowLoc]	Cursor/P/I/H=1 B w_image pcsr(B),round(setpoint)	Killwaves /Z TempPeakposition	else	Killwaves /Z w_autopeakinfo	endif	endif	break		case "Scale_b14":	Wave/Z AutoPeakposition=DFR_common:AutoPeakposition	if (Waveexists(Autopeakposition))		duplicate /o Autopeakposition,TempPeakPosition		if (dimflag)					TempPeakPosition=abs(Autopeakposition[p]-pcsr(B))		Wavestats /Q TempPeakposition		if ((V_minRowLoc+1)<numpnts(TempPeakposition))		setpoint=autopeakposition[V_minRowLoc+1]		else		setpoint=autopeakposition[0]		endif		Cursor/P/I/H=1 B w_image round(setpoint),qcsr(B)				else						TempPeakPosition=abs(Autopeakposition[p]-qcsr(B))		Wavestats /Q TempPeakposition		if ((V_minRowLoc+1)<numpnts(TempPeakposition))		setpoint=autopeakposition[V_minRowLoc+1]		else		setpoint=autopeakposition[0]		endif		Cursor/P/I/H=1 B w_image pcsr(B),round(setpoint)				endif		Killwaves /Z TempPeakposition	endif		break	case "Scale_b15":	Wave/Z AutoPeakposition=DFR_common:AutoPeakposition	if (Waveexists(Autopeakposition))		duplicate /o Autopeakposition,TempPeakPosition		if (dimflag)				TempPeakPosition=abs(Autopeakposition[p]-pcsr(A))		Wavestats /Q TempPeakposition		if ((V_minRowLoc+1)<numpnts(TempPeakposition))		setpoint=autopeakposition[V_minRowLoc+1]		else		setpoint=autopeakposition[0]		endif		Cursor/P/I/H=1 A w_image round(setpoint),qcsr(A)				else				TempPeakPosition=abs(Autopeakposition[p]-qcsr(A))		Wavestats /Q TempPeakposition		if ((V_minRowLoc+1)<numpnts(TempPeakposition))		setpoint=autopeakposition[V_minRowLoc+1]		else		setpoint=autopeakposition[0]		endif		Cursor/P/I/H=1 A w_image pcsr(A),round(setpoint)		endif		Killwaves /Z TempPeakposition	endif		break		endswitchEnd /////////////////////////////////////////////bkg_process //////////////////////////////////Function Proc_bkg_image(ctrlname)	String ctrlname	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		NVAR gv_Fermibkg_Ef=DF_normal:gv_Fermibkg_Ef	NVAR gv_Fermibkg_T=DF_normal:gv_Fermibkg_T		SVAR gs_procwavepath=DF_normal:gs_procwavepath	NVAR gv_procwaveflag=DF_normal:gv_procwaveflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal		Wave w_coef=DF_normal:w_coef	Variable Funcflag=0,DCflag,Fermiflag=0		if (gv_procwaveflag!=3) //1D		controlinfo Norm_c3		if (v_value)			DCflag=0		else				DCflag=1		endif	else	  //2D		DCflag=2	endif			if (traceexist(winname(0,65),"w_norm_fit",1))		controlinfo Norm_ck11		if (v_value)		Funcflag=1		else			controlinfo Norm_ck21				if (v_value)			Funcflag=2			else				controlinfo Norm_ck31					if (v_value)				Funcflag=3				endif			endif			endif				controlinfo Norm_ck02		Fermiflag=v_value	else		if (gv_procwaveflag==0)			Funcflag=0 //from data		else 			controlinfo bkg_ck51			if (v_value)				Funcflag=-1 //from wave xyz			else				Funcflag=-2			endif		endif				if (Funcflag==0)			NVAR e0 = DF_common:gv_E0			NVAR e1 = DF_common:gv_E1			NVAR m0 = DF_common:gv_M0			NVAR m1 = DF_common:gv_M1				Variable range0,range1			if (DCflag)				range0=min(m0,m1)				range1=max(m0,m1)			else				range0=min(e0,e1)				range1=max(e0,e1)			endif			endif				controlinfo Norm_c2		Variable smoothflag=v_value		NVAR pnts=DF_normal:gv_tmfsmt		NVAR times=DF_normal:gv_tmfsmtrep		endif			Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))		toppath=w_DF[topdfrow]+w_sourceNames[index]		topname=w_sourceNames[index]		tempsel=w_sourceNamesSel[index]		w_sourceNamesSel[index]=0			if (strlen(toppath)==0)			break		endif		wave_path=toppath			Wave data=$wave_path		GetProList(DF_common,data,nan)		Panelimageupdate(3)			if (toplayernum==(dimsize(data,2)-1))			datalayernum=dimsize(data,2)-1 //toplayer			procdone=macro_bkg_corr(wave_path,datalayernum,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,0)		else			datalayernum=toplayernum			if (processallflag==0)				Setdialogwindow(winname(0,65),data,"bkg")				openautoprocesswindow(winname(0,65))			endif			switch (autoprocessflag)			case 0:				break			case 2:					procdone=macro_bkg_corr(wave_path,datalayernum,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,0)				break			case 1:				String procstr=Getlayernotestr(note(data),toplayernum+1,2)				String layerstr=Getlayernotestr(note(data),toplayernum+1,1)				Variable procnum=numberbykey("processnumber",layerstr,"=","\r")				procdone=macro_bkg_corr(wave_path,datalayernum,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,0)				datalayernum+=procdone								if (funcflag>=0)					if (dcflag==0)						Variable procnum_now=6					else						procnum_now=60					endif				else					if (DCflag==0)						procnum_now=601					elseif (DCflag==1)						procnum_now=602					else						procnum_now=603					endif				endif								if ((procnum==procnum_now)&&(forceinsertflag==0))					procstr=Getlayernotestr(procstr,toplayernum+2,2)					procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)				else					procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)				endif				break			case 10:				procdone=macro_bkg_corr(wave_path,datalayernum,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,1)				break			endswitch		endif		w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)							SetDatafolder DFEndFunction macro_bkg_corr(itempath,toplayernum,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,procpath,flag)	String itempath	Variable toplayernum	Variable Funcflag,DCflag,range0,range1	Variable smoothflag,pnts,times	wave w_coef	Variable Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T	String procpath	Variable flag		Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		String coeflist=Cal_Wave_proc(tempimage,Funcflag,DCflag,range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,procpath,0)		Wave w_proc		if (DCflag==1)		tempimage-=w_proc[q]	elseif (DCflag==0)		tempimage-=w_proc[p]	else		tempimage-=w_proc	endif			//killwaves /Z w_proc		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		if (Funcflag>=0)		If (DCflag==0) //mdc corr			String notestr=procstring(6)			notestr=ReplaceStringByKey("Wavetype",notestr,"mdc_bkg","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,6,"=","\r")		elseif (DCflag==1) 			notestr=procstring(60)			notestr=ReplaceStringByKey("Wavetype",notestr,"edc_bkg","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,60,"=","\r")		endif	else		If (DCflag==0) //mdc corr			notestr=procstring(601)			notestr=ReplaceStringByKey("Wavetype",notestr,"wmdc_bkg","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,601,"=","\r")		elseif (DCflag==1) 			notestr=procstring(602)			notestr=ReplaceStringByKey("Wavetype",notestr,"wedc_bkg","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,602,"=","\r")		elseif (DCflag==2)			notestr=procstring(603)			notestr=ReplaceStringByKey("Wavetype",notestr,"w2D_bkg","=","\r")			notestr=ReplacenumberByKey("ProcessNumber",notestr,603,"=","\r")		endif	endif	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("Funcflag",notestr,Funcflag,"=","\r")	notestr=ReplacenumberByKey("DCflag",notestr,DCflag,"=","\r")	notestr=ReplacenumberByKey("Range0",notestr,range0,"=","\r")	notestr=ReplacenumberByKey("Range1",notestr,range1,"=","\r")	notestr=ReplacenumberByKey("smoothflag",notestr,smoothflag,"=","\r")	notestr=ReplacenumberByKey("smoothpnts",notestr,pnts,"=","\r")	notestr=ReplacenumberByKey("smoothtimes",notestr,times,"=","\r")	notestr=ReplaceStringByKey("CoefList",notestr,coeflist,"=","\r")	notestr=ReplacenumberByKey("Fermiflag",notestr,Fermiflag,"=","\r")	notestr=ReplacenumberByKey("bkgEF",notestr,gv_Fermibkg_Ef,"=","\r")	notestr=ReplacenumberByKey("bkgT",notestr,gv_Fermibkg_T,"=","\r")	notestr=ReplaceStringByKey("procwavepath",notestr,procpath,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		Killwaves /Z tempimage		return procdoneEndFunction  /S Cal_Wave_Fermi(tempimage,w_coef)	Wave tempimage	Wave w_coef	make /o/n=(dimsize(tempimage,1)) w_proc	Setscale /I x,M_y0(tempimage),M_y1(tempimage),w_proc		Cal_fermi_function(w_proc,w_Coef[0],w_Coef[1],w_Coef[2],w_Coef[3])	wave FermiProc	duplicate/o FermiProc w_proc	killwaves/Z FermiProc		String coeflist=numericwavetostringlist(w_Coef,";",Nan,Nan)		return coeflist			End	Function /S Cal_Wave_proc(tempimage,Funcflag,DCflag,range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,procpath,controlflag)	Wave tempimage	Variable Funcflag,DCflag,range0,range1	Variable smoothflag,pnts,times	wave w_coef	Variable Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T	string procpath	Variable controlflag		String coeflist		if (funcflag==0)		M_avg_subRange(tempimage,DCflag,range0,range1)		wave w_avg		if (smoothflag)			M_smooth_times(w_avg,-1,pnts,times)		endif		duplicate/o w_avg w_proc		killwaves/Z w_avg		coeflist=""			elseif (funcflag==-1) //scale				Wave procwave_raw=$procpath				Duplicate /o procwave_raw, procwave				if (DCflag!=2)			if (smoothflag)				M_smooth_times(procwave,-1,pnts,times)			endif			make /o/n=(dimsize(tempimage,DCflag)) w_proc			Setscale /P x,dimoffset(tempimage,DCflag),dimdelta(tempimage,DCflag),w_proc			w_proc=controlflag			w_proc=procwave(x)		else			if (smoothflag)				M_smooth_times(procwave,0,pnts,times)				M_smooth_times(procwave,1,pnts,times)			endif			Duplicate /o tempimage w_proc			w_proc=(numtype(interp2D(procwave,x,y))==2)?(controlflag):(interp2D(procwave,x,y))		endif		Killwaves /Z procwave		coeflist=""	elseif (funcflag==-2) //channel		Wave procwave_raw=$procpath		Duplicate /o procwave_raw, procwave				String noteproc=note(procwave)		Variable procx0=numberbykey_reverse("CCDFirstXChannel",noteproc,"=","\r")		Variable procx1=numberbykey_reverse("CCDLastXChannel",noteproc,"=","\r")		Variable procy0=numberbykey_reverse("CCDFirstYChannel",noteproc,"=","\r")		Variable procy1=numberbykey_reverse("CCDLastYChannel",noteproc,"=","\r")				String notestr=note(tempimage)		Variable x0=numberbykey_reverse("CCDFirstXChannel",notestr,"=","\r")		Variable x1=numberbykey_reverse("CCDLastXChannel",notestr,"=","\r")		Variable y0=numberbykey_reverse("CCDFirstYChannel",notestr,"=","\r")		Variable y1=numberbykey_reverse("CCDLastYChannel",notestr,"=","\r")				if (DCflag!=2)						if (smoothflag)				M_smooth_times(procwave,-1,pnts,times)			endif			make /o/n=(dimsize(tempimage,DCflag)) w_proc						if (DCflag)				Setscale /I x, procx0,procx1,procwave				Setscale /I x, x0,x1,w_proc							else				Setscale /I x, procy0,procy1,procwave				Setscale /I x, y0,y1,w_proc			endif			w_proc=controlflag			w_proc=procwave(x)			Setscale /P x,dimoffset(tempimage,DCflag),dimdelta(tempimage,DCflag),w_proc					else			Setscale /I x, procy0,procy1,procwave			Setscale /I y, procx0,procx1,procwave			if (smoothflag)				M_smooth_times(procwave,0,pnts,times)				M_smooth_times(procwave,1,pnts,times)			endif			Duplicate /o tempimage w_proc						Setscale /I x, y0,y1,w_proc			Setscale /I y, x0,x1,w_proc			w_proc=controlflag			w_proc=(numtype(interp2D(procwave,x,y))==2)?(controlflag):(interp2D(procwave,x,y))			copyscales tempimage,w_proc		endif				Killwaves /Z procwave		coeflist=""		else			make /o/n=(dimsize(tempimage,DCflag)) w_proc		if (DCflag)			Setscale /I x,M_y0(tempimage),M_y1(tempimage),w_proc		else			Setscale /I x,M_x0(tempimage),M_x1(tempimage),w_proc		endif			switch(funcflag)		case 1:			w_proc=w_coef[0]			break		case 2:			w_proc=w_coef[0]+w_coef[1]*x			break		case 3:			//sdc			duplicate/o w_proc, w_proc_x			w_proc_x = x						AN_edc_bkg(w_coef,w_proc,w_proc_x)			break			//sdc		case 4:			Cal_fermi_function(w_proc,w_Coef[0],w_Coef[1],w_Coef[2],w_Coef[3])			wave FermiProc			duplicate/o FermiProc w_proc			killwaves/Z FermiProc			break		endswitch				if  ((Fermiflag)&&(funcflag<4))			Variable kB=8.617385e-5			w_proc*=1/(exp((x-gv_Fermibkg_Ef)/KB/gv_Fermibkg_T)+1)		endif					if (DCflag&&(funcflag<4))			Variable index			do 				if (w_proc[index]<0)					w_proc[index,inf]=0					break				endif			index+=1			while (index<numpnts(w_proc))		else			w_proc=(w_proc<0)?(0):(w_proc)		endif			coeflist=numericwavetostringlist(w_Coef,";",Nan,Nan)		endif		return coeflistEnd//////////////////////////Fermi divide//////////////Function Proc_DF_image(ctrlname)	String ctrlname	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag			initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal		Wave w_coef=DF_normal:w_coef	Variable Funcflag=0,DCflag,procflag,Fermiflag=0		if (stringmatch(ctrlname,"Corr_bt1"))		procflag=1	else		procflag=0	endif		controlinfo Corr_ck4	if (v_value)		Funcflag=4		DCflag=1		redimension /N=4 w_coef		NVAR FermiEF=DF_normal:gv_Fermibkg_ef		NVAR FermiT=DF_common:gv_sampletem//DF_normal:gv_Fermibkg_T		NVAR Fermires=DF_normal:gv_Fermibkg_res		NVAR cropnum=DF_normal:gv_Fermibkg_num		controlinfo Corr_ck5		Variable convolveflag=v_value		controlinfo Corr_ck6		Variable Cropflag=v_value	else		SetDatafolder DF		return 0	endif			variable FermiTBackup=FermiT	Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif			wave_path=toppath				Wave data=$wave_path			GetProList(DF_common,data,nan)			Panelimageupdate(3)							w_coef[0]=FermiEF			w_coef[1]=(numtype(FermiT)==2)?FermiTBackup : FermiT			w_coef[2]=convolveflag			w_coef[3]=Fermires						if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				procdone=macro_Func_DF(wave_path,datalayernum,procflag,w_coef,cropflag,cropnum,0)						//procdone=macro_bkg_corr(wave_path,datalayernum,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef)			else				datalayernum=toplayernum				if (processallflag==0)		Setdialogwindow(winname(0,65),data,"bkg")		openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:				procdone=macro_Func_DF(wave_path,datalayernum,procflag,w_coef,cropflag,cropnum,0)			break		case 1:			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r")			procdone=macro_Func_DF(wave_path,datalayernum,procflag,w_coef,cropflag,cropnum,0)			datalayernum+=procdone									if (procflag==1) //Multiple				variable procnum_now=63			else					procnum_now=62			endif									if ((procnum==procnum_now)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)			else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)			endif						break		case 10:			procdone=macro_Func_DF(wave_path,datalayernum,procflag,w_coef,cropflag,cropnum,0)			break		endswitch	endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)							SetDatafolder DFEndFunction macro_Func_DF(itempath,toplayernum,procflag,w_coef,cropflag,cropnum,flag)	String itempath	Variable toplayernum	Variable procflag	wave w_coef	Variable cropflag	Variable cropnum	Variable flag		Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		String coeflist=Cal_Wave_Fermi(tempimage,w_coef)		Wave w_proc		if (procflag==1)		tempimage*=w_proc[q]	else		tempimage/=w_proc[q]	endif			killwaves /Z w_proc		String rawnotestr=note(tempimage)		Variable x0=numberbykey_reverse("CCDFirstXChannel",rawnotestr,"=","\r")	Variable x1=numberbykey_reverse("CCDLastXChannel",rawnotestr,"=","\r")		if  ((cropflag==1)&&(procflag==0)) //crop kbt		Variable kB=8.617385e-5		Variable Cutenergy=w_coef[0]+cropnum*kB*w_coef[1]		//Variable Cutpnts=x2pntsmult(tempimage,Cutenergy,1)				String Acqmode=Stringbykey("AcquisitionMode",rawnotestr,"=","\r")			Variable p0=0		Variable p1=dimsize(tempimage,0)-1		Variable q0=0		Variable q1=dimsize(tempimage,1)-1			Make /o/n=(dimsize(tempimage,1)) channel_ywave		Setscale /I x, x0,x1,channel_ywave		channel_ywave=x				q0=0		q1=x2pntsmult(tempimage,Cutenergy,1)		duplicate /o /R=[p0,p1][q0,q1] tempimage tempimage1		duplicate /o /R=[q0,q1] channel_ywave ywave		duplicate /o tempimage1 tempimage			Killwaves /Z tempimage0,tempimage1				if (stringmatch(acqmode,"Swept")!=1)			x0=ywave[0]			x1=ywave[inf]		endif		endif			Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		String notestr			if (procflag==1) //Multiple		notestr=procstring(63)		notestr=ReplaceStringByKey("Wavetype",notestr,"Fn_multi","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,63,"=","\r")	else		notestr=procstring(62)		notestr=ReplaceStringByKey("Wavetype",notestr,"Fn_devide","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,62,"=","\r")	endif					notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("Procflag",notestr,Procflag,"=","\r")	notestr=ReplaceStringByKey("CoefList",notestr,coeflist,"=","\r")	notestr=ReplacenumberByKey("Cropflag",notestr,Cropflag,"=","\r")	notestr=ReplacenumberByKey("Cropnum",notestr,Cropnum,"=","\r")	notestr=ReplacenumberByKey("CCDFirstXChannel",notestr,x0,"=","\r")	notestr=ReplacenumberByKey("CCDLastXChannel",notestr,x1,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		Killwaves /Z tempimage		return procdoneEnd/////////Fermi Function ///////////////////////////////////////////////////// Function Cal_fermi_function(FermiF,ef,T,convolveflag,resol)   Wave FermiF   Variable ef,T,convolveflag,resol      Variable kB=8.617385e-5   Variable res=10       Variable data_dx,x0,x1,dx   Variable y_xfrom,y_xto,gauss_pnts,y_pnts	          if (convolveflag)      	  	if (resol == 0 || numtype(resol) != 0)			doalert  0,"Wrong Energy resolution." 			return 1	 	 else			resol =  abs(resol)	  	endif	   		data_dx=deltax(FermiF)		x0=pnt2x(FermiF,0)		x1=pnt2x(FermiF,numpnts(FermiF)-1)  	     		dx=min(resol/res,abs(data_dx/2))		y_xfrom=x0-4*resol		y_xto=x1+4*resol			Variable gauss_from=10*resol		gauss_pnts=round(gauss_from/dx)*2+1		make /o/d/n=(gauss_pnts) w_conv_gauss = 0		SetScale/P x -gauss_from, dx, w_conv_gauss			y_pnts=round((y_xto-y_xfrom)/dx)		Make/o/d/n=(y_pnts) convFerm = 0		SetScale/P x y_xfrom, dx, convFerm	    		convFerm=1/(exp((x-EF)/KB/T)+1)//interp(x,xdata,data)           		 w_conv_gauss= exp(-x^2*4*ln(2)/resol^2)    		Variable sumGauss = sum(w_conv_gauss, -inf,inf)   	 	w_conv_gauss /= sumGauss       	//FFTConvolve(w_conv_gauss,w_conv_y)    		Convolve/A w_conv_gauss convFerm        		duplicate /o FermiF FermiProc       		 FermiProc=convFerm(x)         		Killwaves /Z w_conv_gauss,convFerm        	else        		duplicate /o FermiF FermiProc        		FermiProc=1/(exp((x-EF)/KB/T)+1)       	endif End /////////////////////////////////////////////norm_process //////////////////////////////////Function Proc_norm_image(ctrlname)	String ctrlname	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		NVAR gv_Fermibkg_Ef=DF_normal:gv_Fermibkg_Ef	NVAR gv_Fermibkg_T=DF_normal:gv_Fermibkg_T		SVAR gs_procwavepath=DF_normal:gs_procwavepath	NVAR gv_procwaveflag=DF_normal:gv_procwaveflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal		Wave w_coef=DF_normal:w_coef	Variable Funcflag=0,DCflag,procflag,Fermiflag=0		if (stringmatch(ctrlname,"Norm_b8"))		procflag=1	else		procflag=0	endif			if (gv_procwaveflag!=3)		controlinfo Norm_c3		if (v_value)			DCflag=0		else			DCflag=1		endif	else		DCflag=2	endif		if (traceexist(winname(0,65),"w_norm_fit",1))		controlinfo Norm_ck11		if (v_value)			Funcflag=1		else			controlinfo Norm_ck21				if (v_value)				Funcflag=2			else				controlinfo Norm_ck31					if (v_value)					Funcflag=3				endif			endif			endif					controlinfo Norm_ck02		Fermiflag=v_value	else		if (gv_procwaveflag==0)			Funcflag=0		else 			controlinfo bkg_ck51			if (v_value)				Funcflag=-1 //from wave xyz			else				Funcflag=-2			endif		endif					if (Funcflag==0)			NVAR e0 = DF_common:gv_E0			NVAR e1 = DF_common:gv_E1			NVAR m0 = DF_common:gv_M0			NVAR m1 = DF_common:gv_M1				Variable range0,range1			if (DCflag)				range0=min(m0,m1)				range1=max(m0,m1)			else				range0=min(e0,e1)				range1=max(e0,e1)			endif		endif			controlinfo Norm_c2		Variable smoothflag=v_value		NVAR pnts=DF_normal:gv_tmfsmt		NVAR times=DF_normal:gv_tmfsmtrep				endif		Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))	toppath=w_DF[topdfrow]+w_sourceNames[index]	topname=w_sourceNames[index]	tempsel=w_sourceNamesSel[index]	w_sourceNamesSel[index]=0		if (strlen(toppath)==0)	break	endif	wave_path=toppath		Wave data=$wave_path	GetProList(DF_common,data,nan)	Panelimageupdate(3)			if (toplayernum==(dimsize(data,2)-1))		datalayernum=dimsize(data,2)-1 //toplayer		procdone=macro_Func_Norm(wave_path,datalayernum,procflag,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,0)				//procdone=macro_bkg_corr(wave_path,datalayernum,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef)	else		datalayernum=toplayernum		if (processallflag==0)		Setdialogwindow(winname(0,65),data,"bkg")		openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:				procdone=macro_Func_Norm(wave_path,datalayernum,procflag,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,0)			break		case 1:			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r")			procdone=macro_Func_Norm(wave_path,datalayernum,procflag,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,0)			datalayernum+=procdone							if (procflag==1) //Multiple					if (funcflag>=0)						if (DCflag==0)							Variable procnum_now=61						else							procnum_now=612						endif					else						if (DCflag==0)							procnum_now=614						elseif (DCflag==1)							procnum_now=615						else							procnum_now=616						endif					endif				else					if (funcflag>=0)						if (DCflag==0)							procnum_now=611						else							procnum_now=613						endif					else						if (DCflag==0)							procnum_now=617						elseif (DCflag==1)							procnum_now=618						else							procnum_now=619						endif					endif				endif									if ((procnum==procnum_now)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)				else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)				endif			break		case 10:			procdone=macro_Func_Norm(wave_path,datalayernum,procflag,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,gs_procwavepath,1)			break		endswitch	endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)							SetDatafolder DFEndFunction macro_Func_Norm(itempath,toplayernum,procflag,Funcflag,DCflag,Range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,procpath,flag)	String itempath	Variable toplayernum	Variable procflag,Funcflag,DCflag	Variable Range0,Range1	Variable smoothflag,pnts,times	wave w_coef	Variable Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T	String procpath	Variable flag		Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		String coeflist=Cal_Wave_proc(tempimage,Funcflag,DCflag,range0,range1,smoothflag,pnts,times,w_coef,Fermiflag,gv_Fermibkg_Ef,gv_Fermibkg_T,procpath,1)		Wave w_proc		if (procflag==1)		if (DCflag ==1)			tempimage*=w_proc[q]		elseif (DCflag == 0)			tempimage*=w_proc[p]		else			tempimage*=w_proc		endif	else		if (DCflag == 1)			tempimage/=w_proc[q]		elseif (DCflag == 0)			tempimage/=w_proc[p]		else			tempimage/=w_proc		endif	endif			killwaves /Z w_proc		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		String notestr			if (procflag==1) ///multiple			if (Funcflag>=0)				if (DCflag==0)					notestr=procstring(61)					notestr=ReplaceStringByKey("Wavetype",notestr,"mdc_multi","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,61,"=","\r")				else					notestr=procstring(612)					notestr=ReplaceStringByKey("Wavetype",notestr,"edc_multi","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,612,"=","\r")				endif			else				if (DCflag==0)					notestr=procstring(614)					notestr=ReplaceStringByKey("Wavetype",notestr,"wmdc_multi","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,614,"=","\r")				elseif (DCflag==1)					notestr=procstring(615)					notestr=ReplaceStringByKey("Wavetype",notestr,"wedc_multi","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,615,"=","\r")				else					notestr=procstring(616)					notestr=ReplaceStringByKey("Wavetype",notestr,"w2D_multi","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,616,"=","\r")				endif			endif		else			if (Funcflag>=0)				if (DCflag==0)						notestr=procstring(611)					notestr=ReplaceStringByKey("Wavetype",notestr,"mdc_devide","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,611,"=","\r")				else					notestr=procstring(613)					notestr=ReplaceStringByKey("Wavetype",notestr,"edc_devide","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,613,"=","\r")					endif				else				if (DCflag==0)					notestr=procstring(617)					notestr=ReplaceStringByKey("Wavetype",notestr,"wmdc_devide","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,617,"=","\r")				elseif (DCflag==1)					notestr=procstring(618)					notestr=ReplaceStringByKey("Wavetype",notestr,"wedc_devide","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,618,"=","\r")				else					notestr=procstring(619)					notestr=ReplaceStringByKey("Wavetype",notestr,"w2D_devide","=","\r")					notestr=ReplacenumberByKey("ProcessNumber",notestr,619,"=","\r")				endif			endif		endif				notestr=ReplacenumberByKey("Range0",notestr,range0,"=","\r")		notestr=ReplacenumberByKey("Range1",notestr,range1,"=","\r")		notestr=ReplacenumberByKey("smoothflag",notestr,smoothflag,"=","\r")		notestr=ReplacenumberByKey("smoothpnts",notestr,pnts,"=","\r")		notestr=ReplacenumberByKey("smoothtimes",notestr,times,"=","\r")		notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("Procflag",notestr,Procflag,"=","\r")	notestr=ReplacenumberByKey("Funcflag",notestr,Funcflag,"=","\r")	notestr=ReplacenumberByKey("DCflag",notestr,DCflag,"=","\r")	notestr=ReplaceStringByKey("CoefList",notestr,coeflist,"=","\r")	notestr=ReplacenumberByKey("Fermiflag",notestr,Fermiflag,"=","\r")	notestr=ReplacenumberByKey("bkgEF",notestr,gv_Fermibkg_Ef,"=","\r")	notestr=ReplacenumberByKey("bkgT",notestr,gv_Fermibkg_T,"=","\r")	notestr=ReplaceStringbykey("procwavepath",notestr,procpath,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		Killwaves /Z tempimage		return procdoneEnd     //////////////////////////////polar cut ///////////////////////////////////////////// Function map_polar_cut(ctrlName) 	String ctrlName 	 	 	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)	 	SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal			NVAR hn = DF_common:gv_hn 	NVAR EF = DF_common:gv_EF 	NVAR workfunc = DF_common:gv_workfunc			Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))	toppath=w_DF[topdfrow]+w_sourceNames[index]	topname=w_sourceNames[index]	tempsel=w_sourceNamesSel[index]	w_sourceNamesSel[index]=0		if (strlen(toppath)==0)	break	endif	wave_path=toppath		Wave data=$wave_path	GetProList(DF_common,data,nan)	Panelimageupdate(3)		if (toplayernum==(dimsize(data,2)-1))		datalayernum=dimsize(data,2)-1 //toplayer		procdone=macro_polar_to_k(wave_path,datalayernum,hn,EF,workfunc,0)	 	else 		datalayernum=toplayernum	   	if (processallflag==0)		Setdialogwindow(winname(0,65),data,"kpolar")		openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:			procdone=macro_polar_to_k(wave_path,datalayernum,hn,EF,workfunc,0)			break		case 1:			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r")			procdone=macro_polar_to_k(wave_path,datalayernum,hn,EF,workfunc,0)				datalayernum+=procdone			if ((procnum==7)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)			else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)			endif			break		case 10:			procdone=macro_polar_to_k(wave_path,datalayernum,hn,EF,workfunc,1)			break		endswitch			endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif			panelimageupdate(3)	  	setDataFolder DF  End  Function macro_polar_to_k(itempath,toplayernum,hn,EF,workfunc,flag) 	String itempath 	Variable toplayernum,hn,EF,workfunc,flag 	 	Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		String notestr_old=note(tempimage)	Variable initialflag=numberbykey_reverse("initialflag",notestr_old,"=","\r")	if (initialflag)	else	EF=0	endif		Variable xp=dimsize(tempimage,0)	Variable yp=dimsize(tempimage,1)	// get the k-range: 	Variable x0 = M_x0(tempimage) 	Variable x1 = M_x1(tempimage) 	Variable y0 = M_y0(tempimage) 	Variable y1 = M_y1(tempimage) 	Variable Evac_min = min(EF + y0, EF+ y1) 	Variable Evac_max = max(EF + y0, EF+ y1) 	Variable kmax, kmin 	if (sign(x0) == sign(x1)) 		if (sign(x0) == 1)	// both positive 			kmax = sin(max(x0,x1)*pi/180) * sqrt(Evac_max)*0.5123 			kmin = sin(min(x0,x1)*pi/180) * sqrt(Evac_min)*0.5123 		else		// both negative 			kmax = sin(min(x0,x1)*pi/180) * sqrt(Evac_max)*0.5123 			kmin = sin(max(x0,x1)*pi/180) * sqrt(Evac_min)*0.5123 		endif 	else 		kmax = sin(max(x0,x1)*pi/180) * sqrt(Evac_max)*0.5123 		kmin = sin(min(x0,x1)*pi/180) * sqrt(Evac_max)*0.5123 	endif 	 	// find the values in the source for e/th that correspond to e/k 	Make/o/n=(xp,yp) M_out  	SetScale/I x kmin, kmax, M_out 	SetScale/I y y0, y1, M_out			 	 	M_out = interp2D(tempimage,180/pi*asin(x/(sqrt(EF + y)*0.5123)),y)	duplicate /o M_out tempimage	killwaves /Z M_out 			Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)			String notestr=procstring(7)		notestr=ReplaceStringByKey("Wavetype",notestr,"polar_K","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,7,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("PhotonE",notestr,hn,"=","\r")	notestr=ReplacenumberByKey("FermiEnergy",notestr,EF,"=","\r")	notestr=ReplacenumberByKey("WorkFunction",notestr,workfunc,"=","\r")			Add_proc_note(data,targetlayernum,notestr)		Killwaves /Z tempimage		return procdone End    ///////////////////////////////flip cut/////////////////////////////////   Function map_flipStage_cut(ctrlName) 	String ctrlName 	 	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)		SetDataFolder DF_normal		 	NVAR hn = DF_common:gv_hn 	NVAR EF = DF_common:gv_EF 	NVAR workfunc = DF_common:gv_workfunc 	  	NVAR thi = DF_common:gv_th 	NVAR phi = DF_common:gv_ph 	NVAR azi = DF_common:gv_alpha 	NVAR thoff = DF_common:gv_thoff 	NVAR phoff = DF_common:gv_phoff 	NVAR azioff = DF_common:gv_azioff  	NVAR gamma = DF_common:gv_gamma 	NVAR curveflag=DF_common:gv_curveflag  		 	Variable th,ph,alpha, deflectorY 	string wavenote 	 	Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif			wave_path=toppath				Wave data=$wave_path			GetProList(DF_common,data,nan)			Panelimageupdate(3)				th=thi+thoff			ph=phi+phoff			alpha=azi+azioff						wavenote = note(data)			deflectorY = NumberByKey("DeflectorAngle", wavenote, "=","\r")									if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				procdone=macro_flipStage_cut(toppath,toplayernum,hn,EF,workfunc,th,ph,alpha,gamma,curveflag,0, deflectorY)	 		else				datalayernum=toplayernum				if (processallflag==0)					Setdialogwindow(winname(0,65),data,"kflip")					openautoprocesswindow(winname(0,65))				endif				switch (autoprocessflag)					case 0:						break					case 2:		 					procdone=macro_flipStage_cut(toppath,toplayernum,hn,EF,workfunc,th,ph,alpha,gamma,curveflag,0,deflectorY)	 					break	 				case 1:						String procstr=Getlayernotestr(note(data),toplayernum+1,2)						String layerstr=Getlayernotestr(note(data),toplayernum+1,1)						Variable procnum=numberbykey("processnumber",layerstr,"=","\r")	 					procdone=macro_flipStage_cut(toppath,toplayernum,hn,EF,workfunc,th,ph,alpha,gamma,curveflag,0,deflectorY)	 					datalayernum+=procdone						if ((procnum==8)&&(forceinsertflag==0))							procstr=Getlayernotestr(procstr,toplayernum+2,2)							procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)						else							procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)						endif						break					case 10:						procdone=macro_flipStage_cut(toppath,toplayernum,hn,EF,workfunc,th,ph,alpha,gamma,curveflag,1,deflectorY)						break					endswitch				endif			w_sourceNamesSel[index]=tempsel			endif				index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif	panelimageupdate(3)		 	setDataFolder DF	End 	Function macro_flipStage_cut(itempath,toplayernum,hn,EF,workfunc,th,ph,alpha,gamma,curveflag,flag,deflectorY)	String itempath	Variable toplayernum,hn,EF,workfunc,th,ph,alpha,gamma,curveflag,flag,deflectorY				if (numtype(th+ph+alpha+gamma+hn+ef+workfunc)==2) 		doalert 0, "Parameter error." 		return 0 	endif  	Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage	 	Variable kvac 	 	make /o/n=6001 tempangle,tempk,kx,ky,kr0,kr1 	Setscale /I x,-90,90, tempangle,tempk,kx,ky,kr0,kr1 	tempk=0 	tempangle=x 	 	kvac = 1 		if((numtype(deflectorY)==2)||(deflectorY==0))	 	multithread kx= flip_to_k(kvac,0,th,ph,alpha,x,gamma,0,curveflag)	 	multithread ky= flip_to_k(kvac,0,th,ph,alpha,x,gamma,1,curveflag)	 	multithread kr0=(p==0)?(0):(sqrt((kx[p]-kx[p-1])^2+(ky[p]-ky[p-1])^2))	 	multithread kr1=sqrt((kx[p])^2+(ky[p])^2)	 		 	//use projected k. (k=kx for gamma=90, k=ky for gamma=0)	 	if(gamma==90)	 	tempk=kx	 	else	 	tempk=ky	 	endif	 else	 	//for data with non zero deflector angle	 	multithread kx= flip_to_k_DA30(kvac,0,th,ph,alpha,deflectorY,x,gamma,0,curveflag)	 	multithread ky= flip_to_k_DA30(kvac,0,th,ph,alpha,deflectorY,x,gamma,1,curveflag)	 	multithread kr0=(p==0)?(0):(sqrt((kx[p]-kx[p-1])^2+(ky[p]-ky[p-1])^2))	 	multithread kr1=sqrt((kx[p])^2+(ky[p])^2)	 		 	//use projected k. (k=kx for gamma=90, k=ky for gamma=0)	 	if(gamma==90)	 	tempk=kx	 	else	 	tempk=ky	 	endif	 		 endif 	  //	tempk=(p==0)?(0):(tempk[p-1]+kr0[p]) //to use integrated k as x axis, uncomment this.  	Wavestats/Q kr1  	//print v_minRowloc  	//print tempk[V_minRowloc]  	 //	Variable kmin=tempk[V_minRowloc]//to use integrated k as x axis, uncomment this.    //   tempk-=kmin//to use integrated k as x axis, uncomment this. 	 	Variable imk0,imk1,imdk,imkpnts 	imk0=M_x0(tempimage) 	imk1=M_x1(tempimage) 	imdk=dimdelta(tempimage,0) 	imkpnts=dimsize(tempimage,0) 	 	Variable ime0,ime1,imde,imepnts 	ime0=M_y0(tempimage) 	ime1=M_y1(tempimage) 	imde=dimdelta(tempimage,1) 	imepnts=dimsize(tempimage,1) 	 	make /o/n=(imkpnts) tempDC,tempDCk 	 	setscale /I x,imk0,imk1,tempDC,tempDCk  	 	 	 	Variable tempk0,tempk1,tempk2,tempk3 	 	variable Ef_corrected 	if(min(ime0,ime1)<0) 		Ef_corrected= 1 	else 		Ef_corrected = 0 	endif 	 	 	 	if(Ef_corrected)	 	kvac = sqrt(EF+ime0) * 0.5123	 	tempk0=kvac*interp(imk0,tempangle,tempk)	 	tempk1=kvac*interp(imk1,tempangle,tempk)	 	kvac = sqrt(EF+ime1) * 0.5123	 	tempk2=kvac*interp(imk0,tempangle,tempk)	 	tempk3=kvac*interp(imk1,tempangle,tempk) 	else 		kvac = sqrt(ime0) * 0.5123	 	tempk0=kvac*interp(imk0,tempangle,tempk)	 	tempk1=kvac*interp(imk1,tempangle,tempk)	 	kvac = sqrt(ime1) * 0.5123	 	tempk2=kvac*interp(imk0,tempangle,tempk)	 	tempk3=kvac*interp(imk1,tempangle,tempk) 	endif 	 	 	Variable newk0,newk1 	if (tempk1>tempk0) 		newk0=min(tempk0,tempk2) 		newk1=max(tempk1,tempk3) 	else 		newk0=min(tempk1,tempk3) 		newk1=max(tempk0,tempk2) 	endif 	 	setscale /I x,newk0,newk1,tempimage 	 	Variable Eindex=0 	Variable tempDCkmax 	Variable tempDCkmin 	do  		kvac = sqrt(EF*Ef_corrected+ime0+imde*Eindex) * 0.5123 		multithread tempDC=tempimage[p][Eindex] 		multithread tempDCk=kvac*interp(x,tempangle,tempk) 		tempDCkmax=wavemax(tempDCk) 		tempDCkmin=wavemin(tempDCk) 		multithread tempimage[][Eindex]=((x<tempDCkmax)&&(x>tempDCkmin))?(interp(x,tempDCk,tempDC)):(NaN) 		Eindex+=1 	while (Eindex<imepnts) 	 //	Killwaves /Z tempDCk,tempk,tempDC,tempangle 	 	Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif 	 	Add_proc_layer(data,tempimage,targetlayernum)			String notestr=procstring(8)		notestr=ReplaceStringByKey("Wavetype",notestr,"flip_K","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,8,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("PhotonE",notestr,hn,"=","\r")	notestr=ReplacenumberByKey("FermiEnergy",notestr,EF,"=","\r")	notestr=ReplacenumberByKey("WorkFunction",notestr,workfunc,"=","\r")	notestr=ReplacenumberByKey("theta",notestr,th,"=","\r")	notestr=ReplacenumberByKey("phi",notestr,ph,"=","\r")	notestr=ReplacenumberByKey("azi",notestr,alpha,"=","\r")	notestr=ReplacenumberByKey("gamma",notestr,gamma,"=","\r")	notestr=ReplacenumberByKey("curveflag",notestr,curveflag,"=","\r")	notestr=ReplacenumberByKey("deflectorangle",notestr,deflectorY,"=","\r")			Add_proc_note(data,targetlayernum,notestr)		Killwaves /Z tempimage		return procdone 	 	End ////////////////////////reduce point ////////////////////////////////////////Function reduce_pnts(ctrlName)	String ctrlName	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)			SetDataFolder DF_normal		NVAR reducefactor=DF_normal:gv_reducefactor		Variable reduceflag	if (stringmatch (ctrlname,"proc_b0"))		reduceflag=1	else		reduceflag=0	endif			Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))	toppath=w_DF[topdfrow]+w_sourceNames[index]	topname=w_sourceNames[index]	tempsel=w_sourceNamesSel[index]	w_sourceNamesSel[index]=0		if (strlen(toppath)==0)	break	endif	wave_path=toppath		Wave data=$wave_path	GetProList(DF_common,data,nan)	Panelimageupdate(3)		if (toplayernum==(dimsize(data,2)-1))		datalayernum=dimsize(data,2)-1 //toplayer		procdone=macro_reduce_pnts(wave_path,datalayernum,reducefactor,reduceflag,0)	else		datalayernum=toplayernum		if (processallflag==0)		Setdialogwindow(winname(0,65),data,"rpnts")		openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:			procdone=macro_reduce_pnts(wave_path,datalayernum,reducefactor,reduceflag,0)			break		case 1:			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r")			procdone=macro_reduce_pnts(wave_path,datalayernum,reducefactor,reduceflag,0)			datalayernum+=procdone			Variable procnum_new			if (reduceflag==0)				procnum_new=9			else				procnum_new=91			endif							if ((procnum==procnum_new)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)				else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)				endif			break		case 10:			procdone=macro_reduce_pnts(wave_path,datalayernum,reducefactor,reduceflag,1)			break		endswitch			endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath		if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif	panelimageupdate(3)			SetDatafolder DF		End   Function macro_reduce_pnts(itempath,toplayernum,reducefactor,reduceflag,flag)	String itempath	Variable toplayernum,reducefactor,reduceflag,flag	Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage			//Variable reducepnts = trunc(dimsize(tempimage,reduceflag)/reducefactor)	Variable p0 = dimoffset(tempimage,reduceflag)	Variable dp = reducefactor* dimdelta(tempimage,reduceflag)		if (reduceflag)		ImageInterpolate /PXSZ={1,reducefactor} Pixelate tempimage		Wave result=M_PixelatedImage		//duplicate /o M_PixelatedImage tempimage		Setscale /P y,p0,dp,result		Setscale /P x,dimoffset(tempimage,0),dimdelta(tempimage,0),result	else		ImageInterpolate /PXSZ={reducefactor,1} Pixelate tempimage		Wave result=M_PixelatedImage		Setscale /P x,p0,dp,result		Setscale /P y,dimoffset(tempimage,1),dimdelta(tempimage,1),result	endif		duplicate /o M_PixelatedImage tempimage		KillWaves /Z M_PixelatedImage		    	 String notestring=	Getlayernotestr(note(data),toplayernum,1)		if (strsearch(notestring,"_reduce",0)>=0)		Variable reduceflag_old=numberbykey("Reduceflag",notestring,"=","\r")		Variable rawlayernum=numberbykey("RawLayerNumber",notestring,"=","\r")		Variable rawprocnum=numberbykey("RawProcNumber",notestring,"=","\r")		Variable rawappendflag=numberbykey("Appendflag",notestring,"=","\r")				if (reduceflag==reduceflag_old)			Variable reducefactor_old=numberbykey("Reducefactor",notestring,"=","\r")			reducefactor= reducefactor_old*reducefactor			Add_proc_layer(data,tempimage,toplayernum)				if (reduceflag==0)							String notestr=procstring(9)				notestr=ReplaceStringByKey("Wavetype",notestr,"x_reduce","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,9,"=","\r")			else				notestr=procstring(91)				notestr=ReplaceStringByKey("Wavetype",notestr,"y_reduce","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,91,"=","\r")				endif						notestr=ReplacenumberByKey("RawLayerNumber",notestr,rawlayernum,"=","\r")			notestr=ReplacenumberByKey("RawProcNumber",notestr,rawprocnum,"=","\r")			notestr=ReplacenumberByKey("Appendflag",notestr,rawappendflag,"=","\r")			notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")			notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")			notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")			notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")			notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")			notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")			notestr=ReplacenumberByKey("Reducefactor",notestr,reducefactor,"=","\r")			notestr=ReplacenumberByKey("Reduceflag",notestr,reduceflag,"=","\r")				Add_proc_note(data,toplayernum,notestr)				Killwaves /Z tempimage			return 0		endif	endif		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)				if (reduceflag==0)		notestr=procstring(9)		notestr=ReplaceStringByKey("Wavetype",notestr,"x_reduce","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,9,"=","\r")	else		notestr=procstring(91)		notestr=ReplaceStringByKey("Wavetype",notestr,"y_reduce","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,91,"=","\r")		endif		notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("Reducefactor",notestr,reducefactor,"=","\r")	notestr=ReplacenumberByKey("Reduceflag",notestr,reduceflag,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		killwaves /Z tempimage		return procdoneEnd	 //////////////////////////crop image////////////////////////////////////////////////////////////////////// Function crop_image(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)			SetDataFolder DF_normal			NVAR pA=DF_common:gv_pA	NVAR qA=DF_common:gv_qA	NVAR pB=DF_common:gv_pB	NVAR qB=DF_common:gv_qB	Variable cropflag=0	strswitch (ctrlname)	case "proc_b5":	cropflag=0	break	case "proc_b6":	cropflag=1	break    case "proc_b7":    cropflag=2	break	case "proc_b8":    cropflag=3	break	endswitch		Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))	toppath=w_DF[topdfrow]+w_sourceNames[index]	topname=w_sourceNames[index]	tempsel=w_sourceNamesSel[index]	w_sourceNamesSel[index]=0		if (strlen(toppath)==0)	break	endif	wave_path=toppath		Wave data=$wave_path	GetProList(DF_common,data,nan)	Panelimageupdate(3)		if (toplayernum==(dimsize(data,2)-1))		datalayernum=dimsize(data,2)-1 //toplayer 		procdone=macro_crop_image(wave_path,datalayernum,pA,qA,pB,qB,cropflag,0) 	else		datalayernum=toplayernum		if (processallflag==0)			Setdialogwindow(winname(0,65),data,"crop")			openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:	 			procdone=macro_crop_image(wave_path,datalayernum,pA,qA,pB,qB,cropflag,0) 			break		case 1: ///insert new layer and auto process			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r") 			procdone=macro_crop_image(wave_path,datalayernum,pA,qA,pB,qB,cropflag,0)			datalayernum+=procdone					Variable procnum_new			if (cropflag==0)				procnum_new=10			elseif (cropflag==1)				procnum_new=101			elseif(cropflag==2)				procnum_new=102			else				procnum_new=103			endif					if ((procnum==procnum_new)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)			else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)			endif			break		case 10: //// append new layer 			procdone=macro_crop_image(wave_path,datalayernum,pA,qA,pB,qB,cropflag,1)			break		endswitch			endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif	panelimageupdate(3)					SetDatafolder DFEndFunction macro_crop_image(itempath,toplayernum,pA,qA,pB,qB,cropflag,flag)	String itempath	Variable toplayernum	Variable pA,qA,pB,qB	Variable cropflag,flag 		Wave data=$itempath		GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			String rawnotestr=note(tempimage)		Variable x0=numberbykey_reverse("CCDFirstXChannel",rawnotestr,"=","\r")	Variable x1=numberbykey_reverse("CCDLastXChannel",rawnotestr,"=","\r")	Variable y0=numberbykey_reverse("CCDFirstYChannel",rawnotestr,"=","\r")	Variable y1=numberbykey_reverse("CCDLastYChannel",rawnotestr,"=","\r")		String Acqmode=Stringbykey("AcquisitionMode",rawnotestr,"=","\r")			Wave tempimage	Variable p0,p1,q0,q1	p0=0	p1=dimsize(tempimage,0)-1	q0=0	q1=dimsize(tempimage,1)-1		Make /o/n=(dimsize(tempimage,0)) channel_xwave	Make /o/n=(dimsize(tempimage,1)) channel_ywave	Setscale /I x, y0,y1,channel_xwave	Setscale /I x, x0,x1,channel_ywave	channel_xwave=x	channel_ywave=x		switch (cropflag)	case 0://x		p0=max(p0,min(pA,pB))		p1=min(p1,max(pA,pB))		duplicate /o /R=[p0,p1][q0,q1] tempimage tempimage1		duplicate /o /R=[p0,p1] channel_xwave xwave		duplicate /o channel_ywave ywave	break	case 1: //y		q0=max(q0,min(qA,qB))		q1=min(q1,max(qA,qB))		duplicate /o /R=[p0,p1][q0,q1] tempimage tempimage1		duplicate /o /R=[q0,q1] channel_ywave ywave		duplicate /o channel_xwave xwave	break	case 2: //both		p0=max(p0,min(pA,pB))		p1=min(p1,max(pA,pB))		q0=max(q0,min(qA,qB))		q1=min(q1,max(qA,qB))		duplicate /o /R=[p0,p1][q0,q1] tempimage tempimage1		duplicate /o /R=[p0,p1] channel_xwave xwave		duplicate /o /R=[q0,q1] channel_ywave ywave	break	case 3: //smart		p0=detect_Nan_edge(tempimage,0,1)		p1=detect_Nan_edge(tempimage,0,0)		duplicate /o /R=[p0,p1][q0,q1] tempimage tempimage0		duplicate /o /R=[p0,p1] channel_xwave xwave		q0=detect_Nan_edge(tempimage0,1,1)		q1=detect_Nan_edge(tempimage0,1,0)		duplicate /o /R=[p0,p1][q0,q1] tempimage0 tempimage1		duplicate /o /R=[q0,q1] channel_ywave ywave	break	endswitch		duplicate /o tempimage1 tempimage		Killwaves /Z tempimage0,tempimage1		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		if (cropflag==0)		String notestr=procstring(10)		notestr=ReplaceStringByKey("Wavetype",notestr,"x_crop","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,10,"=","\r")	elseif (cropflag==1)		notestr=procstring(101)		notestr=ReplaceStringByKey("Wavetype",notestr,"y_crop","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,101,"=","\r")	elseif(cropflag==2)		notestr=procstring(102)		notestr=ReplaceStringByKey("Wavetype",notestr,"both_crop","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,102,"=","\r")	else		notestr=procstring(103)		notestr=ReplaceStringByKey("Wavetype",notestr,"smart_crop","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,103,"=","\r")	endif			x0=ywave[0]	x1=ywave[inf]	y0=xwave[0]	y1=xwave[inf]			notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")		notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("p0",notestr,p0,"=","\r")	notestr=ReplacenumberByKey("p1",notestr,p1,"=","\r")	notestr=ReplacenumberByKey("q0",notestr,q0,"=","\r")	notestr=ReplacenumberByKey("q1",notestr,q1,"=","\r")	notestr=ReplacenumberByKey("cropflag",notestr,cropflag,"=","\r")				notestr=ReplacenumberByKey("CCDFirstYChannel",notestr,y0,"=","\r")	notestr=ReplacenumberByKey("CCDLastYChannel",notestr,y1,"=","\r")		if (stringmatch(acqmode,"Swept")!=1)		notestr=ReplacenumberByKey("CCDFirstXChannel",notestr,x0,"=","\r")		notestr=ReplacenumberByKey("CCDLastXChannel",notestr,x1,"=","\r")	endif		Add_proc_note(data,targetlayernum,notestr)		killwaves /Z tempimage,channel_xwave,channel_ywave,xwave,ywave		return procdoneEnd	Function detect_Nan_edge(tempimage,dim,flag)Wave tempimageVariable dim,flagVariable indexmake /o/n=(dimsize(tempimage,(dim==0))) tempDCsif (flag)	index=0	do	if (dim)	tempDCs=tempimage[p][index]	else	tempDCs=tempimage[index][p]	endif	if (numtype(mean(tempDCs))!=2)	killwaves /Z tempDCs	return index	else	index+=1	endif	while (index<dimsize(tempimage,dim))	killwaves /Z tempDCs	return 0	else	index=dimsize(tempimage,dim)-1	do	if (dim)	tempDCs=tempimage[p][index]	else	tempDCs=tempimage[index][p]	endif	if (numtype(mean(tempDCs))!=2)	killwaves /Z tempDCs	return index	else	index-=1	endif	while (index>=0)	killwaves /Z tempDCs	return dimsize(tempimage,dim)-1endifEnd Function detect_value_edge(tempimage,dim,flag)Wave tempimageVariable dim,flagVariable indexmake /o/n=(dimsize(tempimage,(dim==0))) tempDCsif (flag)	index=0	do	if (dim)	tempDCs=tempimage[p][index]	else	tempDCs=tempimage[index][p]	endif		tempDCs=(numtype(tempDCs)==2)?(0):(1)		if (sum(tempDCs)>0)	killwaves /Z tempDCs	return index	else	index+=1	endif	while (index<dimsize(tempimage,dim))	killwaves /Z tempDCs	return 0	else	index=dimsize(tempimage,dim)-1	do	if (dim)	tempDCs=tempimage[p][index]	else	tempDCs=tempimage[index][p]	endif	tempDCs=(numtype(tempDCs)==2)?(0):(1)		if (sum(tempDCs)>0)	killwaves /Z tempDCs	return index	else	index-=1	endif	while (index>=0)	killwaves /Z tempDCs	return dimsize(tempimage,dim)-1endifEnd  ////////////////////////////////////////smooth///////////////////////////////////////////   Function smooth_xORy(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)	 	SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)			SetDataFolder DF_normal		NVAR xSmooth = DF_normal:gv_xSmooth	NVAR ySmooth = DF_normal:gv_ySmooth		Variable dimflag	if (stringmatch(ctrlName,"proc_b10"))	dimflag=0	else	dimflag=1	endif		Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))	toppath=w_DF[topdfrow]+w_sourceNames[index]	topname=w_sourceNames[index]	tempsel=w_sourceNamesSel[index]	w_sourceNamesSel[index]=0		if (strlen(toppath)==0)	break	endif	wave_path=toppath		Wave data=$wave_path	GetProList(DF_common,data,nan)	Panelimageupdate(3)		if (toplayernum==(dimsize(data,2)-1))		datalayernum=dimsize(data,2)-1 //toplayer		procdone=macro_smoothxory(wave_path,datalayernum,xsmooth,ySmooth,1,dimflag,0)	else		datalayernum=toplayernum		if (processallflag==0)		Setdialogwindow(winname(0,65),data,"smth")		openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:			procdone=macro_smoothxory(wave_path,datalayernum,xSmooth,ysmooth,1,dimflag,0)			break		case 1:			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r")			procdone=macro_smoothxory(wave_path,datalayernum,xSmooth,ysmooth,1,dimflag,0)			datalayernum+=procdone			variable procnum_new			if (dimflag)				procnum_new=11			else				procnum_new=111			endif							if ((procnum==procnum_new)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)			else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)			endif			break		case 10:			procdone=macro_smoothxory(wave_path,datalayernum,xSmooth,ysmooth,1,dimflag,1)			break		endswitch			endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif	panelimageupdate(3)			SetDatafolder DFEnd	Function macro_smoothxory(itempath,toplayernum,xsmoothpnts,ysmoothpnts,smoothtimes,dimflag,flag)	String itempath	Variable toplayernum,xsmoothpnts,ysmoothpnts,smoothtimes,dimflag,flag	Variable smoothpnts	Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage	if (dimflag)		smoothpnts=ysmoothpnts	else		smoothpnts=xsmoothpnts	endif	Variable index=0		do 			smooth /DIM=(dimflag) smoothpnts, tempimage		index+=1	while (index<smoothtimes)	String notestring=Getlayernotestr(note(data),toplayernum,1)		if (strsearch(notestring,"_smooth",0)>=0)		Variable dimflag_old=numberbykey("Dimflag",notestring,"=","\r")		Variable rawlayernum=numberbykey("RawLayerNumber",notestring,"=","\r")		Variable rawprocnum=numberbykey("RawProcNumber",notestring,"=","\r")		Variable rawappendflag=numberbykey("Appendflag",notestring,"=","\r")		if (Dimflag==dimflag_old)			smoothtimes+=numberbykey("Smoothtimes",notestring,"=","\r")			Add_proc_layer(data,tempimage,toplayernum)						if (dimflag)				String notestr=procstring(11)				notestr=ReplaceStringByKey("Wavetype",notestr,"y_smooth","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,11,"=","\r")			else				notestr=procstring(111)				notestr=ReplaceStringByKey("Wavetype",notestr,"x_smooth","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,111,"=","\r")			endif			notestr=ReplacenumberByKey("RawLayerNumber",notestr,rawlayernum,"=","\r")			notestr=ReplacenumberByKey("RawProcNumber",notestr,rawprocnum,"=","\r")		notestr=ReplacenumberByKey("Appendflag",notestr,rawappendflag,"=","\r")		notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")		notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")		notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")		notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")		notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")		notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")		notestr=ReplacenumberByKey("Smoothpnts",notestr,smoothpnts,"=","\r")		notestr=ReplacenumberByKey("Smoothtimes",notestr,smoothtimes,"=","\r")		notestr=ReplacenumberByKey("Dimflag",notestr,Dimflag,"=","\r")			Add_proc_note(data,toplayernum,notestr)			Killwaves /Z tempimage		return 0			endif	endif		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)			if (dimflag)		notestr=procstring(11)		notestr=ReplaceStringByKey("Wavetype",notestr,"y_smooth","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,11,"=","\r")	else		notestr=procstring(111)		notestr=ReplaceStringByKey("Wavetype",notestr,"x_smooth","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,111,"=","\r")	endif	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("Smoothpnts",notestr,smoothpnts,"=","\r")	notestr=ReplacenumberByKey("Smoothtimes",notestr,smoothtimes,"=","\r")	notestr=ReplacenumberByKey("Dimflag",notestr,Dimflag,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		killwaves /Z tempimage		return procdoneEnd//////////////////////////derivative //////////////////////////////////////////////////Function M_derivative(ctrlName)	String ctrlName	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)	SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)				SetDataFolder DF_normal		NVAR gv_MDCweight		Variable dimflag	if (stringmatch(ctrlName,"proc_b20"))		Dimflag=0	elseif (stringmatch(ctrlName,"proc_b21"))		Dimflag=1	else		Dimflag=2 //2D	endif		Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel			do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif			wave_path=toppath				Wave data=$wave_path			GetProList(DF_common,data,nan)			Panelimageupdate(3)				if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				procdone=macro_derivative(wave_path,datalayernum,1,dimflag,gv_MDCweight,0)			else				datalayernum=toplayernum				if (processallflag==0)					Setdialogwindow(winname(0,65),data,"Div")					openautoprocesswindow(winname(0,65))				endif				switch (autoprocessflag)					case 0:						break					case 2:						procdone=macro_derivative(wave_path,datalayernum,1,dimflag,gv_MDCweight,0)						break					case 1:						String procstr=Getlayernotestr(note(data),toplayernum+1,2)						String layerstr=Getlayernotestr(note(data),toplayernum+1,1)						Variable procnum=numberbykey("processnumber",layerstr,"=","\r")						procdone=macro_derivative(wave_path,datalayernum,1,gv_MDCweight,dimflag,0)						datalayernum+=procdone								variable procnum_new						if (dimflag==1)							procnum_new=12						elseif (dimflag==0)							procnum_new=121						else								procnum_new=122						endif						if ((procnum==procnum_new)&&(forceinsertflag==0))							procstr=Getlayernotestr(procstr,toplayernum+2,2)							procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)						else							procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)						endif						break					case 10:						procdone=macro_derivative(wave_path,datalayernum,1,dimflag,gv_MDCweight,1)						break					endswitch				endif				w_sourceNamesSel[index]=tempsel			endif				index+=1		while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath				if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)			SetDatafolder DFEnd	Function Diff2nd_2D(data,Ix)	Wave data	Variable Ix		Variable dx=dimdelta(data,0)	Variable dy=dimdelta(data,1)		Variable weight=(dx/dy)		if (Ix>0)		weight*=Ix	elseif (Ix<0)		weight/=abs(Ix)	endif		duplicate /o/FREE data, data_diffx2,data_diffy2	Differentiate/DIM = (0) data_diffx2	Differentiate/DIM = (0) data_diffx2	Differentiate/DIM = (1) data_diffy2	Differentiate/DIM = (1) data_diffy2		data=data_diffx2[p][q]+weight*weight*data_diffy2[p][q]End	Function macro_derivative(itempath,toplayernum,Derivativetimes,dimflag,MDCweight,flag)		String itempath	Variable toplayernum,Derivativetimes,dimflag,MDCweight,flag	Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage			Variable index	do			if (dimflag<2)			Differentiate/DIM = (dimflag) tempimage		else			Diff2nd_2D(tempimage,MDCweight)		endif		index+=1	while (index<Derivativetimes)				String notestring=Getlayernotestr(note(data),toplayernum,1)		if (strsearch(notestring,"_Derivative",0)>=0)		Variable dimflag_old=numberbykey("Dimflag",notestring,"=","\r")		Variable rawlayernum=numberbykey("RawLayerNumber",notestring,"=","\r")		Variable rawprocnum=numberbykey("RawProcNumber",notestring,"=","\r")		Variable rawappendflag=numberbykey("Appendflag",notestring,"=","\r")		if (Dimflag==dimflag_old)			Derivativetimes+=numberbykey("Derivativetimes",notestring,"=","\r")			Add_proc_layer(data,tempimage,toplayernum)				if (dimflag==1)				String notestr=procstring(12)				notestr=ReplaceStringByKey("Wavetype",notestr,"y_Derivative","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,12,"=","\r")			elseif (dimflag==0)				notestr=procstring(121)				notestr=ReplaceStringByKey("Wavetype",notestr,"x_Derivative","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,121,"=","\r")			else				notestr=procstring(122)				notestr=ReplaceStringByKey("Wavetype",notestr,"xy_Derivative","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,122,"=","\r")			endif						notestr=ReplacenumberByKey("RawLayerNumber",notestr,rawlayernum,"=","\r")			notestr=ReplacenumberByKey("RawProcNumber",notestr,rawprocnum,"=","\r")			notestr=ReplacenumberByKey("Appendflag",notestr,rawappendflag,"=","\r")			notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")			notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")			notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")			notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")			notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")			notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")			notestr=ReplacenumberByKey("derivativetimes",notestr,derivativetimes,"=","\r")			notestr=ReplacenumberByKey("Dimflag",notestr,Dimflag,"=","\r")			notestr=ReplacenumberByKey("MDCweight",notestr,MDCweight,"=","\r")						Add_proc_note(data,toplayernum,notestr)				Killwaves /Z tempimage			return 0		endif	endif		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif			Add_proc_layer(data,tempimage,targetlayernum)			if (dimflag==1)		notestr=procstring(12)		notestr=ReplaceStringByKey("Wavetype",notestr,"y_Derivative","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,12,"=","\r")	elseif (dimflag==0)		notestr=procstring(121)		notestr=ReplaceStringByKey("Wavetype",notestr,"x_Derivative","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,121,"=","\r")	else		notestr=procstring(121)		notestr=ReplaceStringByKey("Wavetype",notestr,"xy_Derivative","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,122,"=","\r")	endif		notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("derivativetimes",notestr,derivativetimes,"=","\r")	notestr=ReplacenumberByKey("Dimflag",notestr,Dimflag,"=","\r")	notestr=ReplacenumberByKey("MDCweight",notestr,MDCweight,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		Killwaves /Z tempimage		return procdone	End   //////////////////////////Curvature //////////////////////////////////////////////////Function M_Curvature(ctrlName)	String ctrlName	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)	SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)				SetDataFolder DF_normal		NVAR gv_MDCweight	NVAR gv_curvefactor		Variable dimflag	if (stringmatch(ctrlName,"proc_b23"))		Dimflag=0	elseif (stringmatch(ctrlName,"proc_b24"))		Dimflag=1	else		Dimflag=2 //2D	endif		Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel			do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif			wave_path=toppath				Wave data=$wave_path			GetProList(DF_common,data,nan)			Panelimageupdate(3)				if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				procdone=macro_Curvature(wave_path,datalayernum,1,dimflag,gv_MDCweight,gv_curvefactor,0)			else				datalayernum=toplayernum				if (processallflag==0)					Setdialogwindow(winname(0,65),data,"Div")					openautoprocesswindow(winname(0,65))				endif				switch (autoprocessflag)					case 0:						break					case 2:						procdone=macro_Curvature(wave_path,datalayernum,1,dimflag,gv_MDCweight,gv_curvefactor,0)						break					case 1:						String procstr=Getlayernotestr(note(data),toplayernum+1,2)						String layerstr=Getlayernotestr(note(data),toplayernum+1,1)						Variable procnum=numberbykey("processnumber",layerstr,"=","\r")						procdone=macro_Curvature(wave_path,datalayernum,1,dimflag,gv_MDCweight,gv_curvefactor,0)						datalayernum+=procdone								variable procnum_new						if (dimflag==1)							procnum_new=14						elseif (dimflag==0)							procnum_new=141						else							procnum_new=142						endif						if ((procnum==procnum_new)&&(forceinsertflag==0))							procstr=Getlayernotestr(procstr,toplayernum+2,2)							procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)						else							procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)						endif						break					case 10:						procdone=macro_Curvature(wave_path,datalayernum,1,dimflag,gv_MDCweight,gv_curvefactor,1)						break					endswitch				endif				w_sourceNamesSel[index]=tempsel			endif				index+=1		while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath				if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)			SetDatafolder DFEnd	Function Curvature_Image(data,Ix,CFactor,dimflag)	Wave data	Variable Ix,CFactor,dimflag		Duplicate /O/Free data, Diff1x,Diff1y,Diff2x,Diff2y,Diffxy		Variable dx=dimdelta(data,0)	Variable dy=dimdelta(data,1)				Differentiate/DIM = (0) Diff1x	Differentiate/DIM = (0) Diff2x	Differentiate/DIM = (0) Diff2x		Differentiate/DIM = (1) Diff1y	Differentiate/DIM = (1) Diff2y	Differentiate/DIM = (1) Diff2y		Differentiate/DIM = (0) Diffxy	Differentiate/DIM = (1) Diffxy		if (dimflag==0) //mdc		Variable normI=abs(wavemin(Diff1x))		data=Diff2x/(CFactor*normI*normI+Diff1x*Diff1x)^1.5		elseif (dimflag==1)		normI=abs(wavemin(Diff1y))		data=Diff2y/(CFactor*normI*normI+Diff1y*Diff1y)^1.5		else		Variable weight=(dx/dy)*(dx/dy)			if (Ix>0)			weight*=Ix		elseif (Ix<0)			weight/=abs(Ix)		endif				Variable normIx=abs(wavemin(Diff1x))		Variable normIy=abs(wavemin(Diff1y))				normI=max(normIx*normIx,normIy*normIy*weight)				data=((CFactor*normI+weight*Diff1x*Diff1x)*Diff2y-2*weight*Diff1x*Diff1y*Diffxy+weight*(Cfactor*normI+Diff1y*Diff1y)*Diff2x)/(Cfactor*normI+weight*Diff1x*Diff1x+Diff1y*Diff1y)^1.5					endif		EndFunction macro_Curvature(itempath,toplayernum,Derivativetimes,dimflag,MDCweight,CFactor,flag)		String itempath	Variable toplayernum,Derivativetimes,dimflag,MDCweight,CFactor,flag	Wave data=$itempath			GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		Variable index	do			Curvature_Image(tempimage,MDCweight,CFactor,dimflag)		index+=1	while (index<Derivativetimes)				String notestring=Getlayernotestr(note(data),toplayernum,1)		if (strsearch(notestring,"_Curvature",0)>=0)		Variable dimflag_old=numberbykey("Dimflag",notestring,"=","\r")		variable rawlayernum=numberByKey("RawLayerNumber",notestring,"=","\r")		Variable rawprocnum=numberbykey("RawProcNumber",notestring,"=","\r")		Variable rawappendflag=numberbykey("Appendflag",notestring,"=","\r")				if (Dimflag==dimflag_old)			Derivativetimes+=numberbykey("Curvaturetimes",notestring,"=","\r")			Add_proc_layer(data,tempimage,toplayernum)				if (dimflag==1)				String notestr=procstring(14)				notestr=ReplaceStringByKey("Wavetype",notestr,"y_Curvature","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,14,"=","\r")			elseif (dimflag==0)				notestr=procstring(141)				notestr=ReplaceStringByKey("Wavetype",notestr,"x_Curvature","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,141,"=","\r")			else				notestr=procstring(142)				notestr=ReplaceStringByKey("Wavetype",notestr,"xy_Curvature","=","\r")				notestr=ReplacenumberByKey("ProcessNumber",notestr,142,"=","\r")			endif						notestr=ReplacenumberByKey("RawLayerNumber",notestr,rawlayernum,"=","\r")			notestr=ReplacenumberByKey("RawProcNumber",notestr,rawprocnum,"=","\r")			notestr=ReplacenumberByKey("Appendflag",notestr,rawappendflag,"=","\r")			notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")			notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")			notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")			notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")			notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")			notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")			notestr=ReplacenumberByKey("Curvaturetimes",notestr,derivativetimes,"=","\r")			notestr=ReplacenumberByKey("Dimflag",notestr,Dimflag,"=","\r")			notestr=ReplacenumberByKey("MDCweight",notestr,MDCweight,"=","\r")			notestr=ReplacenumberByKey("curveFactor",notestr,CFactor,"=","\r")						Add_proc_note(data,toplayernum,notestr)				Killwaves /Z tempimage			return 0		endif	endif		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)			if (dimflag==1)		notestr=procstring(14)		notestr=ReplaceStringByKey("Wavetype",notestr,"y_Curvature","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,14,"=","\r")	elseif (dimflag==0)		notestr=procstring(141)		notestr=ReplaceStringByKey("Wavetype",notestr,"x_Curvature","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,141,"=","\r")	else		notestr=procstring(142)		notestr=ReplaceStringByKey("Wavetype",notestr,"xy_Curvature","=","\r")		notestr=ReplacenumberByKey("ProcessNumber",notestr,142,"=","\r")	endif		notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("Curvaturetimes",notestr,derivativetimes,"=","\r")	notestr=ReplacenumberByKey("Dimflag",notestr,Dimflag,"=","\r")	notestr=ReplacenumberByKey("MDCweight",notestr,MDCweight,"=","\r")	notestr=ReplacenumberByKey("curveFactor",notestr,CFactor,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		Killwaves /Z tempimage		return procdone	End    //////////////////////////////////symmetrized//////////////////////////////////    Function sym_image(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)			SetDataFolder DF_normal			NVAR gv_symef=DF_normal:gv_symef				Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))	toppath=w_DF[topdfrow]+w_sourceNames[index]	topname=w_sourceNames[index]	tempsel=w_sourceNamesSel[index]	w_sourceNamesSel[index]=0		if (strlen(toppath)==0)	break	endif	wave_path=toppath		Wave data=$wave_path	GetProList(DF_common,data,nan)	Panelimageupdate(3)		if (toplayernum==(dimsize(data,2)-1))		datalayernum=dimsize(data,2)-1 //toplayer 		procdone=macro_sym_image(wave_path,datalayernum,gv_symef,0) 	else	datalayernum=toplayernum		if (processallflag==0)		Setdialogwindow(winname(0,65),data,"crop")		openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:	 			procdone=macro_sym_image(wave_path,datalayernum,gv_symef,0) 			break		case 1:			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r") 			procdone=macro_sym_image(wave_path,datalayernum,gv_symef,0)			datalayernum+=procdone			if ((procnum==13)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)			else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)			endif			break		case 10:			procdone=macro_sym_image(wave_path,datalayernum,gv_symef,1)			break		endswitch			endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)					SetDatafolder DFEndFunction macro_sym_image(itempath,toplayernum,gv_EF,flag)	String itempath	Variable toplayernum	Variable gv_ef	Variable flag 		Wave data=$itempath		GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage		if ((gv_ef<M_y0(tempimage))||(gv_ef>M_y1(tempimage)))	return 0	endif	MirrorEDCint(tempimage,gv_ef)		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)			String notestr=procstring(13)		notestr=ReplaceStringByKey("Wavetype",notestr,"Symmetrized","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,13,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("symEF",notestr,gv_ef,"=","\r")		Add_proc_note(data,targetlayernum,notestr)		killwaves /Z tempimage		return procdoneEnd	   Function MirrorEDCint(Image,EF)	Wave Image	Variable EF	Variable Efn,En	Efn=round((EF-dimoffset(Image,1))/dimdelta(Image,1))	String MWaveName	DFREF DF=GetDatafolderDFR()	String notestr=note(Image)	MwaveName="w_symresults"	Make /o /n=((dimsize(Image,0)),(2*(Efn)+1)) w_symresults	Wave MImage=$MwaveName	Setscale /P x,dimoffset(Image,0),dimdelta(Image,0),MImage	Setscale /I y,dimoffset(Image,1),(2*EF-dimoffset(Image,1)),MImage	Make /o/n=(dimsize(MImage,1)) IntEDC1,IntEDC2	Setscale /I x,dimoffset(Image,1),(2*EF-dimoffset(Image,1)),IntEDC1,IntEDC2	Variable XMax=dimoffset(Image,1)+(dimsize(Image,1)-1)*dimdelta(Image,1)	Make /o/n=(dimsize(Image,1)) XImage,TempEDc	Setscale /P x,dimoffset(Image,1),dimdelta(Image,1),XImage,TempEDC	XImage=x	Variable index=0	do		TempEDC=Image[index][p]		IntEDC1=interp(x,XImage,TempEDC)		IntEDC1=(p>(x2pnt(IntEDC1,XMax)))?(0):IntEDC1		IntEDC2=IntEDC1[numpnts(IntEDC1)-p-1]		MImage[index][]=IntEDC1[q]+IntEDC2[q]	index+=1	while (index<(dimsize(MImage,0)))	note MImage notestr	duplicate /o Mimage, Image	KillWaves /Z XIMage,IntEDC1,IntEDC2,TempEDC,w_symresults	SetDatafolder DFEnd    /////////////////Correct non-linearity///////////////   Function Proc_nonLinear_image(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DF_common=$(DF_panel+":panel_common")	DFREF DF_normal=$(DF_panel+":process")	SetActivesubwindow $winname(0,65)		SVAR sourcePathlist=DF_common:gs_sourcePathlist	SVAR sourcenamelist=DF_common:gs_sourcenamelist	SVAR toppath=DF_common:gs_TopItemPath	SVAR topName = DF_common:gs_TopItemName	NVAR toplayernum=DF_common:gv_toplayernum	NVAR topwaverow=DF_common:gv_topwaverow	NVAR topdfrow=DF_common:gv_topdfrow	WAVE/t w_DF=DF_common:w_DF	WAVE/t w_sourceNames=DF_common:w_sourceNames	Wave/b w_sourceNamesSel=DF_common:w_sourceNamesSel	NVAR autolayerflag=DF_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DF_common,1)			SetDataFolder DF_normal			NVAR gv_nonlinear_flag=DF_normal:gv_nonlinear_flag	SVAR gs_procwavepath=DF_normal:gs_procwavepath	NVAR gv_procwaveflag=DF_normal:gv_procwaveflag	Variable dimflag=0		if (gv_procwaveflag!=3) //1D		dimflag=1	else	  //2D		dimflag=2	endif					Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))	toppath=w_DF[topdfrow]+w_sourceNames[index]	topname=w_sourceNames[index]	tempsel=w_sourceNamesSel[index]	w_sourceNamesSel[index]=0		if (strlen(toppath)==0)	break	endif	wave_path=toppath		Wave data=$wave_path	GetProList(DF_common,data,nan)	Panelimageupdate(3)		if (toplayernum==(dimsize(data,2)-1))		datalayernum=dimsize(data,2)-1 //toplayer 		procdone=macro_nonlinear_corr_image(wave_path,datalayernum,gv_nonlinear_flag,dimflag,gs_procwavepath,0) 	else	datalayernum=toplayernum		if (processallflag==0)		Setdialogwindow(winname(0,65),data,"crop")		openautoprocesswindow(winname(0,65))		endif		switch (autoprocessflag)		case 0:			break		case 2:	 			procdone=macro_nonlinear_corr_image(wave_path,datalayernum,gv_nonlinear_flag,dimflag,gs_procwavepath,0) 			break		case 1:			String procstr=Getlayernotestr(note(data),toplayernum+1,2)			String layerstr=Getlayernotestr(note(data),toplayernum+1,1)			Variable procnum=numberbykey("processnumber",layerstr,"=","\r") 			procdone=macro_nonlinear_corr_image(wave_path,datalayernum,gv_nonlinear_flag,dimflag,gs_procwavepath,0)			datalayernum+=procdone			if ((procnum==13)&&(forceinsertflag==0))				procstr=Getlayernotestr(procstr,toplayernum+2,2)				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)			else				procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)			endif			break		case 10:			procdone=macro_nonlinear_corr_image(wave_path,datalayernum,gv_nonlinear_flag,dimflag,gs_procwavepath,1)			break		endswitch			endif	w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath			if (autolayerflag==0)		GetProList(DF_common,data,procdone)	else		GetProList(DF_common,data,Nan)	endif		panelimageupdate(3)					SetDatafolder DF	end   Function macro_nonlinear_corr_image(itempath,toplayernum,gv_tmfflag,proc_dimflag,procwavepath,flag)	String itempath	Variable toplayernum	Variable gv_tmfflag	Variable proc_dimflag	String procwavepath	Variable flag 		Wave data=$itempath		GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Correct_nonlinear_image(tempimage,gv_tmfflag,proc_dimflag,procwavepath)				Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		String notestr=procstring(15)		notestr=ReplaceStringByKey("Wavetype",notestr,"nonlinear_corr","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,15,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("tmfflag",notestr,gv_tmfflag,"=","\r")	notestr=ReplacenumberByKey("dimflag",notestr,proc_dimflag,"=","\r")	notestr=ReplaceStringByKey("procwavepath",notestr,procwavepath,"=","\r")	Add_proc_note(data,targetlayernum,notestr)		killwaves /Z tempimage		return procdoneEnd	    Function Correct_nonlinear_image(tempimage,gv_tmfflag,proc_dimflag,procwavepath)	Wave tempimage	Variable gv_tmfflag	Variable proc_dimflag	String procwavepath	print "function to be developed"//	//	Wave procwave=$procwavepath//	//	//	//	if (proc_dimflag==1) //EDC//		Variable xn=dimsize(procwave,0)//		Variable yn=dimsize(procwave,1)//		Variable x0=M_x0(procwave)//		Variable x1=M_x1(procwave)//		Variable y0=M_y0(procwave)//		Variable y1=M_y1(procwave)//	//		if (wavemax(tempimage)>y1)//			DoAlert 1, "Data exceed the maxium intensity, continue interp?"//			if (V_flag==1)//				Variable dy=dimdelta(procwave,1)//				make /o/n=(xn,(yn+(wavemax(tempimage)-y1)/dy+1)) procwave_tmf//				Setscale /P y, y0,dy,procwave_tmf//				Setscale /P x, x0,dimdelta(procwave,0),procwave_tmf//				procwave_tmf=(y>y1)?(procwave[p][yn-1]+(q-yn+1)*(procwave[p][yn-1]-procwave[p][yn-2])):(procwave[p][q])//				//				////			elseif (V_flag==2)//				return 0 //			endif//		else//			duplicate /o/Free procwave,procwave_tmf//		endif//	//		 y1=M_y1(procwave_tmf)//		//		Make /o/n=(yn) Corcurve_temp//		Setscale /I x, y0,y1,Corcurve_temp//	//		duplicate /o/free tempimage, data_backup//		Variable index=0//		variable index_x//		do//			index_x=dimoffset(tempimage,0)+dimdelta(tempimage,0)*index//			Corcurve_temp=procwave_tmf(index_x)[p]//			if (gv_tmfflag==0)//				variable meanvalue=mean(Corcurve_temp)//				Corcurve_temp/=meanvalue//((y1-y0)/2)/meanvalue//			endif//			//			tempimage[index][]=Corcurve_temp(data_backup[p][q])//			index+=1//		while (index<dimsize(tempimage,0))//		//		//Killwaves /Z Corcurve_Temp,procwave_tmf//		//		return 1//	else //each pixel//		xn=dimsize(procwave,0)//		yn=dimsize(procwave,1)//		Variable zn=dimsize(procwave,2)//		y0=M_y0(procwave)//		y1=M_y1(procwave)//		x0=M_x0(procwave)//		x1=M_x1(procwave)//		Variable z0=M_z0(procwave)//		Variable z1=M_z1(procwave)//		//		if (wavemax(tempimage)>z1)//			DoAlert 1, "Data exceed the maxium intensity, continue interp?"//			if (V_flag==1)//				Variable dz=dimdelta(procwave,2)//				make /o/n=(xn,yn,(zn+(wavemax(tempimage)-z1)/dz+1)) procwave_tmf//				Setscale /P x, x0,dimdelta(procwave,0),procwave_tmf//				Setscale /P y, y0,dimdelta(procwave,1),procwave_tmf//				Setscale /P z, z0,dz,procwave_tmf//				procwave_tmf=(z>z1)?(procwave[p][q][zn-1]+(r-zn+1)*(procwave[p][q][zn-1]-procwave[p][q][zn-2])):(procwave[p][q][r])//			elseif (V_flag==2)//				return 0 //			endif//		else//			duplicate /o/Free procwave,procwave_tmf//		endif//		//		z1=M_z1(procwave_tmf)//		//		Make /o/n=(zn) Corcurve_temp//		Setscale /I z, z0,z1,Corcurve_temp//	//		duplicate /o/free tempimage, data_backup//		index=0//		Variable yindex=0//		do//			yindex=0//			do//				Corcurve_temp=procwave_tmf[index][yindex][p]//				if (gv_tmfflag==0)//					Corcurve_temp/=mean(Corcurve_temp)//((z1-z0)/2)/mean(Corcurve_temp)//				endif//			//				tempimage[index][yindex]=Corcurve_temp(data_backup[p][q])//				yindex+=1//			while (yindex<yn)//			index+=1//		while (index<xn)//		//		//	//		Killwaves /Z Corcurve_Temp,procwave_tmf//		return 1//	endif//		return 0End      Function AN_edc_bkg(pw,yw,xw): FitFunc	//this function gives a background = poly1 + FD(w-E0,T)* poly2	wave pw, yw, xw	//pw  poly1 paras	//pw poly2 paras	//pw  E0,T		wave poly1wave,poly2wave		variable poly1num = numpnts(poly1wave)	variable poly2num = numpnts(poly2wave)		variable E0 = pw[poly1num+poly2num]	variable T = pw[poly1num+poly2num+1]		poly1wave = pw[p]	poly2wave = pw[poly1num+p]		yw = poly(poly1wave,xw[p]) + Fermi_D(xw[p]-E0,T)*poly(poly2wave,xw[p])end	function Fermi_D(w,T)	variable w, T		variable kb = 8.61733034e-5		return 1/(1+exp(w/(kb*T)))end