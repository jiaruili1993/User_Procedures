#pragma rtGlobals=1		// Use modern global access method.#pragma version = 3.00#pragma ModuleName = prefs#pragma IgorVersion = 5.0Function prefs_initAutosaveTask()	KillBackground	SetBackground prefs_autosaveTask()	CtrlBackground period=3600,dialogsOk=0,noBurst=1	NVAR autosave_interval = root:InternalUse:prefs:gv_autosave_interval	SVAR autosave_fname = root:InternalUse:prefs:gs_autosave_fname	Variable/G root:internalUse:gv_minutesToNextAutosave = autosave_interval + 1	if (autosave_interval > 0)		printf "%s, %s, Initializing Autosave task: save to '%s' every %d minutes.\r", Date(), Time(), autosave_fname, autosave_interval	else		printf "%s, %s, Initializing Autosave task: Autosave is disabled.\r", Date(), Time()	endif	SetBackground prefs_autosaveTask()	// initialize background task to exec every minute.	CtrlBackground period=3600,noBurst=1,dialogsOK=0, startEndFunction prefs_autosaveTask()	NVAR autosave_interval = root:InternalUse:prefs:gv_autosave_interval	SVAR autosave_fname = root:InternalUse:prefs:gs_autosave_fname	NVAR minutesToNextAutosave = root:internalUse:gv_minutesToNextAutosave		if (autosave_interval <= 0) // autosave disabled		minutesToNextAutosave = 0		return 0	endif		minutesToNextAutosave -= 1		if (minutesToNextAutosave <= 0)		printf "Autosave: %s ", Time()		minutesToNextAutosave = autosave_interval		if (strlen(PathList("home",";","")) == 0)			DoAlert 0, "AutoSave does not work for experiments which have never been saved.\rTo turn off this annoying message, either save your experiment or turn off AutSave in preferences."			printf "WARNING: NOT saved since experiment was never saved by user.\r"		endif		PathInfo home		if (V_flag != 1)			printf "WARNING: current path does not exist. ('%s'). NOT saving.\r", S_path			return 0		endif		if (stringmatch(S_path, "*WaveMetrics:Igor Pro Folder*"))			printf "WARNING: current path still seems to be the Igor Pro folder ('%s'). NOT saving.\r", S_path			return 0		endif		printf "saving experiment as '%s' in directory '%s'.\r", autosave_fname, S_path		SaveExperiment/C/P=home as autosave_fname	endif	return 0EndWindow prefs_openPanel() : Panel	PauseUpdate; Silent 1		// building window...	String DF = GetDataFolder (1)		SetDataFolder root:InternalUse	NewDataFolder/O/S Prefs		DoWindow/K prefs_panel	NewPanel/N=prefs_panel/K=1/W=(0,0,280,500) as "Preferences"	Groupbox nic_gb0, pos={10,10}, size={260,65}, title="NickName from filename:"	SetVariable nic_sv0 ,pos={20,35},size={235,20},title="first character #", limits={0,Inf,1}, value= gv_Nick_firstChar, variable = gv_Nick_firstChar	SetVariable nic_sv1 ,pos={20,55},size={235,20},title="last character # ", limits={0,Inf,1}, value= gv_Nick_lastChar, variable = gv_Nick_lastChar		Groupbox cro_gb0, pos={10,80}, size={260,85}, title="croissant-file loader:"	CheckBox cro_c0, pos={20,105},size={235,20},title="read all groups", value= gv_Croissant_all_gr, variable = gv_Croissant_all_gr	CheckBox cro_c1, pos={20,125},size={235,20},title="read all channels", value= gv_Croissant_all_ch, variable = gv_Croissant_all_ch	CheckBox cro_c2, pos={20,145},size={235,20},title="read data-block in carpet-files", value= gv_Croissant_read_data, variable = gv_Croissant_read_data	Groupbox fit_gb0, pos={10,170}, size={260,85}, title="Makoto's FITS-file loader:"	SetVariable fit_sv0, pos={20,195},size={235,20},title="Analyzer Center pixel", value= gv_FITS_centerPixel, variable = gv_FITS_centerPixel	SetVariable fit_sv1, pos={20,215},size={235,20},title="Analyzer Angle per pixel", value= gv_FITS_anglePerPixel, variable = gv_FITS_anglePerPixel	CheckBox fit_c2, pos={20,235},size={235,20},title="Convert Channels -> Angle", value= gv_FITS_convertVcp2Angle, variable = gv_FITS_convertVcp2Angle	Groupbox sav_gb0, pos={10,260}, size={260,65}, title="auto-save:"	SetVariable cro_sv0, pos={20,285},size={235,20},title="interval (minutes) (0=disable)", value= gv_autosave_interval, variable = gv_autosave_interval, proc=prefs#setVariableAutoSaveInt	SetVariable cro_sv1, pos={20,305},size={235,20},title="file suffix", value= gs_autosave_fname, variable = gs_autosave_fname		Groupbox psv_gb0, pos={10,330}, size={260,95}, title="save above preferences"//	Button button0,pos={20,355},size={235,18},proc=prefs#buttonSaveForExp,title="for this experiment"	Button button1,pos={20,375},size={235,18},proc=prefs#buttonSaveGlobal,title="globally for i_photo"	Button button2,pos={20,395},size={235,18},proc=prefs#buttonReset,title="revert from saved i_photo prefs"	SetDataFolder $DFEndMacroStatic Function setVariableAutoSaveInt(ctrlName,varNum,varStr,varName) : SetVariableControl	String ctrlName	Variable varNum	// value of variable as number	String varStr		// value of variable as string	String varName	// name of variable	prefs_initAutosaveTask()End// save for i_photo (write to prefs-file)Static Function buttonSaveGlobal(ctrlName) : ButtonControl	String ctrlName	String objName	String DF = GetDataFolder (1)	SetDataFolder root:InternalUse:prefs		Make/O/N=(countobjects("",2)) Pref_varValues	Make/T/O/N=(countobjects("",2)) Pref_varNames	Make/T/O/N=(countobjects("",3)) Pref_strValues	Make/T/O/N=(countobjects("",3)) Pref_strNames		Variable index = 0		do	// numeric variables			objName = GetIndexedObjName(":", 2, index)				if (strlen(objName) == 0)				break			endif			NVAR value = $ObjName			Pref_varValues[index] = value			Pref_varNames[index] = ObjName		index += 1		while(1)				index = 0		do	// string variables			objName = GetIndexedObjName(":", 3, index)				if (strlen(objName) == 0)				break			endif			SVAR sValue = $ObjName			Pref_strValues[index] = sValue			Pref_strNames[index] = ObjName		index += 1		while(1)		Save/T/O/P=i_photo_pathSupplemental Pref_strNames, Pref_strValues, Pref_varNames, Pref_varValues as "Pref_waves.itx"	DoWindow/K i_Prefs		SetDataFolder $DFEnd// 'reset': reload prefsStatic Function buttonReset(ctrlName) : ButtonControl	String ctrlName	String DF = GetDataFolder (1)	SetDataFolder root:InternalUse:prefs		LoadWave/O/Q/T/P= i_photo_pathSupplemental "Pref_waves.itx"		WAVE/T strNames = Pref_strNames	WAVE/T varNames = Pref_varNames	WAVE/T strValues = Pref_strValues	WAVE varValues = Pref_varValues				Variable index = 0		do			Variable/G $varNames[index]=varValues[index]		index+=1		while ( index < numpnts(varNames) )		index = 0		do			String/G $strNames[index]=strValues[index]		index+=1		while ( index < numpnts(strNames) )		SetDataFolder $DFEnd