#pragma rtGlobals=1		// Use modern global access method.#pragma version = 2.00#pragma ModuleName = marquee// ---------  normalization functions in the marquee menu -------------------- FB 06/14/04//// this file can be ran stand-alone. the functions create the DF root:internalUse:norm with some globalsMenu "GraphMarquee"	"-"	"Subtract Average", /q, marquee_norm(0)	"Divide by Average", /q, marquee_norm(1)End// flag is 1 for division, zero for subraction// only the top-image of a graph is correctedFunction marquee_norm(flag)	Variable flag	GetMarquee/K/Z left, bottom	if (v_flag==0)		DoAlert 0, "Only for graphs!"	endif		String traceList, trace, imageList, image, w_DF, M_DF	Variable index, go_1D, go_2Dx, go_2Dy, avg	Variable startP, endP, startQ, endQ	Variable alert_raw, alert_internal		// make the globals	String DF = GetDataFolder (1)	SetDataFolder root:	NewDataFolder/o/s internalUse	NewDataFolder/o/s normalize		String/G gs_marquee_action		Variable/G gv_marquee_x0 = v_left		Variable/G gv_marquee_x1 = v_right		Variable/G gv_marquee_y0 = v_bottom		Variable/G gv_marquee_y1 = v_top		traceList = TraceNameList("",";",1)	imageList = ImageNameList("",";")		// alert, if waves are "rawData" or internal.	alert_raw = 0	do		trace = StringFromList(index,traceList)		if (strlen(trace)==0)			break		endif		WAVE w = TraceNameToWaveRef(s_marqueeWin,trace)		w_DF = GetWavesDataFolder(w,1)		alert_raw += stringmatch(w_DF, "*rawData*")		alert_internal += stringmatch(w_DF, "*internalUse*")	index += 1	while(1)	do		image = StringFromList(index, imageList)		if (strlen(image)==0)			break		endif		WAVE M = ImageNameToWaveRef(s_marqueeWin,image)		M_DF = GetWavesDataFolder(M,1)		alert_raw += stringmatch(M_DF, "*rawData*")		alert_internal += stringmatch(M_DF, "*internalUse*")	index += 1	while(1)		if (alert_raw > 0)		DoAlert 1, "Do you really want to modify your raw data?"		if (v_flag==2)			SetDataFolder $DF			abort		endif	endif	if (alert_internal > 0)		DoAlert 1, "Some waves in this graph are internal. You may get confusing results.\rContinue anyway?"		if (v_flag==2)			SetDataFolder $DF			abort		endif	endif				// find out what to do (the panel updates marquee boundaries and returns the desired action):	if (strlen(ImageList)>0)		if(strlen(traceList) > 0)			DoAlert 0, "Note: the function will run only on the top image, not on the 1D-traces."		endif		new_marquee_panel(flag)		PauseForUser marquee_panel		if (stringmatch(gs_marquee_action,"cancel"))			SetDataFolder $DF			abort		endif	else		gs_marquee_action = "go_1D"	endif		// 1D-waves:	if (stringmatch(gs_marquee_action,"go_1D"))		index = 0		do			trace = StringFromList(index, traceList)			if (strlen(trace) == 0)				break			endif			WAVE w = TraceNameToWaveRef(s_marqueeWin,trace)			avg = mean(w,gv_marquee_x0,gv_marquee_x1)			if(flag)				w /= avg			else				w -= avg			endif			index += 1		while (1)	endif		// images:	if (stringmatch(gs_marquee_action,"go_2*"))		image = StringFromList(0, imageList)		WAVE w = ImageNameToWaveRef(s_marqueeWin,image)				if (stringmatch(gs_marquee_action, "go_2Dx"))			utils_getWaveAvg(w,0,from=gv_marquee_y0, to=gv_marquee_y1)			WAVE w_avg			if (flag)				w /= w_avg[p]			else				w -= w_avg[p]			endif		endif			if (stringmatch(gs_marquee_action,"go_2Dy"))			utils_getWaveAvg(w,1,from=gv_marquee_x0, to=gv_marquee_x1)			WAVE w_avg			if (flag)				w /= w_avg[q]			else				w -= w_avg[q]			endif		endif				if (stringmatch(gs_marquee_action,"go_2Dxy"))			startP = (gv_marquee_x0 - DimOffset(w,0))/DimDelta(w,0)			endP = (gv_marquee_x1 - DimOffset(w,0))/DimDelta(w,0)			startQ = (gv_marquee_y0 - DimOffset(w,1))/DimDelta(w,1)			endQ = (gv_marquee_y1 - DimOffset(w,1))/DimDelta(w,1)			ImageStats/M=1/G={min(startP,endP), max(startP,endP), min(startQ,endQ), max(startQ,endQ)} w			if (flag)				w /= v_avg			else				w -= v_avg			endif		endif	endif	SetDataFolder $DFEndStatic Function new_marquee_panel(flag)	Variable flag		String str	if (flag)		str = "divide by "	else		str = "subtract "	endif	PauseUpdate; Silent 1		// building window...	NewPanel /W=(150,50,450,268) as ""	DoWindow/C marquee_panel	utils_autoPosWindow("marquee_panel", win=127)		SetDrawLayer UserBack	DrawText 53,54, str+"x-profile, integrated"	DrawText 53,104, str+"y-profile, integrated"	DrawText 53,154, str+"average value in"	DrawText 53,170,"marquee area"		Button b1,pos={21,37},size={24,35},proc=marquee#buttonClose,title="x", fColor=(65535,54607,32768)	Button b2,pos={21,87},size={24,35},proc=marquee#buttonClose,title="y", fColor=(65535,32764,16385)	Button b3,pos={21,137},size={24,35},proc=marquee#buttonClose,title="2D", fColor=(32768,40777,65535)	Button b4,pos={185,179},size={78,18},proc=marquee#buttonClose,title="cancel"		GroupBox group0,pos={12,10},size={276,195},title="run Mode:",fSize=12	SetVariable sv0,pos={62,56},size={105,15},title="from y =",fSize=12,limits={-Inf,Inf,0},value= root:internalUse:norm:gv_marquee_y0	SetVariable sv0_1,pos={170,56},size={100,15},title="to y =",fSize=12,limits={-Inf,Inf,0},value= root:internalUse:norm:gv_marquee_y1	SetVariable sv0_2,pos={62,106},size={105,15},title="from x =",fSize=12,limits={-Inf,Inf,0},value= root:internalUse:norm:gv_marquee_x0	SetVariable sv0_3,pos={170,106},size={100,15},title="to x =",fSize=12,limits={-Inf,Inf,0},value= root:internalUse:norm:gv_marquee_x1EndStatic Function buttonClose(ctrlName)	String ctrlName		SVAR action = root:internalUse:norm:gs_marquee_action		strswitch(ctrlName)			case "b0":					action = "go_1D"			break								case "b1":			action = "go_2Dx"			break		case "b2":			action = "go_2Dy"			break		case "b3":			action = "go_2Dxy"			break			case "b4":			action = "cancel"			break	endswitch	DoWindow/K marquee_panel	End