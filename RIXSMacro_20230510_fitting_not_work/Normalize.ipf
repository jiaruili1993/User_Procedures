#pragma rtGlobals=1		// Use modern global access method.#pragma version = 0.01////deadline correction///////////////////Function Cal_deadline_corr(w_image,gs_deadline_procstr,bkgrange)	Wave w_image	String gs_deadline_procstr	Variable bkgrange		if (strlen(gs_deadline_procstr)==0)		return 0	endif		Make /o/n=(dimsize(w_image,1)),tempEDC1,tempEDC2	Setscale /I x, M_y0(w_image),M_y1(w_image),tempEDC1,tempEDC2		Variable datarange=M_y1(w_image)		Variable linenum=itemsinlist(gs_deadline_procstr,";")	variable index,first,last,subflag	String tempstr	Variable lineindex,bkgsub0,bkgsub1,bkgsub	do		tempstr=stringfromlist(index,gs_deadline_procstr,";")		if (stringmatch(tempstr,"Sub_*"))			subflag=1			sscanf tempstr, "Sub_%g_%g", first,last		else			subflag=0			sscanf tempstr, "Int_%g_%g", first,last		endif				if (subflag==1)			tempEDC1=w_image[first-1][p]//correct bkg			tempEDC2=w_image[last+1][p]			bkgsub0=mean(tempEDC1,datarange-bkgrange,datarange)			bkgsub1=mean(tempEDC2,datarange-bkgrange,datarange)						lineindex=first			do				tempEDC2=w_image[lineindex][p]				bkgsub=mean(tempEDC2,datarange-bkgrange,datarange)-(bkgsub0+(bkgsub1-bkgsub0)/(last-first+2)*(lineindex-first+1))				//print bkgsub				w_image[lineindex][]=((tempEDC2[q]-bkgsub)<0)?(0):(tempEDC2[q]-bkgsub)				lineindex+=1			while (lineindex<last) 						tempEDC1=w_image[first-1][p]//correctscale			tempEDC2=w_image[last+1][p]			bkgsub0=mean(tempEDC1) 			bkgsub1=mean(tempEDC2)						lineindex=first			do				tempEDC2=w_image[lineindex][p]				bkgsub=(bkgsub0+(bkgsub1-bkgsub0)/(last-first+2)*(lineindex-first+1))/mean(tempEDC2)				//print bkgsub				w_image[lineindex][]=tempEDC2[q]*bkgsub				lineindex+=1			while (lineindex<last) 					else			tempEDC1=w_image[first-1][p]			tempEDC2=w_image[last+1][p]			w_image[first,last][]=tempEDC1[q]+(tempEDC2[q]-tempEDC1[q])/(last-first+2)*(p-first+1)		endif			index+=1	while(index<linenum)		Killwaves /Z tempEDC1,tempEDC2EndFunction update_deadline()		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)			SVAR gs_deadline_procstr=DFR_normal:gs_deadline_procstr		SVAR toppath=DFR_common:gs_TopItemPath	SVAR topName = DFR_common:gs_TopItemName	NVAR toplayernum=DFR_common:gv_toplayernum	NVAR gv_csr_e_sub=DFR_normal:gv_csr_e_sub		Wave data=$toppath	GetProList(DFR_common,data,NAN)	Panelimageupdate(3)		wave w_image=DFR_common:w_image		 Cal_deadline_corr(w_image,gs_deadline_procstr,gv_csr_e_sub)EndFunction Deadline_corr(ctrlname)	String ctrlname	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)	SVAR sourcePathlist=DFR_common:gs_sourcePathlist	SVAR sourcenamelist=DFR_common:gs_sourcenamelist	SVAR toppath=DFR_common:gs_TopItemPath	SVAR topName = DFR_common:gs_TopItemName	NVAR toplayernum=DFR_common:gv_toplayernum	NVAR topwaverow=DFR_common:gv_topwaverow	NVAR topdfrow=DFR_common:gv_topdfrow	WAVE/t w_DF=DFR_common:w_DF	WAVE/t w_sourceNames=DFR_common:w_sourceNames	Wave/b w_sourceNamesSel=DFR_common:w_sourceNamesSel	NVAR autolayerflag=DFR_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DFR_common,1)		SetDataFolder DFR_normal		SVAR gs_deadline_procstr=DFR_normal:gs_deadline_procstr	NVAR gv_csr_e_sub=DFR_normal:gv_csr_e_sub		Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))		toppath=w_DF[topdfrow]+w_sourceNames[index]		topname=w_sourceNames[index]		tempsel=w_sourceNamesSel[index]		w_sourceNamesSel[index]=0			if (strlen(toppath)==0)			break		endif				wave_path=toppath			Wave data=$wave_path		GetProList(DFR_common,data,NAN)		Panelimageupdate(3)				if (toplayernum==(dimsize(data,2)-1))//toplayer			datalayernum=dimsize(data,2)-1 			procdone=macro_deadline_corr(wave_path,datalayernum,gs_deadline_procstr,gv_csr_e_sub,0)			else			datalayernum=toplayernum			if (processallflag==0)				Setdialogwindow(winname(0,65),data,"TMF")				openautoprocesswindow(winname(0,65))			endif			switch (autoprocessflag)			case 0:				break			case 2:				procdone=macro_deadline_corr(wave_path,datalayernum,gs_deadline_procstr,gv_csr_e_sub,0)						break			case 1:				String procstr=Getlayernotestr(note(data),toplayernum+1,2)				String layerstr=Getlayernotestr(note(data),toplayernum+1,1)				Variable procnum=numberbykey("processnumber",layerstr,"=","\r")						procdone=macro_deadline_corr(wave_path,datalayernum,gs_deadline_procstr,gv_csr_e_sub,0)				datalayernum+=procdone					if ((procnum==1)&&(forceinsertflag==0))					procstr=Getlayernotestr(procstr,toplayernum+2,2)					procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)				else					procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)				endif				break			case 10:				procdone=macro_deadline_corr(wave_path,datalayernum,gs_deadline_procstr,gv_csr_e_sub,1)						break			endswitch		endif		w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath		if (autolayerflag==0)		GetProList(DFR_common,data,procdone)	else		GetProList(DFR_common,data,NAN)	endif	panelimageupdate(3)		setDataFolder DFEnd		Function macro_deadline_corr(wave_path,toplayernum,gs_deadline_procstr,bkgrange,flag)		String wave_path	Variable toplayernum	String gs_deadline_procstr	Variable bkgrange	Variable flag	Wave data=$wave_path	GetLayerimage(data,toplayernum)		duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		Cal_deadline_corr(tempimage,gs_deadline_procstr,bkgrange)		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		String notestr=procstring(1)		notestr=ReplaceStringByKey("Wavetype",notestr,"Dead_cor","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,1,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplaceStringByKey("Procstr",notestr,gs_deadline_procstr,"=","\r")	notestr=ReplacenumberByKey("bkgrange",notestr,bkgrange,"=","\r")	Add_proc_note(data,targetlayernum,notestr)	Killwaves/Z tempimage	return procdoneEnd//tmf correction//////////////////////////////////////////////////////////////////////////////////////////// read the input from the panel, call 'tmf_norm' and update the wavenoteFunction preview_tmf_corr(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)	SVAR sourcePathlist=DFR_common:gs_sourcePathlist	SVAR sourcenamelist=DFR_common:gs_sourcenamelist	SVAR toppath=DFR_common:gs_TopItemPath	SVAR topName = DFR_common:gs_TopItemName	NVAR toplayernum=DFR_common:gv_toplayernum	NVAR topwaverow=DFR_common:gv_topwaverow	NVAR topdfrow=DFR_common:gv_topdfrow	WAVE/t w_DF=DFR_common:w_DF	WAVE/t w_sourceNames=DFR_common:w_sourceNames	Wave/b w_sourceNamesSel=DFR_common:w_sourceNamesSel	NVAR autolayerflag=DFR_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DFR_common,1)		SetDataFolder DFR_normal			//Wave w_coef=DFR_normal:w_coef	Variable Funcflag=0,DCflag,dataflag	DCflag=0	dataflag=1		WAVE/T w_dispNames	ControlInfo disp_lb1	String path = ""	if (numpnts(w_dispNames)>0)		Path= "root:gold:NormWaves:" + w_dispNames[v_value]	endif		ControlInfo disp_c0	Variable scaleflag=v_value						if (Strlen(path)==0)		doalert 0, "Wrong dispersion curve!"		SetDatafolder DF		return 0	endif				Variable index,datalayernum,Procdone	String wave_path,wave_name	Variable tempsel		do		if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))		toppath=w_DF[topdfrow]+w_sourceNames[index]		topname=w_sourceNames[index]		tempsel=w_sourceNamesSel[index]		w_sourceNamesSel[index]=0			if (strlen(toppath)==0)			break		endif				wave_path=toppath			Wave data=$wave_path		GetProList(DFR_common,data,NAN)		Panelimageupdate(3)			ControlInfo disp_c0		scaleflag=v_value			if (toplayernum==(dimsize(data,2)-1))			datalayernum=dimsize(data,2)-1 //toplayer			procdone=macro_tmf_corr(wave_path,datalayernum,Funcflag,dataflag,path,scaleflag,0)		else			datalayernum=toplayernum			if (processallflag==0)				Setdialogwindow(winname(0,65),data,"TMF")				openautoprocesswindow(winname(0,65))			endif			switch (autoprocessflag)			case 0:				break			case 2:				procdone=macro_tmf_corr(wave_path,datalayernum,Funcflag,dataflag,path,scaleflag,0)						break			case 1:				String procstr=Getlayernotestr(note(data),toplayernum+1,2)				String layerstr=Getlayernotestr(note(data),toplayernum+1,1)				Variable procnum=numberbykey("processnumber",layerstr,"=","\r")						procdone=macro_tmf_corr(wave_path,datalayernum,Funcflag,dataflag,path,scaleflag,0)						datalayernum+=procdone					if ((procnum==2)&&(forceinsertflag==0))					procstr=Getlayernotestr(procstr,toplayernum+2,2)					procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)				else					procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)				endif				break			case 10:				procdone=macro_tmf_corr(wave_path,datalayernum,Funcflag,dataflag,path,scaleflag,1)						break			endswitch		endif		w_sourceNamesSel[index]=tempsel	endif			index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]		Wave data=$toppath		if (autolayerflag==0)		GetProList(DFR_common,data,procdone)	else		GetProList(DFR_common,data,Nan)	endif	panelimageupdate(3)		setDataFolder DFEndFunction macro_tmf_corr(itempath,toplayernum,Funcflag,Dataflag,path,scaleflag,flag)	String itempath	Variable toplayernum	Variable Funcflag,Dataflag	String path	Variable scaleflag,flag	Wave data=$itempath	Wave w_tmf=$path	GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage			Variable xpnt = dimsize(tempimage,0)		if (scaleflag == 0)		if (dimsize(w_tmf,0) != xpnt)			DoAlert 1,  "Wrong number of points in the tmf wave. Normalize by channel?"			if (V_flag==1)			Proc_checkbox_dispScaling("Disp_c0",1)			Duplicate/o w_tmf, internal_tmf			scaleflag=1			else			Killwaves /Z tempimage			return 0			endif		endif		Duplicate/o w_tmf, internal_tmf	endif		// for channel-scaling we have to interpolate w_disp to the channels of w_image	if (scaleflag == 1)		Variable ch0 = Scienta_ch(tempimage,0)		Variable ch1 = Scienta_ch(tempimage,1)		Make/O/N=(xpnt) internal_tmf		SetScale/I x ch0, ch1, internal_tmf		Duplicate/o w_tmf w_tmf_x		w_tmf_x = x		internal_tmf = interp(x, w_tmf_x, w_tmf)		Killwaves /Z w_tmf_x	endif		tmf_norm(tempimage,internal_tmf)		//SetScale/I y M_y0(tempimage)-EF,M_y1(tempimage)-EF, tempimage		KillWaves/Z internal_tmf		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		String notestr=procstring(2)		notestr=ReplaceStringByKey("Wavetype",notestr,"TMF_cor","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,2,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplacenumberByKey("Funcflag",notestr,Funcflag,"=","\r")	notestr=ReplacenumberByKey("Dataflag",notestr,Funcflag,"=","\r")	notestr=ReplaceStringByKey("TMFwave",notestr,path,"=","\r")	notestr=ReplacenumberByKey("scaleflag",notestr,scaleflag,"=","\r")	Add_proc_note(data,targetlayernum,notestr)	Killwaves/Z tempimage	return procdone	EndFunction tmf_norm(w_image,internal_TMF)	WAVE w_image,internal_TMF		internal_TMF = 1/internal_TMF	WaveStats/q internal_TMF	internal_TMF/= v_avg	w_image *= internal_TMF[p]End// dispersion correction///////////////////////////////////////////////////////////////////////////////////////////////////////////Function preview_disp_corr(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)	SVAR sourcePathlist=DFR_common:gs_sourcePathlist	SVAR sourcenamelist=DFR_common:gs_sourcenamelist	SVAR toppath=DFR_common:gs_TopItemPath	SVAR topName = DFR_common:gs_TopItemName	NVAR toplayernum=DFR_common:gv_toplayernum	NVAR topwaverow=DFR_common:gv_topwaverow	NVAR topdfrow=DFR_common:gv_topdfrow	WAVE/t w_DF=DFR_common:w_DF	WAVE/t w_sourceNames=DFR_common:w_sourceNames	Wave/b w_sourceNamesSel=DFR_common:w_sourceNamesSel	NVAR autolayerflag=DFR_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag	NVAR forceinsertflag=DF_userpanel:gv_forceinsertflag		Check_Autosimilar_layer(DFR_common,1)		SetDataFolder DFR_normal		String e_scale	Variable shift=0			WAVE/T w_dispNames	ControlInfo disp_lb1	String path = ""	if (numpnts(w_dispNames)>0)		//Path= "root:gold:NormWaves:" + w_dispNames[v_value]		Path= "root:RIXS_NormWaves:" + w_dispNames[v_value]	endif		Variable normflag,scaleflag,EF		WAVE /Z w_disp = $path	// the dispersion wave		ControlInfo disp_c3		if (v_value)			normflag=1			EF = Nan			//e_scale = "kinetic"		endif		ControlInfo disp_c4		if (v_value)			normflag=2		   // shift=1			EF = mean(w_disp,-inf,inf)			//e_scale = "initial"		endif		ControlInfo disp_c5		if (v_value)			normflag=3			//shift=1			NVAR csr_e=DFR_normal:gv_csr_e 			EF = csr_e			//e_scale = "initial"		endif				Controlinfo Disp_c2		if (v_value==0)		Path=""		endif			if (Strlen(path)==0)		doalert 0, "Wrong dispersion curve!"		SetDatafolder DF		return 0	endif					Variable index,datalayernum,procdone	String wave_path,wave_name	Variable tempsel		do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif			wave_path=toppath				Wave data=$wave_path			GetProList(DFR_common,data,NAN)			Panelimageupdate(3)				ControlInfo disp_c0			scaleflag=v_value			//			if (stringmatch(ctrlname,"disp_b3")) //auto find gold//				Variable pathindex=SearchStringInWave(w_dispNames,topname+"*")//				path="root:gold:NormWaves:" + w_dispNames[pathindex]//				if(normflag==2)//					WAVE /Z w_disp = $path//					EF = mean(w_disp,-inf,inf)//				endif//			endif				if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				procdone=macro_disp_corr(wave_path,datalayernum,path,EF,normflag,scaleflag,0)			else				datalayernum=toplayernum				if (processallflag==0)					Setdialogwindow(winname(0,65),data,"disp")					openautoprocesswindow(winname(0,65))				endif				switch (autoprocessflag)				case 0:					break				case 2:					procdone=macro_disp_corr(wave_path,datalayernum,path,EF,normflag,scaleflag,0)					break				case 1:					String procstr=Getlayernotestr(note(data),toplayernum+1,2)					String layerstr=Getlayernotestr(note(data),toplayernum+1,1)					Variable procnum=numberbykey("processnumber",layerstr,"=","\r")					procdone=macro_disp_corr(wave_path,datalayernum,path,EF,normflag,scaleflag,0)					datalayernum+=procdone					if ((procnum==3)&&(Forceinsertflag==0))						procstr=Getlayernotestr(procstr,toplayernum+2,2)						procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+2),0)					else						procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)					endif					break				case 10:					procdone=macro_disp_corr(wave_path,datalayernum,path,EF,normflag,scaleflag,1)					break				endswitch			endif		w_sourceNamesSel[index]=tempsel		endif		index+=1	while (index<numpnts(w_sourceNamesSel))		toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]	topname=w_sourceNames[topwaverow]			Wave data=$toppath		if (autolayerflag==0)		GetProList(DFR_common,data,procdone)	else		GetProList(DFR_common,data,Nan)	endif		panelimageupdate(3)			SetDataFolder DFEndFunction macro_disp_corr(itempath,toplayernum,disppath,EF,normflag,scaleflag,flag)	String itempath	Variable toplayernum	String disppath	Variable EF,normflag,scaleflag,flag	Wave data=$itempath	Wave w_disp=$disppath	GetLayerimage(data,toplayernum)	duplicate /o templayerimage,tempimage	killwaves/Z templayerimage			Wave tempimage		Variable xpnt = dimsize(tempimage,0)		//if (normflag==2)		if (scaleflag == 0)			if (dimsize(w_disp,0) != xpnt)				DoAlert 1,  "Wrong number of points in the dispersion wave. Normalize by channel?"				if (V_flag==1)					Proc_checkbox_dispScaling("Disp_c0",1)					Duplicate/o w_disp, internal_disp					scaleflag=1				else					Killwaves /Z tempimage					return 0				endif			endif			Duplicate/o w_disp, internal_disp		endif		// for channel-scaling we have to interpolate w_disp to the channels of w_image		if (scaleflag == 1)			Variable ch0 = Scienta_ch(tempimage,0)			Variable ch1 = Scienta_ch(tempimage,1)			Make/O/N=(xpnt) internal_disp			SetScale/I x ch0, ch1, internal_disp			Duplicate/o w_disp w_disp_x			w_disp_x = x			internal_disp = interp(x, w_disp_x, w_disp)			Killwaves /Z w_disp_x		endif	//endif		if (strlen(disppath)>0)		shift_EF(tempimage,internal_disp)	endif		Variable initialflag			if (numtype(EF)==2)		SetScale/I y M_y0(tempimage),M_y1(tempimage), tempimage		initialflag=0	else		SetScale/I y M_y0(tempimage)-EF,M_y1(tempimage)-EF, tempimage		initialflag=1	endif		KillWaves/Z internal_disp		Variable targetlayernum=0	Variable procdone=0	if (flag==0)		targetlayernum=toplayernum+1		procdone=1	elseif (flag==1)		targetlayernum=dimsize(data,2)		procdone=targetlayernum-toplayernum	endif		Add_proc_layer(data,tempimage,targetlayernum)		String notestr=procstring(3)		notestr=ReplaceStringByKey("Wavetype",notestr,"disp_cor","=","\r")	notestr=ReplacenumberByKey("ProcessNumber",notestr,3,"=","\r")	notestr=ReplacenumberByKey("RawLayerNumber",notestr,toplayernum,"=","\r")	notestr=ReplacenumberByKey("RawProcNumber",notestr,Getlayerprocnum(data,toplayernum),"=","\r")	notestr=ReplacenumberByKey("Appendflag",notestr,flag,"=","\r")	notestr=ReplacenumberByKey("xpnts",notestr,dimsize(tempimage,0),"=","\r")	notestr=ReplacenumberByKey("ypnts",notestr,dimsize(tempimage,1),"=","\r")	notestr=ReplacenumberByKey("x0",notestr,M_x0(tempimage),"=","\r")	notestr=ReplacenumberByKey("x1",notestr,M_x1(tempimage),"=","\r")	notestr=ReplacenumberByKey("y0",notestr,M_y0(tempimage),"=","\r")	notestr=ReplacenumberByKey("y1",notestr,M_y1(tempimage),"=","\r")	notestr=ReplaceStringByKey("dispwave",notestr,disppath,"=","\r")	notestr=ReplacenumberByKey("initialflag",notestr,initialflag,"=","\r")	notestr=ReplacenumberByKey("FermiEnergy",notestr,EF,"=","\r")	notestr=ReplacenumberByKey("normflag",notestr,normflag,"=","\r")	notestr=ReplacenumberByKey("scaleflag",notestr,scaleflag,"=","\r")	Add_proc_note(data,targetlayernum,notestr)	killwaves /Z tempimage	return procdone	//notestr=note(data)	//notestr=replaceStringbykey("EnergyScale",notestr,e_scale,"=","\r")	//notestr=replacenumberbykey("FermiEnergy",notestr,EF,"=","\r")	//note/K data	//note data,notestr	End// interpolate all EDC's in 'w' on a corrected energy scale// EDC's are in the q/y dimension	FB 9/22/02Function shift_EF(w,w_ef)	Wave w, w_ef	Variable e0 = DimOffset(w, 1)	Variable e1 = DimOffset(w, 1) + (dimsize(w,1)-1) *DimDelta(w,1)	Variable estep = DimDelta(w,1)	Variable Ef = mean(w_ef,-inf,inf)		Make/O/N=(dimsize(w,1)) tempEDC, ekin, EDC_interp	SetScale/I x e0,e1, EDC_interp		Variable index = 0,Emax,Emin	do		tempEDC[]=w[index][p]		ekin = e0+estep*p + (Ef - w_ef[index])	// true kinetic energy of EDC		Emax=wavemax(ekin)		Emin=Wavemin(ekin)		EDC_interp = interp(x,ekin,tempEDC)//	ekin is the kinetic energy wave corresponding to tempEDC		EDC_interp = (x>Emax)?(NaN):(EDC_interp)		EDC_interp = (x<Emin)?(NaN):(EDC_interp)		w[index][]=EDC_interp[q]	index+=1	while (index < dimsize(w,0) )		KillWaves/Z tempEDC, ekin, EDC_interpEndFunction undo_image(ctrlName)	String ctrlName		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)	SVAR sourcePathlist=DFR_common:gs_sourcePathlist	SVAR sourcenamelist=DFR_common:gs_sourcenamelist	SVAR toppath=DFR_common:gs_TopItemPath	SVAR topName = DFR_common:gs_TopItemName	NVAR toplayernum=DFR_common:gv_toplayernum	NVAR topwaverow=DFR_common:gv_topwaverow	NVAR topdfrow=DFR_common:gv_topdfrow	WAVE/t w_DF=DFR_common:w_DF	WAVE/t w_sourceNames=DFR_common:w_sourceNames	Wave/b w_sourceNamesSel=DFR_common:w_sourceNamesSel	NVAR autolayerflag=DFR_common:gv_autolayerflag		initialdialogwindow()	DFREF DF_userpanel=root:InternalUse:User_panel	NVAR processallflag=DF_userpanel:gv_processallflag		NVAR autoprocessflag=DF_userpanel:gv_autoprocessflag		Check_Autosimilar_layer(DFR_common,1)		SetDataFolder DFR_normal			Variable index,datalayernum,procdone	String wave_path,wave_name	Variable tempsel			do			if ((w_sourceNamesSel[index] == 1)||(w_sourceNamesSel[index] == 8)||(w_sourceNamesSel[index] == 9))			toppath=w_DF[topdfrow]+w_sourceNames[index]			topname=w_sourceNames[index]			tempsel=w_sourceNamesSel[index]			w_sourceNamesSel[index]=0				if (strlen(toppath)==0)				break			endif			wave_path=toppath				Wave data=$wave_path			GetProList(DFR_common,data,NAN)			Panelimageupdate(3)					if (toplayernum==(dimsize(data,2)-1))				datalayernum=dimsize(data,2)-1 //toplayer				procdone=set_proc_layer(data,datalayernum-1)			else				datalayernum=toplayernum				if (processallflag==0)					Setdialogwindow(winname(0,65),data,"crop")					openautoprocesswindow(winname(0,65))				endif				switch (autoprocessflag)					case 0:						break					case 3:					case 2:	 						procdone=set_proc_layer(data,datalayernum-1)						break					case 1:						String procstr=Getlayernotestr(note(data),toplayernum+1,2)						procdone=set_proc_layer(data,datalayernum-1)						datalayernum=toplayernum+procdone						procdone+=macro_autoprocess(wave_path,procstr,datalayernum,(toplayernum+1),0)						break					endswitch				endif				w_sourceNamesSel[index]=tempsel			endif				index+=1		while (index<numpnts(w_sourceNamesSel))				toppath=w_DF[topdfrow]+w_sourceNames[topwaverow]		topname=w_sourceNames[topwaverow]		Wave data=$toppath	if (autolayerflag==0)		GetProList(DFR_common,data,procdone)	else		GetProList(DFR_common,data,-1)	endif	panelimageupdate(3)	SetDataFolder DFEndFunction reset_image(ctrlName)	String ctrlName			DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)	SVAR sourcePathlist=DFR_common:gs_sourcePathlist	SVAR sourcenamelist=DFR_common:gs_sourcenamelist	SVAR toppath=DFR_common:gs_TopItemPath	NVAR toplayernum=DFR_common:gv_toplayernum				doalert 1,"Reset all proc?"	if (v_flag==2)		SetDataFolder DF		return 1	endif				if (itemsinlist(sourcePathlist,";")>1)	doalert 1,"Reset all selected wave?"	if (v_flag==2)		SetDataFolder DF		return 1	endif	endif		Variable index,datalayernum,procdone	String wave_path,wave_name		SetDataFolder DFR_normal		do			wave_path=stringfromlist(index,sourcepathlist,";")		wave_name=stringfromlist(index,sourcenamelist,";")		if (strlen(wave_path)==0)			break		endif			Wave data=$wave_path			//Variable numoflayer=//dimsize(data,2)	//if (dimsize(data,2)>1)		set_proc_layer(data,0)				index+=1	while (1)		GetProList(DFR_common,data,inf)	panelimageupdate(3)	SetDataFolder DFEnd