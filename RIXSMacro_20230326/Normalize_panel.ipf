#pragma rtGlobals=1		// Use modern global access method.#pragma version = 0.01// This procedure file build the Disp tab in the Main panel. The filename of Normalize is inherented from original ARPSS procedure. //Consider to renmae it. 01/09/2022constant kTabSource = 0		// to be used in the switch statement in the Tab-procedureconstant kTabDispersion = 4constant kTabTMF = 2constant kTabangleCal = 3constant kTabCrop = 1constant kTabFermi = 5// generate the globals and a copy of the actual image waveFunction /DF init_normlize()	DFREf DF = GetDataFolderDFR()		String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	SetDatafolder DFR_panel	DFREF DFR_common=$(DF_panel+":panel_common")	//String/G panelprocPath=DF_panel+":process:"	NewDataFolder/O/S process	DFREF DFR_proc=GetDatafolderDFR()			//NewDataFolder/O/S root:gold:Normwaves	//String List = wavelist("*_disp*",";","DIMS:1")//List_of_waves("root:carpets:normalized:NormWaves:", "*_disp", 1, 0)	//StringListToWave(List)	//duplicate/o/t w_StringList DFR_proc:w_dispNames		//List = wavelist("*_atmf*",";","DIMS:1")//List_of_waves("root:carpets:normalized:NormWaves:", "*_atmf", 1, 0)	//StringListToWave(List)	//duplicate/o/t w_StringList DFR_proc:w_atmfNames	//Killwaves /Z w_StringList		SetDatafolder DFR_proc		//Make /o/t/n=(1,4) w_dispNames	//Make /o/n=(1,4) w_dispNames_sel	//Make /o/t/n=4 w_dispTitle={"Wavename","PhotnE","PassE","Estep"}		Make /o/t/n=1 w_dispNames	Make /o/n=1 w_dispNames_sel	//Make /o/t/n=4 w_dispTitle={"Wavename","PhotnE","PassE","Estep"}	w_dispNames_sel[0]=1		Wave w_image=DFR_common:w_image	duplicate /o/R=[][0] w_image w_norm	duplicate /o/R=[0][] w_image w_norm_e//,w_norm_x	Variable/g v_fitoptions = 4 // no fit window in this folder	String/G gs_TopDispPath = ""		Variable/G gv_csr_E	Variable /G gv_csr_e_sub	//Variable/G gv_d2c, gv_ch0	 //= trunc(mean($("root:gold:NormWaves:"+w_dispnames[0]),-inf,inf)*1e6)/1e6	Variable/G gv_disp_EF//	Variable/G fe_T=300//	Variable/G gv_Intensity	Variable/G gv_tmfsmt=3	Variable/G gv_tmfsmtrep=10		String /G gs_deadline_procstr=""	//	Variable /G fe_fwhm=0.005	SetDataFolder DF		return DFR_procEndFunction add_Tab_normalize()	DFREF DF=GetDatafolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal= init_normlize()	NVAR gv_E0=DFR_common:gv_E0	NVAR gv_E1=DFR_common:gv_E1	NVAR gv_M0=DFR_common:gv_M0	NVAR gv_M1=DFR_common:gv_M1	SetDatafolder DFR_normal	Variable r=57000, g=57000, b=57000	Variable SC = ScreenSize(5)		GroupBox Disp_gb0, pos={430*SC,35*SC}, size={200*SC,130*SC}, title="dispersion wave", frame=0, disable=1//	listbox Disp_lb1, pos={440*SC,55*SC}, size={180*SC,85*SC},  widths={120*SC,60*SC,40*SC},listwave=w_dispNames, selwave=w_dispNames_sel,titlewave=w_dispTitle,selrow=0,frame=2,mode=1, disable=1, proc=Proc_listbox_dispNames	listbox Disp_lb1, pos={440*SC,55*SC}, size={180*SC,85*SC},  widths={120*SC,60*SC,40*SC},listwave=w_dispNames, selwave=w_dispNames_sel,selrow=0,frame=2,mode=1, disable=1, proc=Proc_listbox_dispNames	CheckBox Disp_c2, pos={570*SC,147*SC}, title="use",labelBack=(r,g,b), value=1,disable=1, proc=Proc_checkbox_showDisp		//CheckBox Disp_c0, pos={440*SC,147*SC}, title="channel",labelBack=(r,g,b), disable=1, proc=Proc_checkbox_dispScaling	CheckBox Disp_c1, pos={510*SC,147*SC}, title="slice",labelBack=(r,g,b),value=1, disable=1, proc=Proc_checkbox_dispScaling		GroupBox Disp_gb1, pos={230*SC,35*SC}, size={195*SC,85*SC}, title="zero energy correction", frame=0, disable=1	//CheckBox Disp_c3, pos={240*SC,57*SC}, title="E_k",labelBack=(r,g,b),disable=1, proc=Proc_checkbox_EiEk	CheckBox disp_c4, pos={240*SC,57*SC}, title="E_l Disp. zero =",labelBack=(r,g,b), value=1,disable=1, proc=Proc_checkbox_EiEk	SetVariable disp_sv1, pos={350*SC,57*SC},size={60*SC,15*SC}, title=" ", labelback=(r,g,b), value = gv_disp_EF, limits={-inf,inf,0}, live=1,noedit=1,disable=1	CheckBox disp_c5, pos={240*SC,77*SC}, title="E_l Manul zero =",labelBack=(r,g,b), disable=1, proc=Proc_checkbox_EiEk	SetVariable disp_sv0, pos={350*SC,77*SC},size={60*SC,15*SC}, title=" ", labelback=(r,g,b), value =  gv_csr_e, limits={-inf,inf,0},disable=1		//Button disp_b3, pos={330*SC,170*SC},size={90*SC,18*SC}, labelback=(r,g,b),title="auto normalize", disable=1, proc=preview_disp_corr	Button disp_b0, pos={430*SC,170*SC},size={70*SC,18*SC}, labelback=(r,g,b),title="normalize", disable=1, proc=preview_disp_corr	Button disp_b1, pos={503*SC,170*SC},size={60*SC,18*SC}, labelback=(r,g,b),title="undo", disable=1, proc=undo_image	Button disp_b2, pos={566*SC,170*SC},size={60*SC,18*SC}, labelback=(r,g,b),title="reset", disable=1, proc=reset_image	//The tmf related were commented out by W.S. Lee, 01/09/2022//	Button tmf_b0, pos={430*SC,170*SC},size={70*SC,18*SC}, labelback=(r,g,b),title="normalize", disable=1, proc=preview_tmf_corr//	Button tmf_b1, pos={503*SC,170*SC},size={60*SC,18*SC}, labelback=(r,g,b),title="undo", disable=1, proc=undo_image//	Button tmf_b2, pos={566*SC,170*SC},size={60*SC,18*SC}, labelback=(r,g,b),title="reset", disable=1, proc=reset_image//	//	GroupBox tmf_gb0, pos={430*SC,35*SC}, size={200*SC,130*SC}, title="transmission wave", frame=0, disable=1//		//CheckBox tmf_c1, pos={310*SC,30*SC}, title=" ",labelBack=(r,g,b), mode=0, disable=1, proc=Proc_checkbox_tmf	//	GroupBox tmf_gb1, pos={230*SC,35*SC}, size={195*SC,145*SC}, title="Dead lines", frame=0, disable=1//	Titlebox  tmf_t5, pos={245*SC,55*SC}, size={80*SC,12*SC}, labelback=(r,g,b), frame=0,title="Select:", disable=1//	SetVariable tmf_sv0,labelBack=(r,g,b), pos={290*SC,55*SC},size={55*SC,15*SC}, limits={-inf,inf,0}, title=" ",frame=1,live=1,value=DFR_common:gv_pA,proc=Proc_setvariable_energychange, disable=1//	SetVariable tmf_sv1,labelBack=(r,g,b), pos={350*SC,55*SC},size={65*SC,15*SC}, limits={-inf,inf,0}, title="-",frame=1,live=1,value=DFR_common:gv_pB,proc=Proc_setvariable_energychange, disable=1//	//	SetVariable tmf_sv2,labelBack=(r,g,b), pos={245*SC,75*SC},size={170*SC,15*SC}, limits={-inf,inf,0}, title=" ",frame=1,live=1,value=gs_deadline_procstr,disable=1,proc=Proc_setvariable_deadlinechange//	//	button tmf_bt0, labelBack=(r,g,b), pos={245*SC,95*SC},size={55*SC,15*SC}, title="Corrbkg",disable=1,proc=proc_bt_Deadline//	button tmf_bt1, labelBack=(r,g,b), pos={300*SC,95*SC},size={55*SC,15*SC}, title="Interp",disable=1,proc=proc_bt_Deadline//	button tmf_bt6, labelBack=(r,g,b), pos={355*SC,95*SC},size={55*SC,15*SC}, title="Auto",disable=1,proc=proc_bt_Deadline//	//	button tmf_bt5, labelBack=(r,g,b), pos={300*SC,115*SC},size={55*SC,15*SC}, title="undo",disable=1,proc=proc_bt_Deadline//	button tmf_bt4, labelBack=(r,g,b), pos={355*SC,115*SC},size={55*SC,15*SC}, title="Clear",disable=1,proc=proc_bt_Deadline//	//	SetVariable tmf_sv11, pos={245*SC,135*SC}, size={100*SC,15*SC}, labelBack=(r,g,b), limits={-inf,inf,0}, title="Bkg from top", value=gv_csr_e_sub, proc=Proc_setvariable_energychange,disable=1//	//	button tmf_bt3, labelBack=(r,g,b), pos={245*SC,157*SC},size={110*SC,18*SC}, title="DeadLine Corr",disable=1,proc=Deadline_corr		SetDatafolder DFEndFunction Proc_setvariable_deadlinechange (ctrlName,varNum,varStr,varName) : SetVariableControl	String ctrlName	Variable varNum	// value of variable as number	String varStr		// value of variable as string	String varName	// name of variable		update_deadline()EndFunction AutoajustDeadline()	DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)		SVAR gs_deadline_procstr=DFR_normal:gs_deadline_procstr		Wave tempMDC=DFR_common:n_mdc		Duplicate /o/Free tempMDC tempMDC_Dif	Differentiate tempMDC_Dif	Wavestats /Q tempMDC_Dif	Variable meanvalue=V_avg	Variable errorvalue=V_adev		gs_deadline_procstr=""		Variable factor=3.5	Variable index=0	do		if (tempMDC_Dif[index]>abs(meanvalue+errorvalue*factor))			gs_deadline_procstr+="Sub_"+num2str(index+1)+"_"+num2str(index+1)+";"		endif		index+=1	while(index<numpnts(tempMDC_Dif))	//Variable 	EndFunction proc_bt_Deadline(ctrlname)	string ctrlname		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)		SVAR gs_deadline_procstr=DFR_normal:gs_deadline_procstr	NVAR gv_pA=DFR_common:gv_pA	NVAR gv_pB=DFR_common:gv_pB		variable first=min(gv_pA,gv_pB)	variable last=max(gv_pA,gv_pB)		strswitch(ctrlname)		case "tmf_bt0": //subbkg			gs_deadline_procstr+="Sub_"+num2str(first)+"_"+num2str(last)+";"			update_deadline()			break		case "tmf_bt1": //interp			gs_deadline_procstr+="Int_"+num2str(first)+"_"+num2str(last)+";"			update_deadline()			break		case "tmf_bt6": //auto			AutoajustDeadline()			update_deadline()			break					case "tmf_bt5": //clear			Variable temppos=strsearch(gs_deadline_procstr,";",strlen(gs_deadline_procstr)-2,-1)			gs_deadline_procstr=gs_deadline_procstr[0,temppos]			update_deadline()			break		case "tmf_bt4": //clear			gs_deadline_procstr=""			update_deadline()			break		endswitch	SetDatafolder DFEnd///////// all the checkbox switches:////////////////////////////////////////////////////////////////////////////////////////////////////////////////// energy scale on 'dispersion tab'Function Proc_checkbox_EiEk(name,value)	String name	Variable value	SetActiveSubwindow $winname(0,65)	Variable checkVal	strswitch (name)//		case "disp_c3"://			checkVal= 3//			break		case "disp_c4":			checkVal= 4			break		case "disp_c5":			checkVal= 5			break	endswitch	CheckBox disp_c3,value= checkVal==3	CheckBox disp_c4,value= checkVal==4	CheckBox disp_c5,value= checkVal==5EndFunction Proc_checkbox_dispScaling(name,value)	String name	Variable value	SetActiveSubwindow $winname(0,65)	Variable bVal	strswitch (name)		case "disp_c0":			bVal= 1			break		case "disp_c1":			bVal= 2			break	endswitch	//CheckBox disp_c0,value= bVal==1	CheckBox disp_c1,value= bVal==2EndFunction Proc_listbox_dispNames(ctrlname, row, col, event)	String ctrlName	Variable row	Variable col	Variable event		DFREF DF = GetDataFolderDFR()	String DF_panel="root:internalUse:"+winname(0,65)	DFREF DFR_panel=$DF_panel	DFREF DFR_common=$(DF_panel+":panel_common")	DFREF DFR_normal=$(DF_panel+":process")	SetActiveSubwindow $winname(0,65)	wave w_image=DFR_common:w_image	Variable dispflag=0	String suffix	ControlInfo main//Commented by WSL 02/28/2023//	if (v_Flag > 0)//		if (stringmatch(s_value,"TMF"))//			suffix = "*_aTMF*"//			dispflag=0//		else//			suffix = "*_disp*"//			dispflag=1//		endif//	else//		suffix = "*_disp*"//	endif	suffix = "*_disp*"if (event == 1 || event == 4)	// update wave-list		Wave /t w_dispNames=DFR_normal:w_dispNames		Wave w_dispNames_sel=DFR_normal:w_dispNames_sel		DFREF DFR_RIXS=$"root:RIXS_NormWaves"		SetDatafolder DFR_RIXS		String List = wavelist(suffix,";","DIMS:1")		if (strlen(List)==0)			redimension /n=(0,4),w_dispNames,w_dispNames_sel			//SetDatafolder DF			//return 0		else		SListToWave(List,1,";",Nan,Nan)		Wave /t w_Stringlist		redimension /n=(numpnts(w_Stringlist),4),w_dispNames,w_dispNames_sel		w_dispNames[][0]=w_Stringlist[p]		KillWaves/Z w_StringList	// Commented by W.S. Lee 02/18/2023    //	    	variable index//		do //			Wave dispWave=DFR_RIXS:$w_dispNames[index][0]//			//readDispwave_note(dispWave)//			Wave /Z /T w_readingresult//			w_dispNames[index][1]=w_ReadingResult[4]//			w_dispNames[index][2]=w_ReadingResult[5]//			w_dispNames[index][3]=w_ReadingResult[6]//		//			index+=1//		while (index<dimsize(w_dispNames,0))//		Killwaves /Z w_readingresult		endif 	endif		//Commented by WSLee 12/22/2022//	if (event == 1 || event == 4)	// update wave-list//		Wave /t w_dispNames=DFR_normal:w_dispNames//		Wave w_dispNames_sel=DFR_normal:w_dispNames_sel//		DFREF DFR_gold=$"root:gold:Normwaves"//		SetDatafolder DFR_gold//		String List = wavelist(suffix,";","DIMS:1")//List_of_waves("root:carpets:normalized:NormWaves:", suffix, 1, 0)//		if (strlen(List)==0)//			redimension /n=(0,4),w_dispNames,w_dispNames_sel//			//SetDatafolder DF//			//return 0//		else//		SListToWave(List,1,";",Nan,Nan)//		Wave /t w_Stringlist//		redimension /n=(numpnts(w_Stringlist),4),w_dispNames,w_dispNames_sel//		w_dispNames[][0]=w_Stringlist[p]//		KillWaves/Z w_StringList//	    //	    	variable index//		do //			Wave dispWave=DFR_gold:$w_dispNames[index][0]//			Goldpanel#readDispwave_note(dispWave)//			Wave /Z /T w_readingresult//			w_dispNames[index][1]=w_ReadingResult[4]//			w_dispNames[index][2]=w_ReadingResult[5]//			w_dispNames[index][3]=w_ReadingResult[6]//		//			index+=1//		while (index<dimsize(w_dispNames,0))//		Killwaves /Z w_readingresult//		endif// 	endif//	//	if (event == 4)	// update top-path and display-wave//		SVAR topItem = DFR_normal:gs_TopDispPath//		//		Wave /T w_dispN=DFR_normal:w_dispNames//		topItem = "root:gold:Normwaves:"+w_dispN[row][0]//		WAVE w_norm =DFR_normal:w_norm//		WAVE temp = $topItem//		if (waveexists(temp))//			Duplicate/o temp DFR_normal:w_norm//		else//			duplicate/o /R=[][0] w_image w_norm//			w_norm=1//		endif//		if (dispflag)//		NVAR normEF=DFR_normal:gv_disp_EF//		normEF=mean(w_norm)//		endif//	endif	SetDatafolder DF	return 0End